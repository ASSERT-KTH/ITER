bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length  -  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset().length  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset().length  -  1;	  int    zIndex    =    getRhsOffset().length;    	non-compiled	[CE]  	53	None	replace
2	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length  +  1;  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset().length  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset().length  +  1;	  int    zIndex    =    getRhsOffset().length;    	non-compiled	[CE]  	53	None	replace
3	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex().length;  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex().length;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex().length;	  int    zIndex    =    getRhsOffset().length;    	non-compiled	[CE]  	53	None	replace
4	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getColumn());  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getColumn());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getColumn());	  int    numArtificialVariables    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  	57	None	replace
5	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getColumnOffset());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getColumnOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getColumnOffset());	  int    numArtificialVariables    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
6	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getMatrixOffset());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getMatrixOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getMatrixOffset());	  int    numArtificialVariables    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
7	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getSize());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getSize());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getSize());	  int    numArtificialVariables    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
8	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getSize();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getSize();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  +  getSize();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
9	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getSize();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getSize();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  *  getSize();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
10	[BUG]  [BUGGY]  if(numArtificialVariables!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  if(numArtificialVariables!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ",       ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
11	[BUG]  [BUGGY]  slackVar  =  getRhsVisible()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVisible()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVisible()  +  1;	  slackVar    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  slackVar  =  getSelectedRhsVisible();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getSelectedRhsVisible();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getSelectedRhsVisible();	  slackVar    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  rimVariables(matrix,  numSlackVariables);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(matrix,  numSlackVariables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(matrix,  numSlackVariables);	  rimVariables(numSlackVariables);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
14	[BUG]  [BUGGY]  rimVariables(variables);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(variables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(variables);	  rimVariables(numSlackVariables);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
15	[BUG]  [BUGGY]  rimVariables(matrix);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(matrix);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(matrix);	  rimVariables(numSlackVariables);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
16	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  int  row  =  getRowIndex();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowIndex();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowIndex();	  int    row    =    getRowOffset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
21	[BUG]  [BUGGY]  int  row  =  getRowCount();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowCount();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowCount();	  int    row    =    getRowOffset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
22	[BUG]  [BUGGY]  int  row  =  getRowOffset()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowOffset()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowOffset()  +  1;	  int    row    =    getRowOffset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
23	[BUG]  [BUGGY]  throw  new  RuntimeException( " "  +  getRhsOffset());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  RuntimeException( " "  +  getRhsOffset());  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  RuntimeException( " "  +  getRhsOffset());	  throw    new    RuntimeException(   "   ".equals(getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';');  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';');  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';');  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  	36	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  	36	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  >>  ';'  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  >>  ';'  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  >>  ';'	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
28	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  getRhsOffset()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getRhsOffset()  +  1;	  int    numSlackVariables    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
29	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getNumArtificialVariables();	  int    numSlackVariables    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
30	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsOffset()  -  1;  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  getRhsOffset()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getRhsOffset()  -  1;	  int    numSlackVariables    =    getRhsOffset();    	non-compiled	[CE]  ']'  expected	59	None	replace
31	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  -  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getColumnIndex();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getColumnIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsOffset()  /  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsOffset()  /  1;	  int    row    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
34	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ".equals(numArtificialVariables));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " ".equals(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  RuntimeException( " ".equals(numArtificialVariables));	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ",  numArtificialVariables);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " ",  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  RuntimeException( " ",  numArtificialVariables);	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
37	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
38	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
39	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getLeftOffset());    }    	non-compiled	[CE]  	19	None	replace
40	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getLeftOffset());    }    	non-compiled	[CE]  	76	None	replace
41	[BUG]  [BUGGY]  int  row  =  getLeftOffset();  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getLeftOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getLeftOffset();	  int    row    =    getRhsOffset()    -    2;    	non-compiled	[CE]  	40	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables.length  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables.length  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables.length  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  	29	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  	29	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  	29	None	replace
45	[BUG]  [BUGGY]  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());	  for(int    i    =    0;    i    <    numDecisionVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	84	None	replace
46	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	14	None	replace
47	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	14	None	replace
48	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	14	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	14	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	15	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	15	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	15	None	replace
53	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables.length  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables.length  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables.length  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	28	None	replace
54	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(0,  getRhsOffset());  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(0,  getRhsOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(0,  getRhsOffset());	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  	65	None	replace
55	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(0  +  1,  getRhsOffset());  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(0  +  1,  getRhsOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(0  +  1,  getRhsOffset());	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  	65	None	replace
56	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(n  +  1,  getRhsOffset());  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(n  +  1,  getRhsOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(n  +  1,  getRhsOffset());	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  	65	None	replace
57	[BUG]  [BUGGY]  int  zIndex  =  getRowIndex()  +  1;  [CE]  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRowIndex()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRowIndex()  +  1;	  int    zIndex    =    getRowIndex();    	non-compiled	[CE]  	79	None	replace
58	[BUG]  [BUGGY]  int  zIndex  =  getRowIndex()  -  1;  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRowIndex()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRowIndex()  -  1;	  int    zIndex    =    getRowIndex();    	non-compiled	[CE]  	79	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
60	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
61	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSize()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSize()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getSize()  -  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
62	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getRhsOffset()  -  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    -    1;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
63	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  	83	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  	83	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  	63	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  	63	None	replace
69	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  	63	None	replace
70	[BUG]  [BUGGY]  if(numArtificialVariables  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  if(numArtificialVariables  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    IllegalArgumentException(   "       ");    	non-compiled	[CE]  	67	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	21	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	21	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	21	None	replace
74	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	21	None	replace
75	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getColumnOffset());    }    	non-compiled	[CE]  	81	None	replace
76	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getColumnOffset());    }    	non-compiled	[CE]  	81	None	replace
77	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getColumnOffset());    }    	non-compiled	[CE]  	81	None	replace
78	[BUG]  [BUGGY]  int  row  =  getRhsColumn()  -  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsColumn()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsColumn()  -  1;	  int    row    =    getRhsOffset()    -    1;    	non-compiled	[CE]  	39	None	replace
79	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	17	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(numArtificialVariables);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalStateException( " ").equals(numArtificialVariables);	  throw    new    IllegalStateException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  ']'  expected	78	None	replace
81	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  numArtificialVariables);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalStateException( " "  +  numArtificialVariables);	  throw    new    IllegalStateException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
82	[BUG]  [BUGGY]  slackVar  =  getSlackVariable();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getSlackVariable();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getSlackVariable();	  slackVar    =    getRhsVariable();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
83	[BUG]  [BUGGY]  slackVar  =  getStandardVariable();  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getStandardVariable();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getStandardVariable();	  slackVar    =    getRhsVariable();    	non-compiled	[CE]  	54	None	replace
84	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  	82	None	replace
85	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
86	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  	82	None	replace
87	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  	82	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	1	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  	23	None	replace
90	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  	23	None	replace
91	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  	23	None	replace
92	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	2	None	replace
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  numArtificialVariables);  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalArgumentException( " "  +  numArtificialVariables);	  throw    new    IllegalArgumentException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  	47	None	replace
94	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(numArtificialVariables);  [CE]  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalArgumentException( " ").equals(numArtificialVariables);	  throw    new    IllegalArgumentException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  	47	None	replace
95	[BUG]  [BUGGY]  int  zIndex  =  getColumnsOffset()  -  1;  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getColumnsOffset()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getColumnsOffset()  -  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  	51	None	replace
96	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	22	None	replace
97	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	22	None	replace
98	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ".equals(numArtificialVariables));  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ".equals(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  UnsupportedOperationException( " ".equals(numArtificialVariables));	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  	75	None	replace
99	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  numArtificialVariables);  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  UnsupportedOperationException( " ",  numArtificialVariables);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  	75	None	replace
100	[BUG]  [BUGGY]  slackVar  =  getRhsVisibility()  +  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVisibility()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVisibility()  +  1;	  slackVar    =    getRhsVisibility();    	non-compiled	[CE]  	9	None	replace
101	[BUG]  [BUGGY]  slackVar  =  getStandardVisibility();  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getStandardVisibility();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getStandardVisibility();	  slackVar    =    getRhsVisibility();    	non-compiled	[CE]  	9	None	replace
102	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  /  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  /  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  /  1;	  int    zIndex    =    getRhsOffset()    *    1;    	non-compiled	[CE]  	72	None	replace
103	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  /  1;  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex()  /  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  /  1;	  int    zIndex    =    getRhsOffset()    *    1;    	non-compiled	[CE]  	72	None	replace
104	[BUG]  [BUGGY]  ||  numArtificialVariables  ==  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||  numArtificialVariables  ==  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||  numArtificialVariables  ==  1)  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	34	None	replace
105	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  1))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  1))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  1))  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	34	None	replace
106	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  1)&&(numSlackVariables  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  1)&&(numSlackVariables  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  1)&&(numSlackVariables  >  0))  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	34	None	replace
107	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  1)&&(numSlackVariables  <  1))  {  throw  new  IllegalStateException( " ");  }  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  1)&&(numSlackVariables  <  1))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  1)&&(numSlackVariables  <  1))  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ']'  expected	34	None	replace
108	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	16	None	replace
109	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
110	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
112	[BUG]  [BUGGY]  int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
115	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  invalid  method  declaration;  return  type  required  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
116	[BUG]  [BUGGY]  if(numArtificialVariables  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  if(numArtificialVariables  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
117	[BUG]  [BUGGY]  int  row  =  getRowsOffset()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowsOffset()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowsOffset()  -  1;	  int    row    =    getRowsOffset();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
118	[BUG]  [BUGGY]  int  row  =  getRowsOffset()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowsOffset()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowsOffset()  +  1;	  int    row    =    getRowsOffset();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
119	[BUG]  [BUGGY]  int  row  =  getRowsOffset()  -  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowsOffset()  -  2;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowsOffset()  -  2;	  int    row    =    getRowsOffset();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
120	[BUG]  [BUGGY]  int  numArtificialVariables  =  constrainToNonNegativeFunction.size()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constrainToNonNegativeFunction.size()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constrainToNonNegativeFunction.size()  -  1;	  int    numArtificialVariables    =    constrainToNonNegativeFunction.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
121	[BUG]  [BUGGY]  int  numArtificialVariables  =  constrainToNonNegativeFunction.size()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constrainToNonNegativeFunction.size()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constrainToNonNegativeFunction.size()  +  1;	  int    numArtificialVariables    =    constrainToNonNegativeFunction.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][2]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
123	[BUG]  [BUGGY]  slackVar  =  getSlackVariables();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getSlackVariables();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getSlackVariables();	  slackVar    =    getRhsVariables();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
124	[BUG]  [BUGGY]  slackVar  =  getStandardVariables();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getStandardVariables();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getStandardVariables();	  slackVar    =    getRhsVariables();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
127	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  *  getRhsOffset();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  *  getRhsOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  *  getRhsOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
128	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnsOffset();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnsOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getColumnsOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
129	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(numArtificialVariables));  [CE]  invalid  method  declaration;  return  type  required  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(numArtificialVariables));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
130	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  numArtificialVariables);  [CE]  invalid  method  declaration;  return  type  required  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  numArtificialVariables);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
135	[BUG]  [BUGGY]  Parchet.checkState(numArtificialVariables  ==  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Parchet.checkState(numArtificialVariables  ==  0);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Parchet.checkState(numArtificialVariables  ==  0);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
136	[BUG]  [BUGGY]  allowNonNegativeFunction(numArtificialVariables);  [CE]  invalid  method  declaration;  return  type  required  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction(numArtificialVariables);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
137	[BUG]  [BUGGY]  Parchet.checkState(numArtificialVariables!=  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Parchet.checkState(numArtificialVariables!=  0);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Parchet.checkState(numArtificialVariables!=  0);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
138	[BUG]  [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ");  [CE]  invalid  method  declaration;  return  type  required  [FE]              IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction( "ArtificialVariables ");	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
141	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
142	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
143	[BUG]  [BUGGY]  ||  numArtificialVariables  ==  1)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||  numArtificialVariables  ==  1)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||  numArtificialVariables  ==  1)  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
144	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  1)&&(numSlackVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  1)&&(numSlackVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  1)&&(numSlackVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
145	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  1))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  1))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  1))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
146	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numArtificialVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numArtificialVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numArtificialVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
147	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  For(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
148	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
149	[BUG]  [BUGGY]  rimVariables(numArtificialVariables,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(numArtificialVariables,  false);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(numArtificialVariables,  false);	  rimVariables(numArtificialVariables);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
150	[BUG]  [BUGGY]  rimVariables(numArtificialVariables,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(numArtificialVariables,  0);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(numArtificialVariables,  0);	  rimVariables(numArtificialVariables);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
151	[BUG]  [BUGGY]  rimVariables(numArtificialVariables,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(numArtificialVariables,  null);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(numArtificialVariables,  null);	  rimVariables(numArtificialVariables);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
152	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numSlackVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
153	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables  -  1;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
154	[BUG]  [BUGGY]  int  numSlackVariables  =  constraints.size()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  constraints.size()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  constraints.size()  -  1;	  int    numSlackVariables    =    constraints.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
155	[BUG]  [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  this.artificialVariables.size();	  int    numSlackVariables    =    constraints.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
156	[BUG]  [BUGGY]  int  numSlackVariables  =  constraints.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  constraints.size()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  constraints.size()  +  1;	  int    numSlackVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
157	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  RuntimeException( " "));	  Throwables.throw(new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
158	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "  +  numArtificialVariables));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "  +  numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  RuntimeException( " "  +  numArtificialVariables));	  Throwables.throw(new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
159	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "  +  numArtificialVariables  + ") ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "  +  numArtificialVariables  + ") ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  RuntimeException( " "  +  numArtificialVariables  + ") ");	  Throwables.throw(new    RuntimeException(   "   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
160	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(numArtificialVariables));  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(numArtificialVariables));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
161	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  numArtificialVariables);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalStateException( " ",  numArtificialVariables);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
162	[BUG]  [BUGGY]  ||  numArtificialVariables  ==  0)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||  numArtificialVariables  ==  0)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||  numArtificialVariables  ==  0)  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
163	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  2)||(numArtificialVariables  >  1))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  2)||(numArtificialVariables  >  1))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numSlackVariables  <  2)||(numArtificialVariables  >  1))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
164	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numSlackVariables  >  0))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
165	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  1))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  1))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numSlackVariables  <  1))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
166	[BUG]  [BUGGY]  throw  new  RuntimeException( " "  +  numArtificialVariables);  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  RuntimeException( " "  +  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  RuntimeException( " "  +  numArtificialVariables);	  throw    new    RuntimeException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  	64	None	replace
167	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j].[j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	77	None	replace
168	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j].[j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	77	None	replace
169	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j].[j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	77	None	replace
170	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j].[j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	77	None	replace
171	[BUG]  [BUGGY]  int  numArtificialVariables  =  constraints.size()  -  1;  [CE]  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constraints.size()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constraints.size()  -  1;	  int    numArtificialVariables    =    constraints.size();    	non-compiled	[CE]  	56	None	replace
172	[BUG]  [BUGGY]  int  numArtificialVariables  =  this.constraints.size();  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  this.constraints.size();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  this.constraints.size();	  int    numArtificialVariables    =    constraints.size();    	non-compiled	[CE]  	56	None	replace
173	[BUG]  [BUGGY]  int  numArtificialVariables  =  constraints.size()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constraints.size()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constraints.size()  +  1;	  int    numArtificialVariables    =    constraints.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
174	[BUG]  [BUGGY]  ||  numArtificialVariables  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||  numArtificialVariables  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||  numArtificialVariables  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	32	None	replace
175	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  2)||(numArtificialVariables  >  1))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  2)||(numArtificialVariables  >  1))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numSlackVariables  <  2)||(numArtificialVariables  >  1))  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	32	None	replace
176	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numSlackVariables  >  0))  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ']'  expected	32	None	replace
177	[BUG]  [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  1))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  ||(numArtificialVariables  ==  0  &&  numSlackVariables  <  1))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	||(numArtificialVariables  ==  0  &&  numSlackVariables  <  1))  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
178	[BUG]  [BUGGY]  slackVar  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getLeftOffset()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getLeftOffset()  +  1;	  slackVar    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
179	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [CE]  ']'  expected  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  IllegalArgumentException( " "));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  ']'  expected	48	None	replace
180	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  numArtificialVariables));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  numArtificialVariables));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
181	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  numArtificialVariables  + ") ");  [CE]  ']'  expected  [FE]                IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  numArtificialVariables  + ") ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  numArtificialVariables  + ") ");	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  ']'  expected	48	None	replace
182	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  +  1;  [CE]  ']'  expected  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  *  getZIndex()  +  1;	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  ']'  expected	45	None	replace
183	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  /  getZIndex();  [CE]  ']'  expected  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  /  getZIndex();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  /  getZIndex();	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  ']'  expected	45	None	replace
184	[BUG]  [BUGGY]  int  row  =  getRhsRow();  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsRow();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsRow();	  int    row    =    getRhsColumn();    	non-compiled	[CE]  ']'  expected	41	None	replace
185	[BUG]  [BUGGY]  int  row  =  getRhsRange();  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsRange();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsRange();	  int    row    =    getRhsColumn();    	non-compiled	[CE]  ']'  expected	41	None	replace
186	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  *  1;  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  *  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getZIndex()  *  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    +    1;    	non-compiled	[CE]  ']'  expected	68	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  ']'  expected	62	None	replace
188	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  ']'  expected	62	None	replace
189	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  *  getZIndex();  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex()  *  getZIndex();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  *  getZIndex();	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  ']'  expected	42	None	replace
190	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getOffset();  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  +  getOffset();	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  ']'  expected	42	None	replace
191	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Integer  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Integer  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  For(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	25	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
193	[BUG]  [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
194	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
195	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
196	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(numArtificialVariables));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalStateException( " ").equals(numArtificialVariables));	  throw    new    IllegalStateException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
197	[BUG]  [BUGGY]  rimVariables(numDecisionVariables);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(numDecisionVariables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(numDecisionVariables);	  rimVariables(numArtificialVariables);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
198	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getMatrix();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getMatrix();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getMatrix();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
199	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getItemCount();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getItemCount();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getItemCount();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
200	[BUG]  [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
201	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnOffset();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getColumnOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
207	[BUG]  [BUGGY]  slackVar  =  getRhsVariable(numArtificialVariables);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVariable(numArtificialVariables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVariable(numArtificialVariables);	  slackVar    =    getRhsVariable();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
208	[BUG]  [BUGGY]  slackVar  =  getRhsVariable(0,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVariable(0,  0);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVariable(0,  0);	  slackVar    =    getRhsVariable();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
209	[BUG]  [BUGGY]  NeighborVariables  numArtificialVariables  =  new  NeighborVariables();  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  NeighborVariables  numArtificialVariables  =  new  NeighborVariables();  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	NeighborVariables  numArtificialVariables  =  new  NeighborVariables();	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
210	[BUG]  [BUGGY]  NeighborVariables  numArtificialVariables  =  getNeighborVariables();  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  NeighborVariables  numArtificialVariables  =  getNeighborVariables();  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	NeighborVariables  numArtificialVariables  =  getNeighborVariables();	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
211	[BUG]  [BUGGY]  NeighborVariables  numArtificialVariables  =  getNegativeVariables();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  NeighborVariables  numArtificialVariables  =  getNegativeVariables();  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	NeighborVariables  numArtificialVariables  =  getNegativeVariables();	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
212	[BUG]  [BUGGY]  MutableMap.remove(numArtificialVariables);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  MutableMap.remove(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	MutableMap.remove(numArtificialVariables);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
213	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "),  numArtificialVariables);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "),  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  RuntimeException( " "),  numArtificialVariables);	  Throwables.throw(new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
214	[BUG]  [BUGGY]  int  numSlackVariables  =  this.constraints.size();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  this.constraints.size();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  this.constraints.size();	  int    numSlackVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
215	[BUG]  [BUGGY]  int  numSlackVariables  =  this.restrictedArtificialVariables.size();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  this.restrictedArtificialVariables.size();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  this.restrictedArtificialVariables.size();	  int    numSlackVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  ']'  expected	62	None	replace
217	[BUG]  [BUGGY]  int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  ']'  expected	62	None	replace
218	[BUG]  [BUGGY]  MutableMap.this.removeAll(numArtificialVariables);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  MutableMap.this.removeAll(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	MutableMap.this.removeAll(numArtificialVariables);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ']'  expected	32	None	replace
219	[BUG]  [BUGGY]  MutableMap.this.remove(numArtificialVariables);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  MutableMap.this.remove(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	MutableMap.this.remove(numArtificialVariables);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ']'  expected	32	None	replace
220	[BUG]  [BUGGY]  allowReturn(numArtificialVariables);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowReturn(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowReturn(numArtificialVariables);	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
221	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsIndex();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsIndex();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getRhsIndex();	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
222	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex()  +  1;  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  +  getZIndex()  +  1;	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  ']'  expected	42	None	replace
223	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Integer  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Integer  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	14	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(numArtificialVariables));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalArgumentException( " ").equals(numArtificialVariables));	  throw    new    IllegalArgumentException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
225	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getDecisionVariables());  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getDecisionVariables());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getDecisionVariables());	  int    numArtificialVariables    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  ']'  expected	57	None	replace
226	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getRhsOffset()  -  1);	  int    numArtificialVariables    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  ']'  expected	57	None	replace
227	[BUG]  [BUGGY]  int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numDecisionVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	84	None	replace
228	[BUG]  [BUGGY]  slackVar  =  getRhsVisibility()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVisibility()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVisibility()  -  1;	  slackVar    =    getRhsVisibility();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
229	[BUG]  [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
230	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
231	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Integer  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Integer  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
232	[BUG]  [BUGGY]  int  numArtificialVariables  =  constraints.remove(numArtificialVariables);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constraints.remove(numArtificialVariables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constraints.remove(numArtificialVariables);	  int    numArtificialVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
233	[BUG]  [BUGGY]  int  numArtificialVariables  =  constraints.remove(0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constraints.remove(0);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constraints.remove(0);	  int    numArtificialVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
234	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j].[j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
235	[BUG]  [BUGGY]  int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j].[j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
236	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
238	[BUG]  [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
239	[BUG]  [BUGGY]  slackVar  =  getRhsVariables()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVariables()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVariables()  +  1;	  slackVar    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
241	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
242	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numSlackVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
243	[BUG]  [BUGGY]  int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numSlackVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
244	[BUG]  [BUGGY]  int  row  =  getRhsRangeOffset();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsRangeOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsRangeOffset();	  int    row    =    getRhsColumn();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
246	[BUG]  [BUGGY]  NullPointer.removeNull(numArtificialVariables);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  NullPointer.removeNull(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	NullPointer.removeNull(numArtificialVariables);	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
247	[BUG]  [BUGGY]  NullPointer.remove(numArtificialVariables);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  NullPointer.remove(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	NullPointer.remove(numArtificialVariables);	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
248	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
249	[BUG]  [BUGGY]  int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables.length;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
250	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsOffset()  -  1  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsOffset()  -  1  +  1;	  int    row    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
251	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(numArtificialVariables));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(numArtificialVariables));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
252	[BUG]  [BUGGY]  int  zIndex  =  getRawOffset()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRawOffset()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRawOffset()  +  1;	  int    zIndex    =    getRawOffset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
253	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  *  getZIndex()  -  1;	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
254	[BUG]  [BUGGY]  int  numArtificialVariables  =  getNumArtificialVariables();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getNumArtificialVariables();  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getNumArtificialVariables();	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
255	[BUG]  [BUGGY]  int  numArtificialVariables  =  getRhsOffset();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getRhsOffset();  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getRhsOffset();	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
256	[BUG]  [BUGGY]  safeTree();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  safeTree();  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	safeTree();	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
257	[BUG]  [BUGGY]  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  IllegalArgumentException( " ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
258	[BUG]  [BUGGY]  if(numArtificialVariables  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  if(numArtificialVariables  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
259	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  *  2;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  *  2;	  int    zIndex    =    getRhsOffset()    *    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
260	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
261	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
262	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
263	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
264	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
265	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  numArtificialVariables);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  numArtificialVariables);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
266	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length  -  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset().length  -  2;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset().length  -  2;	  int    zIndex    =    getRhsOffset().length;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
267	[BUG]  [BUGGY]  slackVar  =  getRhsVisible()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  slackVar  =  getRhsVisible()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVisible()  -  1;	  slackVar    =    getRhsVisible();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
268	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getColumnOffset());    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
269	[BUG]  [BUGGY]  int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getColumnOffset());    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
270	[BUG]  [BUGGY]  int  row  =  getRowOffset()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRowOffset()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowOffset()  -  1;	  int    row    =    getRowOffset();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
271	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsDecisionVariables();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  getRhsDecisionVariables();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getRhsDecisionVariables();	  int    numSlackVariables    =    getRhsOffset();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
272	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsVariables();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  getRhsVariables();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getRhsVariables();	  int    numSlackVariables    =    getRhsOffset();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    2,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
274	[BUG]  [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
275	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(!strictToNonNegativeFunction)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(!strictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(!strictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
276	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
277	[BUG]  [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
278	[BUG]  [BUGGY]  allowNonNegativeFunction(Math.abs(numArtificialVariables));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction(Math.abs(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction(Math.abs(numArtificialVariables));	  if(numArtificialVariables    ==    1)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
279	[BUG]  [BUGGY]  int  numArtificialVariables  =  constraints.get(0);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  constraints.get(0);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constraints.get(0);	  int    numArtificialVariables    =    constraints.size();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
280	[BUG]  [BUGGY]  int  numArtificialVariables  =  this.restrictToNonNegativeFunction.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  this.restrictToNonNegativeFunction.size();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  this.restrictToNonNegativeFunction.size();	  int    numArtificialVariables    =    constrainToNonNegativeFunction.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
281	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getOffset();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  +  getOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
282	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getColumnOffset());    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
283	[BUG]  [BUGGY]  rimArtificialVariables(numDecisionVariables);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimArtificialVariables(numDecisionVariables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimArtificialVariables(numDecisionVariables);	  rimVariables(numArtificialVariables);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
284	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getOffset());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
285	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
286	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';'  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';'  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';'	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';'  expected;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';'  expected;  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset()  -  ';'  expected;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
288	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
289	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  UnsupportedOperationException( " ")	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
290	[BUG]  [BUGGY]  throw  new  RuntimeException( " ").equals(getRhsOffset());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  RuntimeException( " ").equals(getRhsOffset());  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  RuntimeException( " ").equals(getRhsOffset());	  throw    new    RuntimeException(   "   ".equals(getRhsOffset()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
291	[BUG]  [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  this.restrictToNonNegativeFunction.size();	  int    numSlackVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
292	[BUG]  [BUGGY]  rimVariables(mapping,  numSlackVariables);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  rimVariables(mapping,  numSlackVariables);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(mapping,  numSlackVariables);	  rimVariables(numSlackVariables);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
293	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getItemCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getItemCount()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getItemCount()  -  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
294	[BUG]  [BUGGY]  MutableMap.this.removeAll(getRhsOffset(),  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  MutableMap.this.removeAll(getRhsOffset(),  getRhsOffset());  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	MutableMap.this.removeAll(getRhsOffset(),  getRhsOffset());	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
295	[BUG]  [BUGGY]  allowReturnValues(numArtificialVariables);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowReturnValues(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowReturnValues(numArtificialVariables);	  if(numArtificialVariables    ==    1)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
297	[BUG]  [BUGGY]  int  numSlackVariables  =  getDecisionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numSlackVariables  =  getDecisionVariables();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getDecisionVariables();	  int    numSlackVariables    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
298	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getDecisionVariables());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getDecisionVariables());	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
299	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getSize());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getSize());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getSize());	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
300	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getRhsOffset()  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getRhsOffset()  -  1);  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getRhsOffset()  -  1);	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  ')'  expected	65	None	replace
301	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getColumnOffset());  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getColumnOffset());	  int    numArtificialVariables    =    getEntry(numArtificialVariables    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
302	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ", ");  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalArgumentException( ", ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ",       ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
303	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  IllegalStateException( " ");	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
304	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalArgumentException( " ".);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
305	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	  for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getSlackOffset());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
306	[BUG]  [BUGGY]  throw  new  RuntimeException( " ").equals(numArtificialVariables);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  RuntimeException( " ").equals(numArtificialVariables);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  RuntimeException( " ").equals(numArtificialVariables);	  throw    new    RuntimeException(   "   ".equals(numArtificialVariables));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
307	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getLeftOffset());    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
308	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  [Delete]  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	[Delete]	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
309	[BUG]  [BUGGY]  allowNonNegative(false)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegative(false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegative(false)  {  throw  new  IllegalStateException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
310	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  +  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getRhsOffset()  +  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    +    1;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
311	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".);  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalArgumentException( " ".);	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
312	[BUG]  [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  IllegalArgumentException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
313	[BUG]  [BUGGY]  allowNonNegative(false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegative(false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegative(false)  {  throw  new  IllegalArgumentException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
314	[BUG]  [BUGGY]  allowNonNegativeFunction(JsonNonNegativeFunction.create( "ArtificialVariables "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction(JsonNonNegativeFunction.create( "ArtificialVariables "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction(JsonNonNegativeFunction.create( "ArtificialVariables "))  {  throw  new  IllegalArgumentException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
315	[BUG]  [BUGGY]  int  zIndex  =  getRawOffset()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  zIndex  =  getRawOffset()  -  1;  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRawOffset()  -  1;	  int    zIndex    =    getRawOffset();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
316	[BUG]  [BUGGY]  int  row  =  getRhsRhsOffset();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsRhsOffset();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsRhsOffset();	  int    row    =    getRhsColumn();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
317	[BUG]  [BUGGY]  int  row  =  getRhsRowIndex();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  int  row  =  getRhsRowIndex();  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsRowIndex();	  int    row    =    getRhsColumn();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
318	[BUG]  [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction( "ArtificialVariables ")  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
319	[BUG]  [BUGGY]  allowNonNegativeFunction( "[ArtificialVariables] ")  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction( "[ArtificialVariables] ")  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction( "[ArtificialVariables] ")  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
320	[BUG]  [BUGGY]  allowNonNegativeFunction( "ArtificialVariables "))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  allowNonNegativeFunction( "ArtificialVariables "))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	allowNonNegativeFunction( "ArtificialVariables "))  {  throw  new  UnsupportedOperationException( " ");  }	  if(numArtificialVariables    ==    0)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!strictToNonNegativeFunction)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!strictToNonNegativeFunction)  {  return;  }  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!strictToNonNegativeFunction)  {  return;  }	  for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    if(!restrictToNonNegativeFunction)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
322	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " ",  numArtificialVariables));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " ",  numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  RuntimeException( " ",  numArtificialVariables));	  Throwables.throw(new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
323	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ".equalsIgnoreCase(numArtificialVariables));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " ".equalsIgnoreCase(numArtificialVariables));  [BUGGY]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  RuntimeException( " ".equalsIgnoreCase(numArtificialVariables));	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
