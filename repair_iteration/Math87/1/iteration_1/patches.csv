bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	12	None	replace
2	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	12	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	12	None	replace
4	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	12	None	replace
5	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " ");  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  Throwables.throw(new  RuntimeException( " ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  RuntimeException( " ");	  throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  ']'  expected	5	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ");  [CE]  ']'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  Throwables.throw  new  RuntimeException( " ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  RuntimeException( " ");	  throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  ']'  expected	5	None	replace
7	[BUG]  [BUGGY]  slackVar  =  getRhsVisible();  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  slackVar  =  getRhsVisible();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVisible();	      slackVar    =    getRhsOffset();    	non-compiled	[CE]  ']'  expected	15	None	replace
8	[BUG]  [BUGGY]  slackVar  =  getRhsOffset()  +  1;  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  slackVar  =  getRhsOffset()  +  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsOffset()  +  1;	      slackVar    =    getRhsOffset();    	non-compiled	[CE]  ']'  expected	15	None	replace
9	[BUG]  [BUGGY]  slackVar  =  getRhsVisibility();  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  slackVar  =  getRhsVisibility();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVisibility();	      slackVar    =    getRhsOffset();    	non-compiled	[CE]  ']'  expected	15	None	replace
10	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  ']'  expected  [FE]    IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  ']'  expected	1	None	add
11	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  ']'  expected  [FE]      IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  ']'  expected	1	None	add
12	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ",   ");  [CE]  ']'  expected  [FE]        IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ",   ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( ",   ");	  	non-compiled	[CE]  ']'  expected	1	None	add
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	11	None	replace
14	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	11	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                    AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	11	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                      AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	11	None	replace
17	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	8	None	replace
18	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	8	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	8	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [CE]  ']'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	8	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	9	None	replace
22	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	9	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  ']'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	9	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  ']'  expected  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	9	None	replace
25	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	13	None	replace
26	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	13	None	replace
27	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ']'  expected	13	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ']'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      	non-compiled	[CE]  ']'  expected	6	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  ']'  expected  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());	      	non-compiled	[CE]  ']'  expected	6	None	replace
30	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  if(numArtificialVariables  ==  0)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  0)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  ']'  expected	4	None	replace
31	[BUG]  [BUGGY]  if(numArtificialVariables  ==  1)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  if(numArtificialVariables  ==  1)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  1)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  ']'  expected	4	None	replace
32	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  if(numArtificialVariables  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  0)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  ';'  expected	3	None	replace
33	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  ';'  expected	3	None	replace
34	[BUG]  [BUGGY]  if(numArtificialVariables  ==  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  if(numArtificialVariables  ==  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  1)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  ';'  expected	3	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getLeftOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ';'  expected	7	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOff	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ';'  expected	7	None	replace
37	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsIndex();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex();	      int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  ';'  expected	17	None	replace
38	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  +  1;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  row  =  getRhsOffset()  +  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsOffset()  +  1;	      int    row    =    getRhsOffset();    	non-compiled	[CE]  ';'  expected	16	None	replace
39	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  1;  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  row  =  getRhsOffset()  -  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsOffset()  -  1;	      int    row    =    getRhsOffset();    	non-compiled	[CE]  ';'  expected	16	None	replace
40	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  2;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  row  =  getRhsOffset()  -  2;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsOffset()  -  2;	      int    row    =    getRhsOffset();    	non-compiled	[CE]  ';'  expected	16	None	replace
41	[BUG]  [BUGGY]  int  row  =  getRhsColumn();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  row  =  getRhsColumn();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRhsColumn();	      int    row    =    getRhsOffset();    	non-compiled	[CE]  ';'  expected	16	None	replace
42	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  +  getZIndex();	      int    zIndex    =    getRhsOffset()    +    getZIndex();    	non-compiled	[CE]  ';'  expected	18	None	replace
43	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getZIndex()  +  getRhsOffset();	      int    zIndex    =    getRhsOffset()    +    getZIndex();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSize();  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSize();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getSize();	      int    zIndex    =    getRhsOffset()    +    getZIndex();    	non-compiled	[CE]  ';'  expected	18	None	replace
45	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex();  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  *  getZIndex();	      int    zIndex    =    getRhsOffset()    +    getZIndex();    	non-compiled	[CE]  ';'  expected	18	None	replace
46	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  ';'  expected	2	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(numArtificialVariables));  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(numArtificialVariables));  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalArgumentException( " ".equals(numArtificialVariables));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  ';'  expected	2	None	replace
48	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ");  [CE]  [FE]        IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw(new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	2	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][2]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][1]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  ';'  expected	10	None	replace
50	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsIndex()  +  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  ';'  expected	14	None	replace
51	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  -  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  ';'  expected	14	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numSlackVariables.length;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      	non-compiled	[CE]  ';'  expected	6	None	replace
53	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length;  [CE]  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset().length;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset().length;	      int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  	17	None	replace
54	[BUG]  [BUGGY]  slackVar  =  getRhsVariable();  [CE]  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  slackVar  =  getRhsVariable();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVariable();	      slackVar    =    getRhsOffset();    	non-compiled	[CE]  	15	None	replace
55	[BUG]  [BUGGY]  slackVar  =  getRhsVariables();  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  slackVar  =  getRhsVariables();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	slackVar  =  getRhsVariables();	      slackVar    =    getRhsOffset();    	non-compiled	[CE]  	15	None	replace
56	[BUG]  [BUGGY]  int  numArtificialVariables  =  constraints.size();  [CE]  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  numArtificialVariables  =  constraints.size();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constraints.size();	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getRhsOffset());  [CE]  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  numArtificialVariables  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(i  +  1,  getRhsOffset());	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	7	None	replace
58	[BUG]  [BUGGY]  rimVariables(numArtificialVariables);  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  rimVariables(numArtificialVariables);  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(numArtificialVariables);	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	7	None	replace
59	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsOffset();  [CE]  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  numSlackVariables  =  getRhsOffset();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  getRhsOffset();	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	12	None	replace
60	[BUG]  [BUGGY]  int  numSlackVariables  =  constraints.size();  [CE]  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  numSlackVariables  =  constraints.size();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numSlackVariables  =  constraints.size();	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	12	None	replace
61	[BUG]  [BUGGY]  rimVariables(numSlackVariables);  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  rimVariables(numSlackVariables);  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	rimVariables(numSlackVariables);	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	12	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [CE]  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  1,  getLeftOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	11	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][0]  =  getEntry(i  +  2,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	11	None	replace
64	[BUG]  [BUGGY]  throw  new  RuntimeException( " ".equals(numArtificialVariables));  [CE]  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  RuntimeException( " ".equals(numArtificialVariables));  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  RuntimeException( " ".equals(numArtificialVariables));	  throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  	5	None	replace
65	[BUG]  [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getRhsOffset());  [CE]  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getRhsOffset());  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  getEntry(numArtificialVariables  +  1,  getRhsOffset());	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  int  numArtificialVariables  =  constrainToNonNegativeFunction.size();  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  numArtificialVariables  =  constrainToNonNegativeFunction.size();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  numArtificialVariables  =  constrainToNonNegativeFunction.size();	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	8	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  IllegalArgumentException( "   ");  [CE]  [FE]    IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  IllegalArgumentException( "   ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw    new    IllegalArgumentException(   "   ");    IllegalArgumentException( "   ");	  	non-compiled	[CE]  	1	None	add
68	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  +  1;  [CE]  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  +  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getZIndex()  +  1;	      int    zIndex    =    getRhsOffset()    +    getZIndex();    	non-compiled	[CE]  	18	None	replace
69	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  -  1;  [CE]  [FE]                  AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  -  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  +  getZIndex()  -  1;	      int    zIndex    =    getRhsOffset()    +    getZIndex();    	non-compiled	[CE]  	18	None	replace
70	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  if(numArtificialVariables  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	if(numArtificialVariables  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	2	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [CE]  [FE]                AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  if(!restrictToNonNegativeFunction)  {  return;  }	      	non-compiled	[CE]  	6	None	replace
72	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [CE]  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRhsOffset()  *  1;	      int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  	17	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  2,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	9	None	replace
74	[BUG]  [BUGGY]  throw  new  RuntimeException( " ".equals(getRhsOffset()));  [CE]  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  RuntimeException( " ".equals(getRhsOffset()));  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  RuntimeException( " ".equals(getRhsOffset()));	  throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  	5	None	replace
75	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	Throwables.throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  	4	None	replace
76	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [CE]  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getLeftOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  	13	None	replace
77	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j].[j]  =  getEntry(j  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
78	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(numArtificialVariables));  [CE]  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  throw  new  IllegalStateException( " ".equals(numArtificialVariables));  [BUGGY]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	throw  new  IllegalStateException( " ".equals(numArtificialVariables));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	3	None	replace
79	[BUG]  [BUGGY]  int  zIndex  =  getRowIndex();  [CE]  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRowIndex();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRowIndex();	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  	14	None	replace
80	[BUG]  [BUGGY]  int  zIndex  =  getRawOffset();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  zIndex  =  getRawOffset();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  zIndex  =  getRawOffset();	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
81	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  j  =  0;  j  <  numArtificialVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getSlackOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    j    =    0;    j    <    numArtificialVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numArtificialVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  2,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numArtificialVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  matrix[i][i]  =  getEntry(i  +  1,  getRhsOffset());  }	      if(numArtificialVariables    ==    0)    {    for(int    i    =    0;    i    <    numSlackVariables;    i++)    {    matrix[i][i]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  int  row  =  getRowsOffset();  [CE]  [FE]            AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  row  =  getRowsOffset();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowsOffset();	      int    row    =    getRhsOffset();    	non-compiled	[CE]  	16	None	replace
86	[BUG]  [BUGGY]  int  row  =  getRowOffset();  [CE]  [FE]              AssertionError    [CONTEXT]    protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {    [BUGGY]  int  row  =  getRowOffset();  [BUGGY]    return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	int  row  =  getRowOffset();	      int    row    =    getRhsOffset();    	non-compiled	[CE]  	16	None	replace
