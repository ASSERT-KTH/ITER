bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  /  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset()  /  1);	  Integer    baseRow    =    getBasicRow(getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset()  -  1);	  Integer    baseRow    =    getBasicRow(getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
4	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow,  basicRow);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithCapacity(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(BasicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(BasicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  basicRow);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
11	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  basicRow);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
12	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getOffset()  -  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getOffset()  -  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getOffset()  -  i);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
13	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions()  +  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions()  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getNumObjectiveFunctions()  +  i);	  Integer[]    basicRows    =    getBasicRows(i    +    i);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
14	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  +  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow  +  i);	  Integer[]    basicRows    =    getBasicRows(i    +    i);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
15	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  1,  i);	  Integer[]    basicRows    =    getBasicRows(i    +    i);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
16	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows[i]);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  mostNegative);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
18	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  i);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
19	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getOffset(),  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getOffset(),  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getOffset(),  basicRows[i]);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
23	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  basicRow);	  Set    <    Integer>    baseRows    =    Sets.newHashSetInteger(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
24	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow  +  1);	  Set    <    Integer>    baseRows    =    Sets.newHashSetInteger(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
25	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  0);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  0);	  Set    <    Integer>    baseRows    =    Sets.newHashSetInteger(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
26	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i  +  1);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
27	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow  +  1);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
28	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow,  basicRow);	  Set    <    Integer>    baseRows    =    Sets.newHashSet(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
29	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow  +  1);	  Set    <    Integer>    baseRows    =    Sets.newHashSet(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
30	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow  +  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSet(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
31	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  -  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
32	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  +  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
33	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  -  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  -  2);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow.length  -  2);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
34	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getOffset(),  basicRow.length  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getOffset(),  basicRow.length  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getOffset(),  basicRow.length  -  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
35	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i  +  1);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow  +  1);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows[i]);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  3);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  3);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  1);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(baseRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(baseRow,  getRhsOffset());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(baseRow,  getRhsOffset());	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
41	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  +  1);	  int    baseRow    =    getBasicRow(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  -  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  -  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  -  i);	  int    baseRow    =    getBasicRow(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  +  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  +  i);	  int    baseRow    =    getBasicRow(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnOffset()  -  1);	  int    baseRow    =    getBasicRow(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  +  i,  basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  +  i,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset()  +  i,  basicRow);	  Integer    baseRow    =    getBasicRow(getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  /  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  /  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset()  /  i);	  Integer    baseRow    =    getBasicRow(getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumDecisionVariables());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumDecisionVariables());	  Integer[]    basicRows    =    getBasicRows(i    +    1,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
48	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumberFunctions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumberFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumberFunctions());	  Integer[]    basicRows    =    getBasicRows(i    +    1,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
49	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumFunctions());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumFunctions());	  Integer[]    basicRows    =    getBasicRows(i    +    1,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
50	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumVariables());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumVariables());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  1,  getOriginalNumVariables());	  Integer[]    basicRows    =    getBasicRows(i    +    1,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
51	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  i  +  1);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions(),    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables(),  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables(),  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getOriginalNumDecisionVariables(),  i);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions(),    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumSimpleFunctions(),  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumSimpleFunctions(),  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumSimpleFunctions(),  i);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions(),    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  i  +  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
55	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  *  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  *  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  *  i);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
57	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
59	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  1);	  Integer    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
60	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  i);	  Integer    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
61	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset(),  basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset(),  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset(),  basicRow);	  Integer    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
62	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
66	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  -  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  -  2);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  -  2);	  Integer[]    basicRows    =    getBasicRows(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
70	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  mostNegative);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
71	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow,  mostNegative);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
72	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow,  basicRow);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.add(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.add(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.add(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
75	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
76	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  *  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  *  2);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  *  2);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(baseRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(baseRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(baseRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    baseRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i,  basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i,  basicRow);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
79	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows[i]);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
80	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  i  +  1);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
81	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  i);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
84	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  i  +  1);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
85	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
86	[BUG]  [BUGGY]  if(basicRow!=  null  ||  basicRow.contains(basicRows[i]))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow!=  null  ||  basicRow.contains(basicRows[i]))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow!=  null  ||  basicRow.contains(basicRows[i]))  {	  if(basicRow    ==    null    ||    basicRow.contains(basicRows[i]))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
87	[BUG]  [BUGGY]  if(basicRow  ==  null  ||  basicRows.contains(basicRows[i]))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  ==  null  ||  basicRows.contains(basicRows[i]))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  ==  null  ||  basicRows.contains(basicRows[i]))  {	  if(basicRow    ==    null    ||    basicRow.contains(basicRows[i]))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
88	[BUG]  [BUGGY]  if(basicRow!=  null  ||  basicRows.contains(basicRows[i]))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow!=  null  ||  basicRows.contains(basicRows[i]))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow!=  null  ||  basicRows.contains(basicRows[i]))  {	  if(basicRow    ==    null    ||    basicRow.contains(basicRows[i]))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
91	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    /    i);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
92	[BUG]  [BUGGY]  List  <  Integer>  baseRows  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  List  <  Integer>  baseRows  =  Sets.newHashSet();  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	List  <  Integer>  baseRows  =  Sets.newHashSet();	  ArrayList    <    Integer>    baseRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
93	[BUG]  [BUGGY]  ArrayList  <  Integer>  baseRows  =  Sets.newHashSet(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  ArrayList  <  Integer>  baseRows  =  Sets.newHashSet(basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	ArrayList  <  Integer>  baseRows  =  Sets.newHashSet(basicRow);	  ArrayList    <    Integer>    baseRows    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
94	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  new  HashSet  <  Integer>();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  new  HashSet  <  Integer>();  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  new  HashSet  <  Integer>();  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
99	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
102	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  mostNegative);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
103	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRow,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRow,  mostNegative);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
104	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRow.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRow.length);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRow.length);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
105	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i,  basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  i,  basicRow);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
106	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows[i]);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
107	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  mostNegative);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)&&    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)&&    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
110	[BUG]  [BUGGY]  if(basicRow  <  null  ||  basicRow.contains(basicRows[i]))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  <  null  ||  basicRow.contains(basicRows[i]))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  <  null  ||  basicRow.contains(basicRows[i]))  {	  if(basicRow    <    null    ||    basicRow.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
111	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRows[i]);	  Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
112	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow  +  i);	  Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
113	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  i);	  Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
114	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  0);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  0);	  Integer[]    basicRows    =    getBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
115	[BUG]  [BUGGY]  if(basicRow  ==  null  &&  basicRow.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  ==  null  &&  basicRow.contains(basicRow))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  ==  null  &&  basicRow.contains(basicRow))  {	  if(basicRow!=    null    &&    basicRow.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
118	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  i  +  1);	  Integer[]    basicRows    =    getBasicRows(basicRow,    i);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
119	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  0,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  0,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  0,  i);	  Integer[]    basicRows    =    getBasicRows(basicRow,    i);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
120	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
122	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  1);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
123	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  *  i);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    /    i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
124	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(1);	  Integer[]    basicRows    =    getBasicRows(0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
125	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(2);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(2);	  Integer[]    basicRows    =    getBasicRows(0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
126	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  coefficients);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  coefficients);	  Integer[]    basicRows    =    getBasicRows().toArray(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
127	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  i);	  Integer[]    basicRows    =    getBasicRows().toArray(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
128	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  basicRow);	  Integer[]    basicRows    =    getBasicRows().toArray(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
129	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.contains(basicRow))  {  continue;  }	  For(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
130	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    baseRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)&&    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
132	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getOriginalNumDecisionVariables());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getOriginalNumDecisionVariables());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
133	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getOriginalNumFunctions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getOriginalNumFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getOriginalNumFunctions());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
134	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getOriginalNumberFunctions());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getOriginalNumberFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getOriginalNumberFunctions());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
135	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  1);	  int    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
136	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  +  i);	  int    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
137	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  i);	  int    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
138	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  1);	  int    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
139	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  2);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  2);	  Integer[]    basicRows    =    getBasicRows(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
140	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  /  i);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
141	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows[i]);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
142	[BUG]  [BUGGY]  Integer[]  baseRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  ]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  baseRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  ]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  baseRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  ]);	  Integer[]    basicRows    =    getBasicRows().toArray(new    Integer[basicRows.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
143	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  +  1]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  +  1]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  +  1]);	  Integer[]    basicRows    =    getBasicRows().toArray(new    Integer[basicRows.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
147	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }	  For(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
148	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions(),  basicRow);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
149	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getRhsOffset());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getRhsOffset());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
151	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getNumObjectiveFunctions()  -  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getNumObjectiveFunctions()  -  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getNumObjectiveFunctions()  -  i);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
153	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i  *  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i  *  1);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
154	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.equals(basicRow))  {  continue	  For(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.size();    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
158	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  i);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
159	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  i);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
160	[BUG]  [BUGGY]  if(basicRow  <  0  ||  basicRows.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  <  0  ||  basicRows.contains(basicRow))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  <  0  ||  basicRows.contains(basicRow))  {	  if(basicRow    <    null    ||    basicRows.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
161	[BUG]  [BUGGY]  if(basicRow  <  null  ||  basicRows.contains(basicRow)||  basicRows.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  <  null  ||  basicRows.contains(basicRow)||  basicRows.contains(basicRow))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  <  null  ||  basicRows.contains(basicRow)||  basicRows.contains(basicRow))  {	  if(basicRow    <    null    ||    basicRows.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
162	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  *  basicRow);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.length;  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(BasicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
165	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow  +  1);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithCapacity(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
166	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithCapacity(basicRow,  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithCapacity(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
167	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(basicRows,  mostNegative);	  Integer[]    basicRows    =    getBasicRows().toArray(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
168	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  i  +  1);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
169	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  +  i  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  +  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset()  +  i  +  1);	  Integer    baseRow    =    getBasicRow(getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
170	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  -  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset()  -  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset()  -  i);	  Integer    baseRow    =    getBasicRow(getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
171	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset(),  basicRows);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  +  1,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  +  1,  getNumObjectiveFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow  +  1,  getNumObjectiveFunctions());	  Integer[]    basicRows    =    getBasicRows(i    +    1,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.size();  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    baseRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
176	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow  +  1);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
177	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow  +  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
178	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetWithBasicRows(basicRow,  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSetWithBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
179	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
180	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows.length);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  i  +  1,  basicRows.length);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    i    +    1,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
181	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  i);	  Integer    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
182	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getColumnsOffset()  -  1);	  Integer    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
183	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
184	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  mostNegative);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
185	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRow,  mostNegative);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
187	[BUG]  [BUGGY]  int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRows.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRows.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
188	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSet(basicRow,  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSet(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
189	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow  +  1);	  Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
191	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  /  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  /  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  /  i);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
192	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  +  i  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  +  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  +  i  +  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
193	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  -  1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  -  1]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows().toArray(new  Integer[basicRows.size()  -  1]);	  Integer[]    basicRows    =    getBasicRows().toArray(new    Integer[basicRows.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  bases.length;  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    baseRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
195	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  i  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  +  i  +  1);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    +    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
196	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  *  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  *  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  *  1);	  Integer[]    basicRows    =    getBasicRows(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
197	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset(),  basicRow  +  1);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
198	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRows[i]);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    /    i);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
199	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  coefficients[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  coefficients[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  coefficients[i]);	  Integer[]    basicRows    =    getBasicRows(basicRow,    i);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
200	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow,  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSetInteger(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
201	[BUG]  [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Set  <  Integer>  baseRows  =  Sets.newHashSetInteger(basicRow  +  i);	  Set    <    Integer>    baseRows    =    Sets.newHashSetInteger(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
202	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue	  For(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
203	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	For(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.contains(basicRow)||  basicRow.contains(basicRow))  {  continue;  }	  For(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.equals(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
205	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getNumObjectiveFunctions(),  basicRow.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getNumObjectiveFunctions(),  basicRow.length);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getNumObjectiveFunctions(),  basicRow.length);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset(),    basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
206	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getColumnOffset());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getColumnOffset());	  int    baseRow    =    getBasicRow(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  baseRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.size();    i++)    {    if(basicRow.contains(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
208	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  mostNegative);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  mostNegative);	  Integer[]    basicRows    =    getBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
209	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumIntegerFunctions(),  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumIntegerFunctions(),  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumIntegerFunctions(),  i);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions(),    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
210	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  0,  basicRow.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  0,  basicRow.length);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  0,  basicRow.length);	  Integer[]    basicRows    =    getBasicRows(basicRow,    i);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
211	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
212	[BUG]  [BUGGY]  if(basicRow  <  =  null  ||  basicRow.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  <  =  null  ||  basicRow.contains(basicRow))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  <  =  null  ||  basicRow.contains(basicRow))  {	  if(basicRow    <    null    ||    basicRow.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
213	[BUG]  [BUGGY]  if(basicRow  <  null  ||  basicRow.contains(basicRows))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  <  null  ||  basicRow.contains(basicRows))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  <  null  ||  basicRow.contains(basicRows))  {	  if(basicRow    <    null    ||    basicRow.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
214	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRow);	  Integer    baseRow    =    getBasicRow(getNumObjectiveFunctions()    /    i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
215	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  /  basicRow);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    /    i);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow)||  basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow)||  basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow)||  basicRow.equals(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.equals(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
218	[BUG]  [BUGGY]  if(basicRow  <  =  null  ||  basicRows.contains(basicRow))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  <  =  null  ||  basicRows.contains(basicRow))  {  [BUGGY]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	if(basicRow  <  =  null  ||  basicRows.contains(basicRow))  {	  if(basicRow    <    null    ||    basicRows.contains(basicRow))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
219	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRow);	  Integer    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
220	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset(),  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset(),  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getColumnsOffset(),  basicRow);	  int    baseRow    =    getBasicRow(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
221	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow.length  +  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow.length  +  i);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow.length  +  i);	  Integer[]    basicRows    =    getBasicRows(i    +    i);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  continue	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    continue    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
223	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRows.length);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRows.length);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
224	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRows[i]);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(basicRow,  getRhsOffset()  -  basicRows[i]);	  int    baseRow    =    getBasicRow(basicRow,    getRhsOffset()    -    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
225	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow,  basicRow);	  Integer[]    basicRows    =    getBasicRows(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow)||  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow)||  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.length;  i++)  {  if(basicRow.equals(basicRow)||  basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
227	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  basicRow);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
228	[BUG]  [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  basicRow.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  basicRow.length);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]basicRows  =  getBasicRows(basicRow,  getRhsOffset()  -  basicRow.length);	  Integer[]basicRows    =    getBasicRows(basicRow,    getRhsOffset()    -    i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
229	[BUG]  [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	int  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i,  basicRows);	  int    baseRow    =    getBasicRow(getNumObjectiveFunctions()    +    i,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  if(basicRow.contains(basicRow))  {  coefficients[i]  =  null;  }	  for(int    i    =    0;    i    <    basicRows.length;    i++)    {    if(basicRow.contains(basicRow))    {    coefficients[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
231	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getRhsOffset(),  basicRow  +  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer  baseRow  =  getBasicRow(getRhsOffset(),  basicRow  +  1);	  Integer    baseRow    =    getBasicRow(getRhsOffset(),    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
232	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  -  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow  -  1);	  Integer[]    basicRows    =    getBasicRows(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
233	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(basicRow.contains(basicRow)&&  basicRow.equals(basicRow))  {  continue;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(basicRow.contains(basicRow)||    basicRow.equals(basicRow))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(BasicRow.contains(basicRow))  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    basicRow.length;    i++)    {    if(BasicRow.contains(basicRow))    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
235	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumIntegerFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumIntegerFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getNumIntegerFunctions());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
236	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumSimpleFunctions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumSimpleFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getNumSimpleFunctions());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
237	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumEmptyFunctions());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(getNumEmptyFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(getNumEmptyFunctions());	  Integer[]    basicRows    =    getBasicRows(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
238	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  +  i,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(basicRow  +  i,  getNumObjectiveFunctions());  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(basicRow  +  i,  getNumObjectiveFunctions());	  Integer[]    basicRows    =    getBasicRows(i    +    1,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
239	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  +  1,  basicRow);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  +  1,  basicRow);	  Integer[]    basicRows    =    getBasicRows(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
240	[BUG]  [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  /  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer[]  basicRows  =  getBasicRows(i  /  1);  [BUGGY]      if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	332	332	1	replace	Integer[]  basicRows  =  getBasicRows(i  /  1);	  Integer[]    basicRows    =    getBasicRows(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
