bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow!=  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow!=  null?  0  :  MostNegative);  [BUGGY]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow!=  null?  0  :  MostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow    ==    null?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  coefficients[i]  =(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow  ==  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  coefficients[i]  =(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow  ==  null?  0  :  MostNegative);  [BUGGY]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow  ==  null?  0  :  MostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow    ==    null?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
3	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  int    restrictToNonNegative    =    basicRows!=    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow!=  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow!=  null?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow!=  null?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  <  0?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  <  0?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  <  0?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  int    restrictToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
8	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
9	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-    (basicNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-    (basicNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
12	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumSlackVariables())));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumSlackVariables())));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumSlackVariables())));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
15	[BUG]  [BUGGY]  Integer  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
16	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
17	[BUG]  [BUGGY]  Integer  limitToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  limitToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  limitToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
18	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >  1  &&  basicRows.contains(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >  1  &&  basicRows.contains(basicRow);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  >  1  &&  basicRows.contains(basicRow);	  int    restrictToNonNegative    =    basicRows.size()    >    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  ==  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  ==  null?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  ==  null?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicRow    ==    null?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  Integer  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicToNonNegative?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicToNonNegative?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
23	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
24	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	  int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));	  int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()));	  int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-    (basicNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
28	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-    (basicNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  double  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
30	[BUG]  [BUGGY]  double  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
31	[BUG]  [BUGGY]  double  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
32	[BUG]  [BUGGY]  double  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
33	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  <  0?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  <  0?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (basicRow    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i)));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i)));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i)));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()    +    i)));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows.size();  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size();	  int    restrictToNonNegative    =    basicRows.size()    >    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  <  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  <  1;  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  <  1;	  int    restrictToNonNegative    =    basicRows.size()    <    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  -  0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  -  0;  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  -  0;	  int    restrictToNonNegative    =    basicRows.size()    <    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  1);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  1);	  Integer    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
40	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))  -  (basicNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))  -  (basicNegative?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))  -  (basicNegative?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-    (basicNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
41	[BUG]  [BUGGY]  double  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
42	[BUG]  [BUGGY]  double  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
43	[BUG]  [BUGGY]  double  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
44	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumVarsOffset())));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumVarsOffset())));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumVarsOffset())));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumEdge())));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumEdge())));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumEdge())));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	  int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	  int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  >=  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  >=  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  >=  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (basicRow    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictiveFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictiveFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictiveFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
50	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -(basicRow  ==  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -(basicRow  ==  null?  0  :  MostNegative);  [BUGGY]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -(basicRow  ==  null?  0  :  MostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow    ==    null?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
51	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNonNegative?  0  :  MostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNonNegative?  0  :  MostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
52	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions())));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions())));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions())));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()    +    1)));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  Integer  restrictedToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictedToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictedToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  Integer    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()  +  i)));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()  +  i)));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()  +  i)));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()    +    i)));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  <  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  <  2;  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  <  2;	  int    restrictToNonNegative    =    basicRows.size()    >    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))  -  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))  -  (basicNegative?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))  -  (basicNegative?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-    (basicNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
57	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))-  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))-  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))-  (basicToNonNegative?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (basicToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
58	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictiveFunctions()))-  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictiveFunctions()))-  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictiveFunctions()))-  (basicToNonNegative?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (basicToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
59	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());	  Integer    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
60	[BUG]  [BUGGY]  Integer  restrictedToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  restrictedToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictedToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  Integer    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
61	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))-  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))-  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset()))-  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  Integer  limitToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  Integer  limitToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  limitToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  Integer    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
63	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >=  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >=  0;  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  >=  0;	  int    restrictToNonNegative    =    basicRows.size()    <    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumVisibleFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumVisibleFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumVisibleFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
65	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictedFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictedFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestrictedFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
66	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i),  basicRows));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i),  basicRows));  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i),  basicRows));	  (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()    +    i)));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  /(basicRow  ==  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  /(basicRow  ==  null?  0  :  MostNegative);  [BUGGY]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  /(basicRow  ==  null?  0  :  MostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow    ==    null?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
68	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  int  restrictToNonNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow  <  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	  int    restrictToNonNegative    =    basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  double  restrictedToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);      [BUGGY]  double  restrictedToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]      coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictedToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	  double    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
