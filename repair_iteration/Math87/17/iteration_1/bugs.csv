bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (restrictToNonNegative?  0  :  mostNegative);		non-compiled	[CE]  illegal  start  of  expression	34	None	add
2	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  mostNegative);		non-compiled	[CE]  illegal  start  of  expression	34	None	add
3	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));		non-compiled	[CE]  illegal  start  of  expression	34	None	add
4	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow!=  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow!=  null?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow!=  null?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow  ==  null?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow  ==  null?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (restrictToNonNegative?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  <  0?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  <  0?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
8	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow!=  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow!=  null?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow!=  null?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  ==  null?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]    int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
11	[BUG]  [BUGGY]    int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
12	[BUG]  [BUGGY]    int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
13	[BUG]  [BUGGY]    int  restrictToNonNegative  =  basicRows.size()  >  0;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  restrictToNonNegative  =  basicRows.size()  >  0;  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    int  restrictToNonNegative  =  basicRows.size()  >  0;		non-compiled	[CE]  illegal  start  of  expression	34	None	add
14	[BUG]  [BUGGY]    int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    int  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
15	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);		non-compiled	[CE]  illegal  start  of  expression	34	None	add
16	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNegative?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
17	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicNegative?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
