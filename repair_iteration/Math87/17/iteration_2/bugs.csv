bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	      int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows!=  null?  0  :  getEntry(basicRow,  getRhsOffset());	      int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  1)));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  1)));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  1)));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i)));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i)));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()  +  i)));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow!=  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow!=  null?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow!=  null?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  <  0?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicRow  <  0?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	      int    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset());	      int    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	      int    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (restrictToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (restrictToNonNegative?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (restrictToNonNegative?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >  1;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  >  1;	      int    restrictToNonNegative    =    basicRows.size()    >    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  <  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  <  0;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  <  0;	      int    restrictToNonNegative    =    basicRows.size()    >    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRows.size()  >  2;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows.size()  >  2;	      int    restrictToNonNegative    =    basicRows.size()    >    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	      int    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  baseRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	      int    restrictToNonNegative    =    baseRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	int  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (basicRow  ==  null?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-(basicRow  ==  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-(basicRow  ==  null?  0  :  MostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-(basicRow  ==  null?  0  :  MostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -(basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	Integer  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	      int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumRestricteFunctions()))  -  (basicRow  ==  null?  0  :  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    ==    null?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  double  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  double  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	double  restrictToNonNegative  =  basicRows  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions());	      int    restrictToNonNegative    =    basicRows    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))  -  (basicToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions())));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  0?  0  :  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getNumObjectiveFunctions()))-    (basicRow    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	338	340	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
