bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  numArtificialVariables  =  Lists.newArrayList(size());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Lists.newArrayList(size());  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Lists.newArrayList(size());	  numArtificialVariables    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  int  numArtificialVariables  =  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  Lists.newArrayList();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  Lists.newArrayList();	  numArtificialVariables    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  numArtificialVariables  =  Lists.newArrayList(0);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Lists.newArrayList(0);  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Lists.newArrayList(0);	  numArtificialVariables    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  if(zIndex  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(zIndex  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(zIndex  ==  0)  {	  if(slackVar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
5	[BUG]  [BUGGY]  if(numArtificialVariables  >  0  ||  col  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  >  0  ||  col  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  >  0  ||  col  >  0)  {	  if(numArtificialVariables    >    0    ||    numSlackVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
6	[BUG]  [BUGGY]  int  numArtificialVariables  =  getSelectedColumn();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getSelectedColumn();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getSelectedColumn();	  int    numArtificialVariables    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  int  numArtificialVariables  =  getRow();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getRow();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getRow();	  int    numArtificialVariables    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  int  numSlackVariables  =  getArtificialVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getArtificialVariables();	  int    numSlackVariables    =    getRhsDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
9	[BUG]  [BUGGY]  numArtificialVariables  =  getNumber();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getNumber();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getNumber();	  numArtificialVariables    =    getRhsNumber();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  numArtificialVariables  =  getColumnNumber();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getColumnNumber();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getColumnNumber();	  numArtificialVariables    =    getRhsNumber();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
11	[BUG]  [BUGGY]  numArtificialVariables  =  getSeriesNumber();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getSeriesNumber();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getSeriesNumber();	  numArtificialVariables    =    getRhsNumber();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
12	[BUG]  [BUGGY]  if(numSlackVariables!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables!=  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables!=  0)  {	  if(numSlackVariables    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
13	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRhsOffset()  *  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRhsOffset()  *  1;	  int    numSlackVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  zIndex  =  getRhsOffset()  *  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumber(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumber(1);  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumber(1);	  int    numSlackVariables    =    getNumber(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
16	[BUG]  [BUGGY]  if(numDecisionVariables  ==  0  ||  numSlackVariables  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  ==  0  ||  numSlackVariables  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  ==  0  ||  numSlackVariables  ==  0)  {	  if(numDecisionVariables    ==    0    ||    numArtificialVariables    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
17	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMatrixOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMatrixOffset()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMatrixOffset()  +  1;	  int    numArtificialVariables    =    getMatrixOffset();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
18	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMinimumArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMinimumArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMinimumArtificialVariables();	  int    numArtificialVariables    =    getMatrixOffset();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
19	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  col  >  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  col  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  col  >  1)  {	  if(numArtificialVariables    ==    0    ||    numSlackVariables    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
20	[BUG]  [BUGGY]  if(numArtificialVariables  <  0  ||  numSlackVariables  >  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  <  0  ||  numSlackVariables  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  <  0  ||  numSlackVariables  >  1)  {	  if(numArtificialVariables    ==    0    ||    numSlackVariables    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
21	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  numArtificialVariables  >  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  numArtificialVariables  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  numArtificialVariables  >  1)  {	  if(numArtificialVariables    ==    0    ||    numSlackVariables    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
22	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumberOfArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumberOfArtificialVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumberOfArtificialVariables()  +  1;	  int    numDecisionVariables    =    getNumberOfArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumberOfArtificialVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumberOfArtificialVariables()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumberOfArtificialVariables()  -  1;	  int    numDecisionVariables    =    getNumberOfArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  numArtificialVariables  =  getDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getDecisionVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getDecisionVariables();	  numArtificialVariables    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
25	[BUG]  [BUGGY]  numArtificialVariables  =  getNegativeVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getNegativeVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getNegativeVariables();	  numArtificialVariables    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
26	[BUG]  [BUGGY]  int  numArtificialVariables  =  getSelectedArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getSelectedArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getSelectedArtificialVariables();	  int    numArtificialVariables    =    getDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
27	[BUG]  [BUGGY]  int  numSlackVariables  =  getSlackVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getSlackVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getSlackVariables();	  int    numSlackVariables    =    getDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
28	[BUG]  [BUGGY]  int  numSlackVariables  =  getSelectedArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getSelectedArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getSelectedArtificialVariables();	  int    numSlackVariables    =    getDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
29	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumArtificialVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumArtificialVariables()  +  1;	  int    numDecisionVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
30	[BUG]  [BUGGY]  int  numDecisionVariables  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getLeftOffset()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getLeftOffset()  +  1;	  int    numDecisionVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
31	[BUG]  [BUGGY]  int  numDecisionVariables  =  getSelectedArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getSelectedArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getSelectedArtificialVariables();	  int    numDecisionVariables    =    getSlackVariables();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
32	[BUG]  [BUGGY]  int  numDecisionVariables  =  getSelectedRow();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getSelectedRow();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getSelectedRow();	  int    numDecisionVariables    =    getSlackVariables();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
33	[BUG]  [BUGGY]  if(numSlackVariables  >  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  >  1)  {	  if(numSlackVariables    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
34	[BUG]  [BUGGY]  if(col  ==  0  ||  numArtificialVariables  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(col  ==  0  ||  numArtificialVariables  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(col  ==  0  ||  numArtificialVariables  ==  0)  {	  if(numArtificialVariables    ==    0    ||    col    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  col!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  col!=  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  col!=  0)  {	  if(numArtificialVariables    ==    0    ||    col    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  col  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  col  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  col  ==  0)  {	  if(numArtificialVariables    ==    0    ||    col    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;	  numArtificialVariables    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
38	[BUG]  [BUGGY]  int  numArtificialVariables  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  Collections.EMPTY_LIST;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  Collections.EMPTY_LIST;	  numArtificialVariables    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
39	[BUG]  [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_STRING;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_STRING;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_STRING;	  numArtificialVariables    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
40	[BUG]  [BUGGY]  if(numSlackVariables  <  0  ||  numArtificialVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  <  0  ||  numArtificialVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  <  0  ||  numArtificialVariables  >  0)  {	  if(numSlackVariables    ==    0    ||    numArtificialVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
41	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  col  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  col  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  col  >  0)  {	  if(numSlackVariables    ==    0    ||    numArtificialVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
42	[BUG]  [BUGGY]  int  numSlackVariables  =  getRow();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRow();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRow();	  int    numSlackVariables    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  Integer  numSlackVariables  =  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  Integer  numSlackVariables  =  getRhsOffset();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	Integer  numSlackVariables  =  getRhsOffset();	  int    numSlackVariables    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  if(numArtificialVariables  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  null)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  null)  {	  if(numArtificialVariables    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
45	[BUG]  [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  -  1;	  int    numSlackVariables    =    this.restrictToNonNegativeFunction.size();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
46	[BUG]  [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  +  1;	  int    numSlackVariables    =    this.restrictToNonNegativeFunction.size();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
47	[BUG]  [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  -  2;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.restrictToNonNegativeFunction.size()  -  2;	  int    numSlackVariables    =    this.restrictToNonNegativeFunction.size();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
48	[BUG]  [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.artificialVariables.size()  -  1;	  int    numSlackVariables    =    this.artificialVariables.size();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
49	[BUG]  [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.artificialVariables.size()  +  1;	  int    numSlackVariables    =    this.artificialVariables.size();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
50	[BUG]  [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.artificialVariables.size()  -  2;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.artificialVariables.size()  -  2;	  int    numSlackVariables    =    this.artificialVariables.size();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
51	[BUG]  [BUGGY]  if(numSlackVariables  <  0  ||  numDecisionVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  <  0  ||  numDecisionVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  <  0  ||  numDecisionVariables  >  0)  {	  if(numSlackVariables    ==    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
52	[BUG]  [BUGGY]  if(numSlackVariables  >  0  ||  numDecisionVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  >  0  ||  numDecisionVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  >  0  ||  numDecisionVariables  >  0)  {	  if(numSlackVariables    ==    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables  >  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  numDecisionVariables  >  1)  {	  if(numSlackVariables    ==    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  col  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  col  <  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  col  <  0)  {	  if(numArtificialVariables    ==    0    ||    col    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
55	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  col  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  col  >=  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  col  >=  0)  {	  if(numArtificialVariables    ==    0    ||    col    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
56	[BUG]  [BUGGY]  numArtificialVariables  =  getStandardOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getStandardOffset()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getStandardOffset()  +  1;	  numArtificialVariables    =    getStandardOffset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
57	[BUG]  [BUGGY]  numArtificialVariables  =  getStandardDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getStandardDecisionVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getStandardDecisionVariables();	  numArtificialVariables    =    getStandardOffset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
58	[BUG]  [BUGGY]  int  numArtificialVariables  =  getImmediatePosition();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getImmediatePosition();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getImmediatePosition();	  int    numArtificialVariables    =    getImmediateParentPointer();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
59	[BUG]  [BUGGY]  if(numDecisionVariables  ==  0  ||  numSlackVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  ==  0  ||  numSlackVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  ==  0  ||  numSlackVariables  >  0)  {	  if(numDecisionVariables    ==    0    ||    numArtificialVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
60	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  numDecisionVariables  >  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  numDecisionVariables  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  numDecisionVariables  >  1)  {	  if(numDecisionVariables    ==    0    ||    numArtificialVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  int  numSlackVariables  =  getColumnCount();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getColumnCount();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getColumnCount();	  int    numSlackVariables    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  int  numSlackVariables  =  getRowCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRowCount()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRowCount()  -  1;	  int    numSlackVariables    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  int  numSlackVariables  =  getRowCount()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRowCount()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRowCount()  +  1;	  int    numSlackVariables    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  int  numSlackVariables  =  getRowCount()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRowCount()  -  2;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRowCount()  -  2;	  int    numSlackVariables    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
65	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumberArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumberArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumberArtificialVariables();	  int    numDecisionVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
66	[BUG]  [BUGGY]  Integer  numSlackVariables  =  constraints.size();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  Integer  numSlackVariables  =  constraints.size();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	Integer  numSlackVariables  =  constraints.size();	  int    numSlackVariables    =    constraints.size()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMatrix()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMatrix()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMatrix()  +  1;	  int    numArtificialVariables    =    getMatrix();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
68	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMatrix()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMatrix()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMatrix()  -  1;	  int    numArtificialVariables    =    getMatrix();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
69	[BUG]  [BUGGY]  numArtificialVariables  =  getNumArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getNumArtificialVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getNumArtificialVariables()  +  1;	  numArtificialVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
70	[BUG]  [BUGGY]  numArtificialVariables  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getLeftOffset()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getLeftOffset()  +  1;	  numArtificialVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
71	[BUG]  [BUGGY]  int  numSlackVariables  =  getRows()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRows()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRows()  +  1;	  int    numSlackVariables    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  int  numSlackVariables  =  getRows()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRows()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRows()  -  1;	  int    numSlackVariables    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  numArtificialVariables  =  getSeriesVisible();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getSeriesVisible();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getSeriesVisible();	  numArtificialVariables    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
74	[BUG]  [BUGGY]  numArtificialVariables  =  getNegativeVisible();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getNegativeVisible();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getNegativeVisible();	  numArtificialVariables    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
75	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberArtificialVariables();	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMinimumArtificialVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMinimumArtificialVariables()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMinimumArtificialVariables()  -  1;	  int    numArtificialVariables    =    getNumArtificialVariables()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
77	[BUG]  [BUGGY]  int  numDecisionVariables  =  getMatrix();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getMatrix();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getMatrix();	  int    numDecisionVariables    =    getArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
78	[BUG]  [BUGGY]  int  numArtificialVariables  =  getNumberArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getNumberArtificialVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getNumberArtificialVariables()  +  1;	  int    numArtificialVariables    =    getNumberArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  int  numArtificialVariables  =  getNumber();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getNumber();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getNumber();	  int    numArtificialVariables    =    getNumberArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  int  numDecisionVariables  =  getSelectedArtificialVariablesOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getSelectedArtificialVariablesOffset();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getSelectedArtificialVariablesOffset();	  int    numDecisionVariables    =    getArtificialVariablesOffset();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
81	[BUG]  [BUGGY]  int  numDecisionVariables  =  getSlackVariablesOffset();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getSlackVariablesOffset();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getSlackVariablesOffset();	  int    numDecisionVariables    =    getArtificialVariablesOffset();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
82	[BUG]  [BUGGY]  int  numArtificialVariables  =  Collections.emptySet();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  Collections.emptySet();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  Collections.emptySet();	  int    numArtificialVariables    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
83	[BUG]  [BUGGY]  int  numSlackVariables  =  this.constraints.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.constraints.size()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.constraints.size()  -  1;	  int    numSlackVariables    =    this.constraints.size();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
84	[BUG]  [BUGGY]  int  numSlackVariables  =  this.constraints.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.constraints.size()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.constraints.size()  +  1;	  int    numSlackVariables    =    this.constraints.size();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
85	[BUG]  [BUGGY]  numArtificialVariables  =  getNumberArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getNumberArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getNumberArtificialVariables();	  numArtificialVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
86	[BUG]  [BUGGY]  int  numArtificialVariables  =  getNumberOfArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getNumberOfArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getNumberOfArtificialVariables();	  int    numArtificialVariables    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
87	[BUG]  [BUGGY]  int  numArtificialVariables  =  getRows()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getRows()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getRows()  +  1;	  int    numArtificialVariables    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
88	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfSlots()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfSlots()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfSlots()  +  1;	  int    numSlackVariables    =    getNumberOfSlots();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
89	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfSlots()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfSlots()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfSlots()  -  1;	  int    numSlackVariables    =    getNumberOfSlots();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
90	[BUG]  [BUGGY]  if(numArtificialVariables  <  0  ||  col  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  <  0  ||  col  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  <  0  ||  col  >  0)  {	  if(numArtificialVariables    <    0    ||    numSlackVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
91	[BUG]  [BUGGY]  if(numArtificialVariables  <  =  0  ||  numSlackVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  <  =  0  ||  numSlackVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  <  =  0  ||  numSlackVariables  >  0)  {	  if(numArtificialVariables    <    0    ||    numSlackVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
92	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfArtificialVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfArtificialVariables()  +  1;	  int    numSlackVariables    =    getNumberOfArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
93	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfArtificialVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfArtificialVariables()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfArtificialVariables()  -  1;	  int    numSlackVariables    =    getNumberOfArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
94	[BUG]  [BUGGY]  if(numArtificialVariables  <  =  0  ||  numDecisionVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  <  =  0  ||  numDecisionVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  <  =  0  ||  numDecisionVariables  >  0)  {	  if(numArtificialVariables    <    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
95	[BUG]  [BUGGY]  int  numArtificialVariables  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getLeftOffset()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getLeftOffset()  +  1;	  int    numArtificialVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  zIndex  =  getRhsIndex()  -  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  zIndex  =  getColumnIndex();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  zIndex  =  getColumnIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
98	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfElements()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfElements()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfElements()  +  1;	  int    numSlackVariables    =    getNumberOfElements();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
99	[BUG]  [BUGGY]  int  numSlackVariables  =  getColumnOfElements();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getColumnOfElements();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getColumnOfElements();	  int    numSlackVariables    =    getNumberOfElements();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
100	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumSlackVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumSlackVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumSlackVariables();	  int    numDecisionVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
101	[BUG]  [BUGGY]  int  numSlackVariables  =  this.artificialVariables.remove(0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  this.artificialVariables.remove(0);  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  this.artificialVariables.remove(0);	  int    numSlackVariables    =    this.artificialVariables.size();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
102	[BUG]  [BUGGY]  int  numArtificialVariables  =  getNumArtificialVariables()  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getNumArtificialVariables()  *  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getNumArtificialVariables()  *  1;	  int    numArtificialVariables    =    getNumArtificialVariables()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
103	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfDecisionVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfDecisionVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfDecisionVariables()  +  1;	  int    numSlackVariables    =    getNumberOfDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
104	[BUG]  [BUGGY]  numArtificialVariables  =  Collections.emptyArray();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Collections.emptyArray();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Collections.emptyArray();	  numArtificialVariables    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
105	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables  >=  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  numDecisionVariables  >=  0)  {	  if(numSlackVariables    ==    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
106	[BUG]  [BUGGY]  numArtificialVariables  =  getRhsNumber()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getRhsNumber()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getRhsNumber()  +  1;	  numArtificialVariables    =    getRhsNumber();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
107	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumber()  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumber()  *  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumber()  *  1;	  int    numSlackVariables    =    getNumber()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Collections.EMPTY_LIST  +  1;	  numArtificialVariables    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
109	[BUG]  [BUGGY]  if(null  ==  numSlackVariables)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(null  ==  numSlackVariables)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(null  ==  numSlackVariables)  {	  if(slackVar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
110	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  numSlackVariables  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  numSlackVariables  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  numSlackVariables  ==  0)  {	  if(slackVar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
111	[BUG]  [BUGGY]  if(null  ==  numSlackVariables  ||  col  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(null  ==  numSlackVariables  ||  col  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(null  ==  numSlackVariables  ||  col  ==  0)  {	  if(slackVar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
112	[BUG]  [BUGGY]  if(numDecisionVariables  <  0  ||  numSlackVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  <  0  ||  numSlackVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  <  0  ||  numSlackVariables  >  0)  {	  if(numArtificialVariables    <    0    ||    numSlackVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
113	[BUG]  [BUGGY]  int  numArtificialVariables  =  getNumberOfLinks();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getNumberOfLinks();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getNumberOfLinks();	  int    numArtificialVariables    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
114	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsDecisionVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRhsDecisionVariables()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRhsDecisionVariables()  -  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
115	[BUG]  [BUGGY]  int  numSlackVariables  =  getLeftOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getLeftOffset()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getLeftOffset()  -  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
116	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfElements()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumberOfElements()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumberOfElements()  -  1;	  int    numSlackVariables    =    getNumberOfElements();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
117	[BUG]  [BUGGY]  numArtificialVariables  =  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Lists.newLinkedList();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Lists.newLinkedList();	  numArtificialVariables    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
118	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumberOfSlackVariables();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumberOfSlackVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumberOfSlackVariables();	  int    numDecisionVariables    =    getNumberOfArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
119	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumArtificialVariables()  +  1;	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
120	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumDecisionVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumDecisionVariables();	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
121	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables!=  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  numDecisionVariables!=  0)  {	  if(numSlackVariables    ==    0    ||    numDecisionVariables    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
122	[BUG]  [BUGGY]  numArtificialVariables  =  getBase();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getBase();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getBase();	  numArtificialVariables    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
123	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsNumberVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getRhsNumberVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getRhsNumberVariables();	  int    numSlackVariables    =    getRhsDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
124	[BUG]  [BUGGY]  if(numSlackVariables  >  0  ||  numArtificialVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  >  0  ||  numArtificialVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  >  0  ||  numArtificialVariables  >  0)  {	  if(numArtificialVariables    >    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
125	[BUG]  [BUGGY]  numArtificialVariables  =  getStandardVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getStandardVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getStandardVariables();	  numArtificialVariables    =    getStandardOffset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
126	[BUG]  [BUGGY]  numArtificialVariables  =  getStandardVariable();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getStandardVariable();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getStandardVariable();	  numArtificialVariables    =    getStandardOffset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
127	[BUG]  [BUGGY]  int  numDecisionVariables  =  getRestrictedArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getRestrictedArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getRestrictedArtificialVariables();	  int    numDecisionVariables    =    getArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
128	[BUG]  [BUGGY]  if(numDecisionVariables  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  ==  2)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  ==  2)  {	  if(numDecisionVariables    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
129	[BUG]  [BUGGY]  int  numArtificialVariables  =  getImmediateParentPointer()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getImmediateParentPointer()  +  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getImmediateParentPointer()  +  1;	  int    numArtificialVariables    =    getImmediateParentPointer();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
130	[BUG]  [BUGGY]  int  numArtificialVariables  =  getImmediateParentPointer().length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getImmediateParentPointer().length;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getImmediateParentPointer().length;	  int    numArtificialVariables    =    getImmediateParentPointer();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
131	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMean();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMean();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMean();	  int    numArtificialVariables    =    getDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
132	[BUG]  [BUGGY]  if(null  ==  numDecisionVariables)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(null  ==  numDecisionVariables)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(null  ==  numDecisionVariables)  {	  if(numDecisionVariables    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
133	[BUG]  [BUGGY]  if(numDecisionVariables  <  0  ||  numArtificialVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  <  0  ||  numArtificialVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  <  0  ||  numArtificialVariables  >  0)  {	  if(numArtificialVariables    <    0    ||    numDecisionVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
134	[BUG]  [BUGGY]  int  numArtificialVariables  =  getMatrixOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getMatrixOffset()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getMatrixOffset()  -  1;	  int    numArtificialVariables    =    getMatrixOffset();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
135	[BUG]  [BUGGY]  if(numDecisionVariables  ==  0  ||  col  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  ==  0  ||  col  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  ==  0  ||  col  ==  0)  {	  if(numArtificialVariables    ==    0    ||    col    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
136	[BUG]  [BUGGY]  if(slackVar  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(slackVar  ==  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(slackVar  ==  1)  {	  if(numSlackVariables    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
137	[BUG]  [BUGGY]  if(numDecisionVariables  >  0  ||  numArtificialVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numDecisionVariables  >  0  ||  numArtificialVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numDecisionVariables  >  0  ||  numArtificialVariables  >  0)  {	  if(numDecisionVariables    ==    0    ||    numArtificialVariables    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
138	[BUG]  [BUGGY]  numArtificialVariables  =  Lists.newArrayList(this.artificialVariables);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Lists.newArrayList(this.artificialVariables);  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Lists.newArrayList(this.artificialVariables);	  numArtificialVariables    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
139	[BUG]  [BUGGY]  if(numSlackVariables  ==  1  ||  numSlackVariables  ==  2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  1  ||  numSlackVariables  ==  2)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  1  ||  numSlackVariables  ==  2)  {	  if(numSlackVariables    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
140	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getNumArtificialVariables()  -  1;	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
141	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  numSlackVariables  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  numSlackVariables  >=  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  numSlackVariables  >=  0)  {	  if(numArtificialVariables    ==    0    ||    numDecisionVariables    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
142	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  numArtificialVariables  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  numArtificialVariables  ==  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  numArtificialVariables  ==  0)  {	  if(numArtificialVariables    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
143	[BUG]  [BUGGY]  int  numArtificialVariables  =  getImmediateParentPointer()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getImmediateParentPointer()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getImmediateParentPointer()  -  1;	  int    numArtificialVariables    =    getImmediateParentPointer();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
144	[BUG]  [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numSlackVariables  ==  0  ||  numDecisionVariables  ==  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numSlackVariables  ==  0  ||  numDecisionVariables  ==  1)  {	  if(numSlackVariables    ==    0    ||    numDecisionVariables    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
145	[BUG]  [BUGGY]  int  numArtificialVariables  =  getSlackVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getSlackVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getSlackVariables();	  int    numArtificialVariables    =    getDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
146	[BUG]  [BUGGY]  if(slackVar  ==  0  ||  numSlackVariables  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(slackVar  ==  0  ||  numSlackVariables  >  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(slackVar  ==  0  ||  numSlackVariables  >  0)  {	  if(slackVar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
147	[BUG]  [BUGGY]  if(slackVar  ==  0  ||  numSlackVariables  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(slackVar  ==  0  ||  numSlackVariables  <  =  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(slackVar  ==  0  ||  numSlackVariables  <  =  0)  {	  if(slackVar    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
148	[BUG]  [BUGGY]  int  numArtificialVariables  =  Collections.unmodifiableList(this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  Collections.unmodifiableList(this);  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  Collections.unmodifiableList(this);	  int    numArtificialVariables    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
149	[BUG]  [BUGGY]  int  numSlackVariables  =  getBase();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numSlackVariables  =  getBase();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numSlackVariables  =  getBase();	  int    numSlackVariables    =    getRhsDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
150	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumberOfArtificialVariables()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumberOfArtificialVariables()  -  2;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumberOfArtificialVariables()  -  2;	  int    numDecisionVariables    =    getNumberOfArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
151	[BUG]  [BUGGY]  numArtificialVariables  =  getNumberOfArtificialVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  getNumberOfArtificialVariables();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  getNumberOfArtificialVariables();	  numArtificialVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
152	[BUG]  [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_ARRAY;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_ARRAY;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	numArtificialVariables  =  Collections.EMPTY_LIST  |  Collections.EMPTY_ARRAY;	  numArtificialVariables    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
153	[BUG]  [BUGGY]  int  numArtificialVariables  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getRhsOffset()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getRhsOffset()  -  1;	  int    numArtificialVariables    =    getNumArtificialVariables()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
154	[BUG]  [BUGGY]  if(numArtificialVariables  >  0  ||  numSlackVariables  >  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  >  0  ||  numSlackVariables  >  1)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  >  0  ||  numSlackVariables  >  1)  {	  if(numArtificialVariables    ==    0    ||    numSlackVariables    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
155	[BUG]  [BUGGY]  int  numDecisionVariables  =  getNumArtificialVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numDecisionVariables  =  getNumArtificialVariables()  -  1;  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numDecisionVariables  =  getNumArtificialVariables()  -  1;	  int    numDecisionVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
156	[BUG]  [BUGGY]  if(numArtificialVariables  ==  0  ||  col  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  if(numArtificialVariables  ==  0  ||  col  <  =  0)  {  [BUGGY]      return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	if(numArtificialVariables  ==  0  ||  col  <  =  0)  {	  if(numArtificialVariables    ==    0    ||    col    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
157	[BUG]  [BUGGY]  int  numArtificialVariables  =  getImplicitReturn();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {      [BUGGY]  int  numArtificialVariables  =  getImplicitReturn();  [BUGGY]      if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.30151134457776363	290	290	1	replace	int  numArtificialVariables  =  getImplicitReturn();	  int    numArtificialVariables    =    getRows();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
