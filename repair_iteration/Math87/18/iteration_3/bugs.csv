bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(baselines));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(baselines));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(baselines));	  return    new    RealPointValuePair(baselines,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
2	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(baselines,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
3	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(baselines,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
4	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow));	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
6	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
7	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
8	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
9	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  true);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  true);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  -  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.size());    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
11	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  -  2);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.size());    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
12	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size()  +  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.size());    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
13	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size()  -  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.size());    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
14	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  -  1);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
15	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  +  1);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
16	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  f.length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  f.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  f.length);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  -  2);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows.length  -  2);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicR  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicR  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicR	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
20	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  baseRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  baseRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  baseRows);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
21	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients,  mostNegative);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
22	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
24	[BUG]  [BUGGY]  Pentru(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Pentru(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Pentru(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
25	[BUG]  [BUGGY]  Pentru(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Pentru(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Pentru(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
27	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }	  int    i    =    0,    col    =    basicRows.size();    i    <    col    +=    coefficients.length;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
28	[BUG]  [BUGGY]  Integer  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }	  int    i    =    0,    col    =    basicRows.size();    i    <    col    +=    coefficients.length;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
29	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicRow.getValue(),    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
30	[BUG]  [BUGGY]  return  new  RealPointValuePair(f.getValue(),  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f.getValue(),  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f.getValue(),  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRow.getValue(),    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  return  new  RealPointValuePair(f.getValue(),  baseRow.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f.getValue(),  baseRow.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f.getValue(),  baseRow.getValue(basicRow));	  return    new    RealPointValuePair(basicRow.getValue(),    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  mostNegative);	  Integer    coefficients    =    f.getValue(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
33	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0,  mostNegative);	  Integer    coefficients    =    f.getValue(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
34	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows.length);	  Integer    coefficients    =    f.getValue(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
38	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumns());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
39	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumns());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
40	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
41	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
42	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  f);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  f);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
43	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  basicRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
46	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  basicRows.length);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
47	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
48	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  +  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
49	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  2);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
50	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients.length);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  ==  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  ==  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  ==	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
58	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  >=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getCoefficients(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getCoefficients(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getCoefficients(basicRows);	  Integer    coefficients[]    =    f.getCoefficients();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
62	[BUG]  [BUGGY]  Integer  coefficients[]  =  baseRows.getValues();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  baseRows.getValues();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  baseRows.getValues();	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
63	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.get(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.get(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  basicRows.get(basicRow);	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
64	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  mostNegative);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
65	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients[i]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients[i]);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
66	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients;	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
68	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
69	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(0);  buf.append(  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(0);  buf.append(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(0);  buf.append(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
70	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow);	  Integer    coefficients    =    basicRows.getValue(f);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
71	[BUG]  [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(f);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  this.basicRows.getValue(f);	  Integer    coefficients    =    basicRows.getValue(f);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
72	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
73	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  4);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  4);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length  -  4);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
77	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Pentru(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
78	[BUG]  [BUGGY]  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
80	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
81	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
82	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  column);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  column);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  3;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  3;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  3;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRows.size();  i  <  len;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  len  =  basicRows.size();  i  <  len;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  len  =  basicRows.size();  i  <  len;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
86	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
87	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
88	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  baseRows);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  baseRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  baseRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
89	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
90	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
91	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  gradient);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  gradient);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  gradient);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
92	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
93	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  mostNegative));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  mostNegative));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  mostNegative));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    mostNegative));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
94	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  mostNegative));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  mostNegative));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  mostNegative));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    mostNegative));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
95	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  maximumNegative));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  maximumNegative));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  maximumNegative));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    mostNegative));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    if(graph.    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  }	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    if(graph.    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
98	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    if(graph.    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.!=  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.!=  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.!=	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    if(graph.    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
100	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
101	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
102	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
104	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  size;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  size;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  size;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
107	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  constrainToNonNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  constrainToNonNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  constrainToNonNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
108	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
111	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(baselines));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(baselines));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(baselines));	  return    new    RealPointValuePair(baselines,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
112	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(baselines,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
113	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
115	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
116	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
117	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  coefficients,  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
118	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
119	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }	  int    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
120	[BUG]  [BUGGY]  int  col  =  basicRows.size()  -  1;  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size()  -  1;  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size()  -  1;  i  <  col;  i++)  {  coefficients[i]  =  0;  }	  int    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
121	[BUG]  [BUGGY]  Integer  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }	  int    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
122	[BUG]  [BUGGY]  int  col  =  basicRows.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size()  -  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size()  -  1;	  int    col    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
123	[BUG]  [BUGGY]  int  col  =  basicRows.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size()  -  2;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size()  -  2;	  int    col    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
124	[BUG]  [BUGGY]  int  col  =  basicRows.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size()  +  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size()  +  1;	  int    col    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
125	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  sum);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  sum);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  sum);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
126	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
127	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  column);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  column);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
128	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows)+  1);	  return    new    RealPointValuePair(baseRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(baseRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
130	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
131	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
132	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  mostNegative);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
133	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients[i]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients[i]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients[i]);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  ==  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  ==  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  ==	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
137	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
140	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  sum);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  sum);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  sum);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
141	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
142	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
146	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
147	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
148	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
150	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow++);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
151	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++,  basicRows.length);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow++);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
152	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++  -  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow++);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
153	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows);	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
154	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset());	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
155	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
156	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	  for(int    i    =    0,    col    =    this.basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  basicRows.length;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  basicRows.length;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  this.basicRows.size();  i  <  basicRows.length;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	  for(int    i    =    0,    col    =    this.basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getVal  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getVal  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getVal	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(bas    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(bas    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(bas    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
161	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(f,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
162	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(f,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
163	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows)+  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows)+  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f,  f.getValue(basicRows)+  basicRows);	  return    new    RealPointValuePair(f,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
164	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  maximumNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  maximumNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  maximumNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    largestNegative);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
165	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  highestNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  highestNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  highestNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    largestNegative);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
166	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    sum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
167	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  sum);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  sum);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  sum);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    sum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
168	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  graph);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  graph);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  graph);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    sum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
169	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
170	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow)+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRow)+  1;	  Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
171	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  column);	  Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
172	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
173	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
174	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
175	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumns()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
176	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()  -  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumns()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
177	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns(),  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumns()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
179	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(0);  buf.append('n');  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(0);  buf.append('n');  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(0);  buf.append('n');  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('N');  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('N');  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('N');  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
182	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
183	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  *  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  *  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
184	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  3);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  3);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
185	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
186	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
187	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  minimumRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  minimumRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  minimumRows);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
188	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
189	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
190	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
191	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  +  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
192	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  gradient);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  gradient);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  gradient);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
193	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumns);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.get  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.get  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.get	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
195	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
196	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
197	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
198	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
199	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  column);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  column);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
200	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
201	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
202	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
203	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
204	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  constrainToNonNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  constrainToNonNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  constrainToNonNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
205	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  restToNonNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  restToNonNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  restToNonNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
206	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicColumn.get(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicColumn.get(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicColumn.get(basicRow);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
207	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
208	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicColumns.get(basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicColumns.get(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicColumns.get(basicRow);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
209	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
210	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
211	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
212	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
213	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicColumns),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
214	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
215	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getLeftOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getLeftOffset()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getLeftOffset()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
216	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
217	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
218	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
219	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
220	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
221	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
222	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  2);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValu    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getVal	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValu    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
225	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  coefficients);	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
226	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(f));	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
227	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  epsilon);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  epsilon);	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
228	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(bases));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(bases));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(bases));	  return    new    RealPointValuePair(bases,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
229	[BUG]  [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(bases,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(bases,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
230	[BUG]  [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(bases,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(bases,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
231	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  sum);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  sum);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  sum);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
232	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  true);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  true);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
233	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
235	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Pentru(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
237	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
238	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
239	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
240	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  basicRows);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
241	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
242	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
243	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  -  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
244	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length)+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length)+  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
245	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  +  1));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
246	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
247	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getRows();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getRows();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getRows();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
248	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getColumns();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.getColumns();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  basicRows.getColumns();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
249	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  basicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
250	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients,  sum);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients,  sum);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients,  sum);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
251	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  3;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  3;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  3;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
252	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
253	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow  +  1);	  Integer    coefficients    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
254	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows  +  1);	  Integer    coefficients    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
255	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow-1);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
256	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(f,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(f,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(f,  0);	  Integer    coefficients    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
257	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  1);	  Integer    coefficients    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
258	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  0);	  Integer    coefficients    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
259	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
260	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  2);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  2);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
261	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
262	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
264	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
265	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows[i]);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows[i]);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
266	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
267	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients.length);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
268	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  column  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  column  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  column  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    column);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
269	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  column,  basicRows);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  column,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  column,  basicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    column);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
270	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
271	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
272	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
273	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  column);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  column);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
274	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
275	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
276	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
277	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
278	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
279	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
280	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
281	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  3;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  3;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  3;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  4;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  4;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  4;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
285	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Pentru(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
286	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
287	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(f));	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
288	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
289	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows[i]));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows[i]));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows[i]));	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
290	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
292	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.!=	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
295	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
296	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  column  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  column  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  column  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    column);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
297	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
298	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  basicRows.length  -  1);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
299	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getEntry(basicRow,  getRhsOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getEntry(basicRow,  getRhsOffset());	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
300	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
301	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  mostNegative);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
302	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  highestNegative);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  highestNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  highestNegative);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
303	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  highest);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  highest);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  highest);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
304	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  basicRows);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
305	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  maximize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  maximize);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  maximize);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
306	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  computationalState);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  computationalState);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  computationalState);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
307	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
308	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  column);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  column);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  column);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  coll);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  coll);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  coll);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  base);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  base);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  base);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
312	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
313	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  0,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  0,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  0,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
314	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(baselines,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph!=  null)  {  return  graph  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph!=  null)  {  return  graph  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph!=  null)  {  return  graph	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graphic!=  null)  {  return  graph  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graphic!=  null)  {  return  graph  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graphic!=  null)  {  return  graph	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
317	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(baselines,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
318	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow)+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow)+  1;	  Integer    coefficients    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
319	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  i  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  i  +  1);	  Integer    coefficients    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
320	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  mostNegative);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
321	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
322	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
323	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-1  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-1  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-1  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow-1);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
324	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
325	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
326	[BUG]  [BUGGY]  Integer  i  =  0,  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  i  =  0,  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  i  =  0,  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }	  int    i    =    0,    col    =    basicRows.size();    i    <    col    +=    coefficients.length;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
327	[BUG]  [BUGGY]  int  i  =  0,  col  =  coefficients.size();  i  <  col  +=  basicRows.length;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  coefficients.size();  i  <  col  +=  basicRows.length;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  coefficients.size();  i  <  col  +=  basicRows.length;  i++)  {  coefficients[i]  =  0;  }	  int    i    =    0,    col    =    basicRows.size();    i    <    col    +=    coefficients.length;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
328	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns())+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns())+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns())+  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getColumns()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
330	[BUG]  [BUGGY]  int  col  =  this.basicRows.size();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  this.basicRows.size();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  this.basicRows.size();	  int    col    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  baseRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  baseRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  baseRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
333	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
334	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(basicRow.getValue(),    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
335	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
336	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns,  mostNegative));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns,  mostNegative));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns,  mostNegative));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
337	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.get(basicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.get(basicRow));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.get(basicRow));	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.size());    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
338	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  ==  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  ==  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  ==	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    if(graph.    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
339	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn())+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn())+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn())+  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
340	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
341	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
342	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(baseRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
343	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn  -  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
344	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow  +  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
345	[BUG]  [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(bases,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(bases,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
346	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
347	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRow));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
348	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  0);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
349	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  >  col;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  >  col;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  >  col;  i++)  {  coefficients[i]  =  0;  }	  int    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
351	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
352	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
353	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
354	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
355	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  largestNegative,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  largestNegative,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  largestNegative,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    largestNegative);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValu    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
357	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
358	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
359	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++,  mostNegative);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow++);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
360	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
361	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
362	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  largestNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  largestNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  largestNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOff  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOff	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
364	[BUG]  [BUGGY]  Integer  mostNegative  =  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  mostNegative  =  getEntry(basicRow,  getRhsOffset());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  mostNegative  =  getEntry(basicRow,  getRhsOffset());	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
365	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  mostNegative);	  Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
366	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)/  2,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)/  2,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)/  2,  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
367	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)+  1,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)+  1,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)+  1,  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
368	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumns);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
369	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createRealObjectiveFunction(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createRealObjectiveFunction(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createRealObjectiveFunction(basicRow,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
370	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
371	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(baseRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(baseRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(baseRows));	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  3;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  3;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  3;  i++)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    2;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
373	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  mostNegative);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
374	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients;	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
375	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
376	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  mostNegative);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
377	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  highestNegative));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  highestNegative));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  highestNegative));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    mostNegative));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
378	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  maximum));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  maximum));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  maximum));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    mostNegative));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
379	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    sum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
380	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficient);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficient);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficient);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    sum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
381	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i!=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i!=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i!=  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
382	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
383	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)/  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)/  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)/  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
384	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
385	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(f));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(f));	  return    new    RealPointValuePair(f,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
386	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(f,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
387	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
388	[BUG]  [BUGGY]  Integer  coefficients[]  =  this.basicRows.getValues();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  this.basicRows.getValues();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  this.basicRows.getValues();	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  baseRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  baseRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  baseRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
390	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
391	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
392	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  }	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
394	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
395	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(bas	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
396	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  total);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  total);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  total);	  Integer    coefficients    =    f.getValue(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
397	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
398	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue());	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
399	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
400	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
401	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  this.basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
402	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
403	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  highestNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  highestNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  highestNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
404	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(baseRow));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(baseRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(baseRow));	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
405	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
406	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  getBasicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  getBasicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  getBasicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	  for(int    i    =    0,    col    =    this.basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  this.basicRows.size();  i  <  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	  for(int    i    =    0,    col    =    this.basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
408	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  0,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  0,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  0,  mostNegative);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
409	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
410	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0L);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0L);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0L);	  Integer    coefficients    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
411	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
412	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(f),  mostNegative);	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
413	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue());	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
414	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('m');  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('m');  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('m');  }	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
415	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
416	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
417	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)-  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)-  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)-  1);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
418	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
419	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getRealObjectiveFunction(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getRealObjectiveFunction(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getRealObjectiveFunction(basicRow,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
420	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  mostNegative);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
421	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  largestNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  largestNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  largestNegative);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
422	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
423	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRow);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
424	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients,  basicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
425	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRows.size();  i  <  len;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  len  =  basicRows.size();  i  <  len;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  len  =  basicRows.size();  i  <  len;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basic    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
426	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +=  2;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +=  2;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col  +=  2;  i++)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    2;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
427	[BUG]  [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    buf.append(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
428	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.size());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.size());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
429	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  zero);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  zero);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  zero);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
430	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValu    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
431	[BUG]  [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	&&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
432	[BUG]  [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	&&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
433	[BUG]  [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
434	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows,  mostNegative);	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset(),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
435	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients)+  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
436	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
437	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(baselines,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
438	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  true));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  true));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  true));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    mostNegative));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
439	[BUG]  [BUGGY]  int  col  =  coefficients.size();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  coefficients.size();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  coefficients.size();	  int    col    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
440	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.toArray(new  Integer[basicRows.size()  ]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.toArray(new  Integer[basicRows.size()  ]);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  basicRows.toArray(new  Integer[basicRows.size()  ]);	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
441	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  1);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
442	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	  for(int    i    =    0,    col    =    this.basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
443	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    this.basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
444	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
445	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.values());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.values());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.values());	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.size());    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
446	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
447	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(bas  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(bas  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(bas	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
448	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow)    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
449	[BUG]  [BUGGY]  for(int  i  =  0,  col  <  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  <  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  <  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
450	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(1,  col);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(1,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(1,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
451	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  *=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  *=  Math.pow(0,  col);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  *=  Math.pow(0,  col);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    coefficients[i]    +=    Math.pow(0,    col);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
452	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow  +  1,  basicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow  +  1,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow  +  1,  basicRows);	  Integer    coefficients    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
453	[BUG]  [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	&&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
454	[BUG]  [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	&&  basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
455	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    if(graph.    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
456	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)-  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)-  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)-  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
457	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  strictToNonNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  strictToNonNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  strictToNonNegative);	  Integer    coefficients    =    f.getValue(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
458	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  limit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  limit);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  limit);	  Integer    coefficients    =    f.getValue(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
459	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)	  for(int    i    =    0,    col    =    basicRows.size();    i    <    0;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
460	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Pentru(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Pentru(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	  if(basicRows!=    null)    {    for(int    i    =    0;    i    <    basicRows.size();    i++)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
461	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(baselines,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
462	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  minimumRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  minimumRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  minimumRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
463	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  maximum);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  maximum);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  maximum);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
464	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(f),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(f),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(f),  coefficients);	  return    new    RealPointValuePair(basicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
465	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.size());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.size());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
466	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col  +=  1;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  col  =  basicRows.size();  i  <  col  +=  1;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col  +=  1;  i++)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
467	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  limit);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  limit);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  limit);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
468	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn++);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn++);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn++);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow++);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
469	[BUG]  [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(bases,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(bases,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
470	[BUG]  [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	&&  basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
471	[BUG]  [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  &&  basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	&&  basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if	  if(basicRows!=    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    buf    =(BasicMatrix)basicRows.get(i);    if(buf.equals(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
472	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
473	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return	  if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow);    if(graph!=    null)    {    return    graph    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
474	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  sum,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  sum,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  sum,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows,    sum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
475	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size());	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
476	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows,  basicRows.length  +  1);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
477	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseCoefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseCoefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseCoefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
478	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
479	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRows);	  Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
480	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  getColumns());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  getColumns());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  getColumns());	  Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
481	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
482	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(f),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(f),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(f),  basicRows);	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
483	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(f),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(f),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(f),  mostNegative);	  return    new    RealPointValuePair(basicRows,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
484	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
485	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
486	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset())-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset())-  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset())-  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
487	[BUG]  [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	For(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
488	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicColumns));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
489	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)	  for(int    i    =    0,    col    =    basicRows.size();    i    <    2;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
490	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	  for(int    i    =    0,    col    =    basicRows.size();    i    <    col    +    1;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
491	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset()  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset()  +  1);  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset()  +  1);  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
492	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getColumnsOffset());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getColumnsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getColumnsOffset());  }	  if(basicRows    ==    null)    {    for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    BasicMatrix    graph    =    getBasicMatrix(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
493	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic,  f.getValue(bas  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic,  f.getValue(bas  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic,  f.getValue(bas	  for(int    i    =    0,    col    =    coefficients.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
494	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
