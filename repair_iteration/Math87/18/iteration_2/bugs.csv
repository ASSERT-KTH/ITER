bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows.length));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  sum);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  column);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  column);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  column);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
9	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  1);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow  +  1);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow.length);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicColumn);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(bases,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(bases,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(f));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(f));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(f));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRow);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getValue(basicRow);	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getColumns();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getColumns();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getColumns();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValues();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  basicRows.getValues();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  basicRows.getValues();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  0;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basic	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
30	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(f);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  basicRows.getValue(f);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  basicRows.getValue(f);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows.length);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows.length);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset(),  basicRows);	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn());	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns());	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(baseRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
46	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  basicRows);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append(	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  buf.append('n');  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  i++)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow.getValue(),  f.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
54	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  int  col  =  basicRows.size();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  int  col  =  basicRows.size();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  int  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  int  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(f));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(f));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  mostNegative);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  mostNegative));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  mostNegative));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  mostNegative));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  this.basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  this.basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getCoefficients();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getCoefficients();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  f.getCoefficients();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  2;  i++)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  int  i  =  0,  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	int  i  =  0,  col  =  basicRows.size();  i  <  col  +=  coefficients.length;  i++)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
74	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  mostNegative);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValu  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValu  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValu	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValu  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValu  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValu	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(bas  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(bas  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(bas	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  mostNegative);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  mostNegative);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(f,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(f,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  mostNegative);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  mostNegative);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
84	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
85	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  largestNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  largestNegative);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  largestNegative);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValu	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
89	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  mostNegative);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  mostNegative);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  mostNegative);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow  +  1);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow  +  1);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  mostNegative);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  mostNegative);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
93	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-1);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow-1);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  mostNegative);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  mostNegative);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
95	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows!=  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  buf  =(BasicMatrix)basicRows.get(i);  if(buf.equals(	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  if(graph.	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow);  if(graph!=  null)  {  return  graph	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows  ==  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  BasicMatrix  graph  =  getBasicMatrix(basicRow,  getRhsOffset());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  if(basicRows  ==  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	if(basicRows  ==  null)  {  for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  coefficients[i]  +=  Math.pow(0,  col);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRows);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(baseRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow)	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
110	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  +  1));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  +  1));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  2;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    coefficients[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
112	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow++);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  basicRows.size();  i  <  col  +  1;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  }	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    i++)    {    BasicMatrix    graph    =    getBasicMatrix(i).getMatrix();    coefficients[i]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size());	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
116	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
117	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1);	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(basic  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(basic  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	for(int  i  =  0,  col  =  coefficients.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(basic	      for(int    i    =    0,    col    =    basicRows.size();    i    <    col;    ++i)    {    if(!basicRows.contains(basicRow))    {    return    new    RealPointValuePair(basicRow,    f.getValue(basic    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
119	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
120	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baselines,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baselines,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
