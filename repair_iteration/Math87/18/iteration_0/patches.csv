bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(coefficients));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
3	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(coefficients));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(coefficients));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	  	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
6	[BUG]  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	36	None	add
7	[BUG]  [BUGGY]    Integer  coefficients[]  =  f.getValues();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    Integer  coefficients[]  =  f.getValues();  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    Integer  coefficients[]  =  f.getValues();		non-compiled	[CE]  illegal  start  of  expression	36	None	add
8	[BUG]  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()));  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()));		non-compiled	[CE]  illegal  start  of  expression	36	None	add
9	[BUG]  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  coefficients[i]  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	36	None	add
10	[BUG]  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  i++)  {  BasicMatrix  graph  =  getBasicMatrix(i).getMatrix();  coefficients[i]  =  graph.getValue(basicRow);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
11	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(coefficients));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
12	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow);  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
13	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow);  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)basicRows.get(basicRow);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
14	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows);  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
15	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow);  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
16	[BUG]  [BUGGY]    Integer  coefficients  =  f.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    Integer  coefficients  =  f.getValue(basicRow);  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    Integer  coefficients  =  f.getValue(basicRow);		non-compiled	[CE]  illegal  start  of  expression	36	None	add
17	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
18	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns));  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns));	return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
19	[BUG]  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  }		non-compiled	[CE]  illegal  start  of  expression	36	None	add
20	[BUG]  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(basic  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(basic  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  f.getValue(basic		non-compiled	[CE]  illegal  start  of  expression	36	None	add
21	[BUG]  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]    coefficients[i]  =  0;  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }  [BUGGY]    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	343	343	1	replace	    for(int  i  =  0,  col  =  basicRows.size();  i  <  col;  ++i)  {  if(!basicRows.contains(basicRow))  {  return  new  RealPointValuePair(basicRow,  coefficients[i]);  }		non-compiled	[CE]  illegal  start  of  expression	36	None	add
