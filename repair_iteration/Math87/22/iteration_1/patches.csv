bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getConstraints();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  goalType.getConstraints();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getConstraints();	      LinearObjectiveFunction    f    =    f.getConstraints();    	non-compiled	[CE]  ')'  expected	11	None	replace
2	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitPrototype();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitPrototype();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitPrototype();	      LinearObjectiveFunction    f    =    f.getConstraints();    	non-compiled	[CE]  ')'  expected	11	None	replace
3	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getDecorated();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getDecorated();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getDecorated();	      LinearObjectiveFunction    f    =    f.getConstraints();    	non-compiled	[CE]  ')'  expected	11	None	replace
4	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f  {  GoalType.MAXIMIZE),  goalType);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f  {  GoalType.MAXIMIZE),  goalType);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f  {  GoalType.MAXIMIZE),  goalType);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
5	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f),  goalType);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f),  goalType);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f),  goalType);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
6	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f,  constrainToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f,  constrainToNonNegative);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
7	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE),  f);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE),  f);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE),  f);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
8	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  goalType)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  goalType)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  goalType)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  constraints)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  constraints)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  constraints)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  this.numDecisionVariables,  constraints)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables,  constraints)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  constraints)  {	  this.numDecisionVariables)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  this.numDecisionVariables,  numArtificialVariables)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables,  numArtificialVariables)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  numArtificialVariables)  {	  this.numDecisionVariables)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  this.numDecisionVariables,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables,  constrainToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  constrainToNonNegative)  {	  this.numDecisionVariables)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  this.numDecisionVariables  =  constraints.size()  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables  =  constraints.size()  -  1;  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables  =  constraints.size()  -  1;	  this.numDecisionVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  this.numDecisionVariables  =  constraints.size()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables  =  constraints.size()  +  1;  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables  =  constraints.size()  +  1;	  this.numDecisionVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  this.numDecisionVariables  =  f.size();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables  =  f.size();  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables  =  f.size();	  this.numDecisionVariables    =    constraints.size();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  this.constraints,  goalType,  constraints,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.constraints,  goalType,  constraints,  constrainToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraints,  constrainToNonNegative)  {	  this.constraints,    constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType);    	non-compiled	[CE]  ')'  expected	12	None	replace
21	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraints);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraints);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraints);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType);    	non-compiled	[CE]  ')'  expected	12	None	replace
22	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limitToNonNegative);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limitToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limitToNonNegative);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType);    	non-compiled	[CE]  ')'  expected	12	None	replace
23	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType);    	non-compiled	[CE]  ')'  expected	12	None	replace
24	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType);  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType);	  ((    LinearObjectiveFunction)f).setConstraints(constraints);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
25	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative);  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(epsilon);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(epsilon);  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(epsilon);	  ((    LinearObjectiveFunction)f).setConstraints(constraints);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(limits);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(limits);  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(limits);	  ((    LinearObjectiveFunction)f).setConstraints(constraints);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
28	[BUG]  [BUGGY]  int  epsilon)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  int  epsilon)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	int  epsilon)  {	  final    int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constrainToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constrainToNonNegative);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction();	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	13	None	replace
32	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	13	None	replace
33	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MINIMIZE));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MINIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MINIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  this.constraints,  goalType,  constraints,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.constraints,  goalType,  constraints,  restrictToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraints,  restrictToNonNegative)  {	  this.constraints,    constraints,    goalType,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  this.constraints,  constraints,  goalType,  epsilon)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.constraints,  constraints,  goalType,  epsilon)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  constraints,  goalType,  epsilon)  {	  this.constraints,    constraints,    goalType,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints);    	non-compiled	[CE]  ')'  expected	10	None	replace
38	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints);    	non-compiled	[CE]  ')'  expected	10	None	replace
39	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints);    	non-compiled	[CE]  ')'  expected	10	None	replace
40	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType));  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getRangeMatrix();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getRangeMatrix();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getRangeMatrix();	      LinearObjectiveFunction    f    =    f.getRealMatrix();    	non-compiled	[CE]  ')'  expected	9	None	replace
44	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getRawMatrix();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getRawMatrix();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getRawMatrix();	      LinearObjectiveFunction    f    =    f.getRealMatrix();    	non-compiled	[CE]  ')'  expected	9	None	replace
45	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getBase();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getBase();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getBase();	      LinearObjectiveFunction    f    =    f.getRealMatrix();    	non-compiled	[CE]  ')'  expected	9	None	replace
46	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  restrictToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  restrictToNonNegative);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction();	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	13	None	replace
48	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).getRestrictToNonNegative)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictToNonNegative);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictToNonNegative);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType);    	non-compiled	[CE]  ')'  expected	12	None	replace
50	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictionToNonNegative);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictionToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictionToNonNegative);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType);    	non-compiled	[CE]  ')'  expected	12	None	replace
51	[BUG]  [BUGGY]  this.numDecisionVariables,  numSlackVariables)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables,  numSlackVariables)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  numSlackVariables)  {	  this.numDecisionVariables)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(feedType  ==  GoalType.MAXIMIZE),  goalType);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(feedType  ==  GoalType.MAXIMIZE),  goalType);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(feedType  ==  GoalType.MAXIMIZE),  goalType);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  goalType  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  goalType  :  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(restrictToNonNegative?  goalType  :  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  final  boolean  epsilon)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  final  boolean  epsilon)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  boolean  epsilon)  {	  final    int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRealMatrix();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRealMatrix();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitRealMatrix();	      LinearObjectiveFunction    f    =    f.getRealMatrix();    	non-compiled	[CE]  ')'  expected	9	None	replace
58	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getInitialValue();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getInitialValue();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getInitialValue();	      LinearObjectiveFunction    f    =    f.getRealMatrix();    	non-compiled	[CE]  ')'  expected	9	None	replace
59	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(strictToNonNegative);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(strictToNonNegative);  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(strictToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  this.constraints,  goalType,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.constraints,  goalType,  constrainToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constrainToNonNegative)  {	  this.constraints,    constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  this.constraints,  goals,  goalType,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.constraints,  goals,  goalType,  restrictToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goals,  goalType,  restrictToNonNegative)  {	  this.constraints,    constraints,    goalType,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  restrictToNonNegative);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  restrictToNonNegative);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRelationship();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRelationship();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitRelationship();	      LinearObjectiveFunction    f    =    f.getConstraints();    	non-compiled	[CE]  ')'  expected	11	None	replace
64	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getOwner();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  f.getOwner();  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getOwner();	      LinearObjectiveFunction    f    =    f.getConstraints();    	non-compiled	[CE]  ')'  expected	11	None	replace
65	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getClass());  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getClass());  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getClass());	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	13	None	replace
66	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	13	None	replace
67	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon);  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon);	  ((    LinearObjectiveFunction)f).setConstraints(constraints);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  (double)epsilon)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  (double)epsilon)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	(double)epsilon)  {	  final    int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  epsilon)  {  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  epsilon)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	epsilon)  {	  final    int    epsilon)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getArtificialVariables())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables,  f.getArtificialVariables())  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getArtificialVariables())  {	  this.numDecisionVariables)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  this.numDecisionVariables,  constraintToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.numDecisionVariables,  constraintToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  constraintToNonNegative)  {	  this.numDecisionVariables)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
74	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.valueType  ==  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.valueType  ==  GoalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f.valueType  ==  GoalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.getName(),  goalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.getName(),  goalType.MAXIMIZE));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f.getName(),  goalType.MAXIMIZE));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
76	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.type),  goalType.MAXIMIZE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.type),  goalType.MAXIMIZE);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f.type),  goalType.MAXIMIZE);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
77	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictToNonNegative)  {  [BUGGY]    this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictToNonNegative)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon));  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f  instanceof  GoalType.MAXIMIZE),  goalType);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f  instanceof  GoalType.MAXIMIZE),  goalType);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f  instanceof  GoalType.MAXIMIZE),  goalType);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
81	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon));  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon));	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
82	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
83	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f);	      this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
84	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,    [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints);  [BUGGY]    final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints);	      LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints);    	non-compiled	[CE]  ')'  expected	10	None	replace
