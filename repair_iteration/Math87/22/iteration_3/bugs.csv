bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  limitToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  limitToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  limitToNonNegative)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  epsilon)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  epsilon)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  epsilon)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
3	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getRelationship();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getRelationship();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getRelationship();	  LinearObjectiveFunction    f    =    f.getImplicitRelationship();    	non-compiled	[CE]  ')'  expected	63	None	replace
4	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getConstraintRelationship();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getConstraintRelationship();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getConstraintRelationship();	  LinearObjectiveFunction    f    =    f.getImplicitRelationship();    	non-compiled	[CE]  ')'  expected	63	None	replace
5	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getConstraint();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getConstraint();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getConstraint();	  LinearObjectiveFunction    f    =    f.getImplicitRelationship();    	non-compiled	[CE]  ')'  expected	63	None	replace
6	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction().clone();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction().clone();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction().clone();	  final    LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	31	None	replace
7	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction().cloneTree();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction().cloneTree();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction().cloneTree();	  final    LinearObjectiveFunction    f    =    new    LinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	31	None	replace
8	[BUG]  [BUGGY]  (double)restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  (double)restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	(double)restrictToNonNegative)  {	  (double)epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
9	[BUG]  [BUGGY]  (double)epsilon,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  (double)epsilon,  constrainToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	(double)epsilon,  constrainToNonNegative)  {	  (double)epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
10	[BUG]  [BUGGY]  (double)epsilon,  constraintToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  (double)epsilon,  constraintToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	(double)epsilon,  constraintToNonNegative)  {	  (double)epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
11	[BUG]  [BUGGY]  this.numDecisionVariables,  limitToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  limitToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  limitToNonNegative)  {	  this.numDecisionVariables,    constraintToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
12	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getClass(),  goalType);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getClass(),  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getClass(),  goalType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
13	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getRawClass());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getRawClass());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getRawClass());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
14	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType.getClass());  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType.getClass());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType.getClass());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
15	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getRange());  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getRange());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getRange());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
16	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  goalType,  constraints)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  goalType,  constraints)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  goalType,  constraints)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    goalType)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getImplicitPrototype();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getImplicitPrototype();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getImplicitPrototype();	  LinearObjectiveFunction    f    =    f.getImplicitPrototype();    	non-compiled	[CE]  ')'  expected	2	None	replace
18	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getConstructor();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getConstructor();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getConstructor();	  LinearObjectiveFunction    f    =    f.getImplicitPrototype();    	non-compiled	[CE]  ')'  expected	2	None	replace
19	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f);    	non-compiled	[CE]  ')'  expected	32	None	replace
20	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  targetType);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  targetType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  targetType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f);    	non-compiled	[CE]  ')'  expected	32	None	replace
21	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative,  constraints);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
22	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative,  f);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative,  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constrainToNonNegative,  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
23	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getLinear();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getLinear();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getLinear();	  LinearObjectiveFunction    f    =    f.getDecorated();    	non-compiled	[CE]  ')'  expected	3	None	replace
24	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.get();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.get();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.get();	  LinearObjectiveFunction    f    =    f.getDecorated();    	non-compiled	[CE]  ')'  expected	3	None	replace
25	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getDeclaringClass();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getDeclaringClass();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getDeclaringClass();	  LinearObjectiveFunction    f    =    goalType.getConstraints();    	non-compiled	[CE]  ')'  expected	1	None	replace
26	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getConstraints()  +  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getConstraints()  +  1;  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getConstraints()  +  1;	  LinearObjectiveFunction    f    =    goalType.getConstraints();    	non-compiled	[CE]  ')'  expected	1	None	replace
27	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getDependency();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getDependency();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getDependency();	  LinearObjectiveFunction    f    =    goalType.getConstraints();    	non-compiled	[CE]  ')'  expected	1	None	replace
28	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  ==  GoalType.MAXIMIZE),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f),  goalType,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f),  goalType,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f),  goalType,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f  {  GoalType.MAXIMIZE),  goalType,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f  {  GoalType.MAXIMIZE),  goalType,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f  {  GoalType.MAXIMIZE),  goalType,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f,  constraints);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(f),    goalType);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(f),    goalType);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getRange();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getRange();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getRange();	  LinearObjectiveFunction    f    =    f.getOwner();    	non-compiled	[CE]  ')'  expected	64	None	replace
35	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getNumber();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getNumber();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getNumber();	  LinearObjectiveFunction    f    =    f.getInitialValue();    	non-compiled	[CE]  ')'  expected	58	None	replace
36	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getNegativeValue();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getNegativeValue();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getNegativeValue();	  LinearObjectiveFunction    f    =    f.getInitialValue();    	non-compiled	[CE]  ')'  expected	58	None	replace
37	[BUG]  [BUGGY]  final  boolean  restrictToNonNegative)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  boolean  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  boolean  restrictToNonNegative)  {	  final    boolean    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
38	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  goalType);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  goalType);	  this.tableau    =    new    RealMatrixImpl(createTableau(f    instanceof    GoalType.MAXIMIZE),    goalType);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
39	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  goalType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  goalType);	  this.tableau    =    new    RealMatrixImpl(createTableau(f    instanceof    GoalType.MAXIMIZE),    goalType);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
40	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE),  goalType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE),  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE),  goalType);	  this.tableau    =    new    RealMatrixImpl(createTableau(f    instanceof    GoalType.MAXIMIZE),    goalType);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
41	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ),    f);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
42	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f,  constraints);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  f,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ),    f);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
43	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goals);    	non-compiled	[CE]  ')'  expected	38	None	replace
44	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goals);    	non-compiled	[CE]  ')'  expected	38	None	replace
45	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  GoalType.MAXIMIZE);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  GoalType.MAXIMIZE);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  GoalType.MAXIMIZE);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goals);    	non-compiled	[CE]  ')'  expected	38	None	replace
46	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  epsilon);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  epsilon);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  epsilon);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
47	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(epsilon,  constraints);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(epsilon,  constraints);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(epsilon,  constraints);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
48	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constrainToNonNegative,  constraints);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constrainToNonNegative,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constrainToNonNegative,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    restrictToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
51	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(limits,  goalType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(limits,  goalType);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(limits,  goalType);	  ((    LinearObjectiveFunction)f).setConstraints(limits);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
52	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative,  constraints);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative,  constraints);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraintToNonNegative);    	non-compiled	[CE]  ')'  expected	23	None	replace
53	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  constraintToNonNegative);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  constraintToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraintToNonNegative);    	non-compiled	[CE]  ')'  expected	23	None	replace
54	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  constrainToNonNegative));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  constrainToNonNegative));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  constrainToNonNegative));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
55	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
56	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getLinearMatrix();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getLinearMatrix();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getLinearMatrix();	  LinearObjectiveFunction    f    =    f.getRawMatrix();    	non-compiled	[CE]  ')'  expected	44	None	replace
57	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getMatrix();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getMatrix();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getMatrix();	  LinearObjectiveFunction    f    =    f.getRawMatrix();    	non-compiled	[CE]  ')'  expected	44	None	replace
58	[BUG]  [BUGGY]  this.constraints,  goalType,  goals,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  goals,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  goals,  restrictToNonNegative)  {	  this.constraints,    goals,    goalType,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
59	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  targetType);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  targetType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  targetType);	  this.tableau    =    new    RealMatrixImpl(createTableau(f    {    GoalType.MAXIMIZE),    goalType);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  goalType.MAXIMIZE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  goalType.MAXIMIZE);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  goalType.MAXIMIZE);	  this.tableau    =    new    RealMatrixImpl(createTableau(f.type),    goalType.MAXIMIZE);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
61	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  goalType.MAXIMIZE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  goalType.MAXIMIZE);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  goalType.MAXIMIZE);	  this.tableau    =    new    RealMatrixImpl(createTableau(f.type),    goalType.MAXIMIZE);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
62	[BUG]  [BUGGY]  epsilon,  constraints)  {  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  epsilon,  constraints)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	epsilon,  constraints)  {	  epsilon)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
63	[BUG]  [BUGGY]  epsilon,  goalType)  {  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  epsilon,  goalType)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	epsilon,  goalType)  {	  epsilon)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
64	[BUG]  [BUGGY]  double  epsilon)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  double  epsilon)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	double  epsilon)  {	  int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
65	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  goalType);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  goalType);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  goalType);	  ((    LinearObjectiveFunction)f).setConstraints(restrictToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
66	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >=  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >=  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >=  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
67	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limitToNonNegative,  constraints);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limitToNonNegative,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limitToNonNegative,  constraints);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    limitToNonNegative);    	non-compiled	[CE]  ')'  expected	22	None	replace
68	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(this.constraints,  f);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(this.constraints,  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(this.constraints,  f);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    this.constraints);    	non-compiled	[CE]  ')'  expected	84	None	replace
69	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    this.constraints);    	non-compiled	[CE]  ')'  expected	84	None	replace
70	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(this.constraints,  constraints);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(this.constraints,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(this.constraints,  constraints);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    this.constraints);    	non-compiled	[CE]  ')'  expected	84	None	replace
71	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(f);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(f);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	47	None	replace
72	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction();	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	47	None	replace
73	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createRangeObjectiveFunction();  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  createRangeObjectiveFunction();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  createRangeObjectiveFunction();	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	47	None	replace
74	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints,    goalType);    	non-compiled	[CE]  ')'  expected	39	None	replace
75	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(epsilon,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(epsilon,  constrainToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(epsilon,  constrainToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(epsilon);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
76	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  epsilon);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  epsilon);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  epsilon);	  ((    LinearObjectiveFunction)f).setConstraints(epsilon);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
77	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
78	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType),  GoalType.MAXIMIZE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType),  GoalType.MAXIMIZE);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType),  GoalType.MAXIMIZE);	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
79	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  goalType  ==  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  goalType  ==  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  goalType  ==  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
80	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  goalType);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  goalType);	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
81	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getImplicitRealMatrix();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getImplicitRealMatrix();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getImplicitRealMatrix();	  LinearObjectiveFunction    f    =    f.getImplicitRealMatrix();    	non-compiled	[CE]  ')'  expected	57	None	replace
82	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitMatrix();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitMatrix();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitMatrix();	  LinearObjectiveFunction    f    =    f.getImplicitRealMatrix();    	non-compiled	[CE]  ')'  expected	57	None	replace
83	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE,    goalType));    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
84	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constrainToNonNegative));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constrainToNonNegative));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constrainToNonNegative));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE,    goalType));    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
85	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE,    goalType));    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
86	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative,  constraints);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
87	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative,  f);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative,  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constrainToNonNegative,  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
88	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  epsilon);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  epsilon);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  epsilon);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    restrictionToNonNegative);    	non-compiled	[CE]  ')'  expected	50	None	replace
89	[BUG]  [BUGGY]  this.numDecisionVariables,  numSlackVariables,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  numSlackVariables,  constrainToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  numSlackVariables,  constrainToNonNegative)  {	  this.numDecisionVariables,    numSlackVariables)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
90	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints,  goalType);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints,  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints,  goalType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(constraints);    	non-compiled	[CE]  ')'  expected	66	None	replace
91	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(constraints);    	non-compiled	[CE]  ')'  expected	66	None	replace
92	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(restrictToNonNegative);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(restrictToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(constraints);    	non-compiled	[CE]  ')'  expected	66	None	replace
93	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
94	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  constraints);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
95	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getArtificialVariables(),  constraints)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getArtificialVariables(),  constraints)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getArtificialVariables(),  constraints)  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
96	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getArtificialVariables(),  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getArtificialVariables(),  constrainToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getArtificialVariables(),  constrainToNonNegative)  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
97	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getBase())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getBase())  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getBase())  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
98	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative,  constraints);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative,  constraints);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constrainToNonNegative);    	non-compiled	[CE]  ')'  expected	20	None	replace
99	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  constrainToNonNegative);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  constrainToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constrainToNonNegative);    	non-compiled	[CE]  ')'  expected	20	None	replace
100	[BUG]  [BUGGY]  this.constraints,  goalType,  constraints)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  constraints)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraints)  {	  this.constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
101	[BUG]  [BUGGY]  this.constraints,  goalType,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  restrictToNonNegative)  {	  this.constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
102	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
103	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon),  constrainToNonNegative));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon),  constrainToNonNegative));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  epsilon),  constrainToNonNegative));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
104	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
105	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  constrainToNonNegative));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  constrainToNonNegative));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  constrainToNonNegative));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
106	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  goalType),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
107	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
108	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
109	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
110	[BUG]  [BUGGY]  this.numDecisionVariables  =  f.size()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables  =  f.size()  +  1;  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables  =  f.size()  +  1;	  this.numDecisionVariables    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
111	[BUG]  [BUGGY]  this.numDecisionVariables  =  f.size()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables  =  f.size()  -  1;  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables  =  f.size()  -  1;	  this.numDecisionVariables    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
112	[BUG]  [BUGGY]  this.numDecisionVariables  =  f.size()  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables  =  f.size()  +  2;  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables  =  f.size()  +  2;	  this.numDecisionVariables    =    f.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
113	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  goals)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  goals)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  goals)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    constraints)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
114	[BUG]  [BUGGY]  this.numDecisionVariables,  numStandardVariables)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  numStandardVariables)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  numStandardVariables)  {	  this.numDecisionVariables,    numArtificialVariables)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  goals);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  goals);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  goals);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraints);    	non-compiled	[CE]  ')'  expected	21	None	replace
116	[BUG]  [BUGGY]  This.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  This.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	This.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(f.valueType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
117	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    f);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
118	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f,  constraints);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  f,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    f);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
119	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
120	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
121	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType!=  GoalType.MAXIMIZE?  goalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
122	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative,  goalType)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative,  goalType)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).getRestrictToNonNegative,  goalType)  {	  ((    LinearObjectiveFunction)f).getRestrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
123	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative,  constraints)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative,  constraints)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).getRestrictToNonNegative,  constraints)  {	  ((    LinearObjectiveFunction)f).getRestrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
124	[BUG]  [BUGGY]  this.constraints,  goalType,  constraints,  epsilon)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  constraints,  epsilon)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraints,  epsilon)  {	  this.constraints,    constraints,    goalType,    epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
125	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    goalType);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
126	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  constrainToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  constrainToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    goalType);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
127	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictionToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictionToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictionToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    goalType);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
128	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  GoalType.MAXIMIZE),  f);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  GoalType.MAXIMIZE),  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType,  GoalType.MAXIMIZE),  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
129	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MAXIMIZE),  f);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MAXIMIZE),  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MAXIMIZE),  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
130	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType),  f);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType),  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType),  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
131	[BUG]  [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	final  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType);	  final    LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints);    	non-compiled	[CE]  ')'  expected	37	None	replace
132	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getPosition();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getPosition();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getPosition();	  LinearObjectiveFunction    f    =    f.getRangeMatrix();    	non-compiled	[CE]  ')'  expected	43	None	replace
133	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getNumberMatrix();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getNumberMatrix();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getNumberMatrix();	  LinearObjectiveFunction    f    =    f.getRangeMatrix();    	non-compiled	[CE]  ')'  expected	43	None	replace
134	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT),    f);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
135	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f,  constraints);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f,  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  f,  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT),    f);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
136	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getRaw();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getRaw();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getRaw();	  LinearObjectiveFunction    f    =    f.getBase();    	non-compiled	[CE]  ')'  expected	45	None	replace
137	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getNegativeFunction();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getNegativeFunction();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getNegativeFunction();	  LinearObjectiveFunction    f    =    f.getBase();    	non-compiled	[CE]  ')'  expected	45	None	replace
138	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
139	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  constrainToNonNegative));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  constrainToNonNegative));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  constrainToNonNegative));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
140	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  goalType),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
141	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  restrictToNonNegative);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  restrictToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    restrictToNonNegative);    	non-compiled	[CE]  ')'  expected	49	None	replace
142	[BUG]  [BUGGY]  this.constraints,  goalType,  constraints,  restrictionToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  constraints,  restrictionToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraints,  restrictionToNonNegative)  {	  this.constraints,    goalType,    constraints,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
143	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.SHORT),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.SHORT),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.SHORT),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
144	[BUG]  [BUGGY]  This.numDecisionVariables  =  constraints.size();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  This.numDecisionVariables  =  constraints.size();  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	This.numDecisionVariables  =  constraints.size();	  this.numDecisionVariables    =    constraints.size()    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
145	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon,  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon,  restrictToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon,  restrictToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
146	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getImplicitReturn());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getImplicitReturn());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getImplicitReturn());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
147	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getDecorated());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getDecorated());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getDecorated());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
148	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  {  GoalType.MAXIMIZE),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  {  GoalType.MAXIMIZE),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType  {  GoalType.MAXIMIZE),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
149	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
150	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MINIMIZE,  goalType));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MINIMIZE,  goalType));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  {  GoalType.MINIMIZE,  goalType));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE,    goalType));    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
151	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f.type);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f.type);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE),  f.type);	  this.tableau    =    new    RealMatrixImpl(createTableau(f.type),    goalType.MAXIMIZE);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
152	[BUG]  [BUGGY]  (float)epsilon)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  (float)epsilon)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	(float)epsilon)  {	  (double)epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
153	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType.MINIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType.MINIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType.MINIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
154	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goals.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goals.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goals.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
155	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.DEFAULT),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.DEFAULT),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.DEFAULT),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
156	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
157	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitReturn();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitReturn();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitReturn();	  LinearObjectiveFunction    f    =    f.getDecorated();    	non-compiled	[CE]  ')'  expected	3	None	replace
158	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getNegative();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getNegative();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getNegative();	  LinearObjectiveFunction    f    =    f.getDecorated();    	non-compiled	[CE]  ')'  expected	3	None	replace
159	[BUG]  [BUGGY]  ((  RealMatrix  <  GoalType>)f).restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  RealMatrix  <  GoalType>)f).restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  RealMatrix  <  GoalType>)f).restrictToNonNegative)  {	  epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
160	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  constrainToNonNegative);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  constrainToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constrainToNonNegative);    	non-compiled	[CE]  ')'  expected	20	None	replace
161	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraintToNonNegative);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraintToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f);    	non-compiled	[CE]  ')'  expected	32	None	replace
162	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  limitToNonNegative);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  limitToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  limitToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f);    	non-compiled	[CE]  ')'  expected	32	None	replace
163	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictionToNonNegative,  constraintToNonNegative);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictionToNonNegative,  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  restrictionToNonNegative,  constraintToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    restrictionToNonNegative);    	non-compiled	[CE]  ')'  expected	50	None	replace
164	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  restrictionToNonNegative);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  restrictionToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  goalType,  restrictionToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    restrictionToNonNegative);    	non-compiled	[CE]  ')'  expected	50	None	replace
165	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImmediateParent();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImmediateParent();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImmediateParent();	  LinearObjectiveFunction    f    =    f.getOwner();    	non-compiled	[CE]  ')'  expected	64	None	replace
166	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getStandardVariables())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getStandardVariables())  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getStandardVariables())  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
167	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getSecondVariables())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getSecondVariables())  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getSecondVariables())  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
168	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getRawVariables())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getRawVariables())  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getRawVariables())  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
169	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints,  limitToNonNegative);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints,  limitToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(constraints,  limitToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(constraints);    	non-compiled	[CE]  ')'  expected	66	None	replace
170	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    {    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
171	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    {    GoalType.MINIMIZE));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
172	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  constraintToNonNegative);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  constraintToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraintToNonNegative);    	non-compiled	[CE]  ')'  expected	23	None	replace
173	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraintToNonNegative,  goalType);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraintToNonNegative,  goalType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraintToNonNegative,  goalType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraintToNonNegative);    	non-compiled	[CE]  ')'  expected	23	None	replace
174	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  restrictToNonNegative);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  restrictToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    constraints,    goalType);    	non-compiled	[CE]  ')'  expected	39	None	replace
175	[BUG]  [BUGGY]  this.numDecisionVariables,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  restrictToNonNegative)  {	  this.numDecisionVariables,    constraints)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
176	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE),  f,  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
177	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createNumberObjectiveFunction();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  createNumberObjectiveFunction();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  createNumberObjectiveFunction();	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	47	None	replace
178	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createRealObjectiveFunction();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  createRealObjectiveFunction();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  createRealObjectiveFunction();	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	47	None	replace
179	[BUG]  [BUGGY]  this.constraints,  goalType,  restrictionsToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  restrictionsToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  restrictionsToNonNegative)  {	  this.constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
180	[BUG]  [BUGGY]  this.constraints,  goalType,  restrictionToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  restrictionToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  restrictionToNonNegative)  {	  this.constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
181	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRangeMatrix();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRangeMatrix();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitRangeMatrix();	  LinearObjectiveFunction    f    =    f.getImplicitRealMatrix();    	non-compiled	[CE]  ')'  expected	57	None	replace
182	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitDeclaration();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitDeclaration();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitDeclaration();	  LinearObjectiveFunction    f    =    f.getImplicitRealMatrix();    	non-compiled	[CE]  ')'  expected	57	None	replace
183	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.KEY));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.KEY));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.KEY));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
184	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.NONNegative));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.NONNegative));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.NONNegative));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
185	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  0));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  0));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  0));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
186	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  -epsilon));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  -epsilon));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  -epsilon));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
187	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  constraints,  goalType);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  constraints,  goalType);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(restrictToNonNegative,  constraints,  goalType);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    goalType);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
188	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  limitToNonNegative);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  limitToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  constraints,  goalType,  limitToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    limitToNonNegative);    	non-compiled	[CE]  ')'  expected	22	None	replace
189	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).getRestrictToNonNegative,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).getRestrictToNonNegative,  restrictToNonNegative)  {	  ((    LinearObjectiveFunction)f).getRestrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
190	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setRestrictToNonNegative(restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setRestrictToNonNegative(restrictToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setRestrictToNonNegative(restrictToNonNegative);	  ((    LinearObjectiveFunction)f).getRestrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
191	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MINIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MINIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  GoalType.MINIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
192	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MINIMIZE));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MINIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MINIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
193	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getImplicitRelationship();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getImplicitRelationship();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getImplicitRelationship();	  LinearObjectiveFunction    f    =    goalType.getConstraints();    	non-compiled	[CE]  ')'  expected	1	None	replace
194	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getReferences();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getReferences();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getReferences();	  LinearObjectiveFunction    f    =    goalType.getConstraints();    	non-compiled	[CE]  ')'  expected	1	None	replace
195	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  constrainToNonNegative);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  constrainToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goals);    	non-compiled	[CE]  ')'  expected	38	None	replace
196	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  limitToNonNegative);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  limitToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goals,  limitToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goals);    	non-compiled	[CE]  ')'  expected	38	None	replace
197	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitReturnType();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitReturnType();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitReturnType();	  LinearObjectiveFunction    f    =    f.getImplicitPrototype();    	non-compiled	[CE]  ')'  expected	2	None	replace
198	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitPrototype()  +  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitPrototype()  +  1;  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitPrototype()  +  1;	  LinearObjectiveFunction    f    =    f.getImplicitPrototype();    	non-compiled	[CE]  ')'  expected	2	None	replace
199	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitDependency();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitDependency();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitDependency();	  LinearObjectiveFunction    f    =    f.getImplicitPrototype();    	non-compiled	[CE]  ')'  expected	2	None	replace
200	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getValue();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getValue();	  LinearObjectiveFunction    f    =    f.getInitialValue();    	non-compiled	[CE]  ')'  expected	58	None	replace
201	[BUG]  [BUGGY]  this.constraints,  goalType,  constraints,  limitToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  constraints,  limitToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraints,  limitToNonNegative)  {	  this.constraints,    goalType,    constraints,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
202	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.DEFAULT),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.DEFAULT),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(nonNegativeType  ==  GoalType.DEFAULT),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    restrictToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
203	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(limits,  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(limits,  restrictToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(limits,  restrictToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(limits);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
204	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  targetType));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  targetType));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT,  targetType));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT,    goalType));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
205	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  f);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  >>  GoalType.MAXIMIZE),  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
206	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType));	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
207	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictionToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictionToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictionToNonNegative)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
208	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictiveToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictiveToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictiveToNonNegative)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
209	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  0));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  0));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  0));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
210	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT,  epsilon),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT,    epsilon));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
211	[BUG]  [BUGGY]  Integer  epsilon)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  Integer  epsilon)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	Integer  epsilon)  {	  int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
212	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getNegativeRelationship();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getNegativeRelationship();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getNegativeRelationship();	  LinearObjectiveFunction    f    =    f.getImplicitRelationship();    	non-compiled	[CE]  ')'  expected	63	None	replace
213	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRelationship()  +  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitRelationship()  +  1;  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitRelationship()  +  1;	  LinearObjectiveFunction    f    =    f.getImplicitRelationship();    	non-compiled	[CE]  ')'  expected	63	None	replace
214	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints,  constrainToNonNegative);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.constraints,  constrainToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    this.constraints);    	non-compiled	[CE]  ')'  expected	84	None	replace
215	[BUG]  [BUGGY]  this.constraints,  goalType,  constraintsToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  goalType,  constraintsToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  goalType,  constraintsToNonNegative)  {	  this.constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
216	[BUG]  [BUGGY]  this.constraints,  f,  goalType,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  f,  goalType,  constrainToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  f,  goalType,  constrainToNonNegative)  {	  this.constraints,    goalType,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
217	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative,  constrainToNonNegative);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constrainToNonNegative,  constrainToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constrainToNonNegative);    	non-compiled	[CE]  ')'  expected	20	None	replace
218	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  this.restrictToNonNegative);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  this.restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  this.restrictToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    restrictionToNonNegative);    	non-compiled	[CE]  ')'  expected	50	None	replace
219	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.getValueType()  {  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f.getValueType()  {  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f.getValueType()  {  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    {    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
220	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  epsilon);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  epsilon);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  epsilon);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f);    	non-compiled	[CE]  ')'  expected	32	None	replace
221	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.objectType);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.objectType);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  this.objectType);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f);    	non-compiled	[CE]  ')'  expected	32	None	replace
222	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  restrictToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  restrictToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    restrictToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
223	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constraintToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT),  constraintToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    restrictToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
224	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon,  constrainToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  epsilon,  constrainToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    epsilon);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
225	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  f,  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  f,  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(f,  goalType),  f,  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MAXIMIZE),    f,    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
226	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitReal();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitReal();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitReal();	  LinearObjectiveFunction    f    =    f.getImplicitRealMatrix();    	non-compiled	[CE]  ')'  expected	57	None	replace
227	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getImplicitValue();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getImplicitValue();	  LinearObjectiveFunction    f    =    f.getImplicitRealMatrix();    	non-compiled	[CE]  ')'  expected	57	None	replace
228	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getImplicitPrototype());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getImplicitPrototype());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getImplicitPrototype());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
229	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getName());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getName());  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f.getName());	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f.getClass());    	non-compiled	[CE]  ')'  expected	65	None	replace
230	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  goalType.getOwner();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  goalType.getOwner();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  goalType.getOwner();	  LinearObjectiveFunction    f    =    goalType.getConstraints();    	non-compiled	[CE]  ')'  expected	1	None	replace
231	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constraints);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constraints);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE,  goalType),  constraints);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.MINIMIZE,    goalType));    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
232	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getStaticVariables())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getStaticVariables())  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getStaticVariables())  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
233	[BUG]  [BUGGY]  this.numDecisionVariables,  f.getRawClass())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  f.getRawClass())  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  f.getRawClass())  {	  this.numDecisionVariables,    f.getArtificialVariables())    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
234	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MAXIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
235	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createCollectionObjectiveFunction();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  createCollectionObjectiveFunction();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  createCollectionObjectiveFunction();	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction();    	non-compiled	[CE]  ')'  expected	47	None	replace
236	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative,  constraintToNonNegative);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative,  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  constraintToNonNegative,  constraintToNonNegative);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraintToNonNegative);    	non-compiled	[CE]  ')'  expected	23	None	replace
237	[BUG]  [BUGGY]  this.constraints,  f,  goalType,  constraints,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  f,  goalType,  constraints,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  f,  goalType,  constraints,  restrictToNonNegative)  {	  this.constraints,    goalType,    constraints,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
238	[BUG]  [BUGGY]  this.constraints,  f,  goalType,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  f,  goalType,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  f,  goalType,  restrictToNonNegative)  {	  this.constraints,    goalType,    constraints,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
239	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constraintToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.SHORT),  constraintToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.SHORT),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
240	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limits);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limits);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  new  LinearObjectiveFunction(f,  goalType,  limits);	  LinearObjectiveFunction    f    =    new    LinearObjectiveFunction(f,    goalType,    constraints);    	non-compiled	[CE]  ')'  expected	21	None	replace
241	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictToNonNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictToNonNegative);	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    restrictToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
242	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictiveToNonNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictiveToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraints,  goalType,  restrictiveToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(constraints,    goalType);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
243	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  limits)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  limits)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  limits)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    constraints)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
244	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictions)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictions)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).restrictToNonNegative,  restrictions)  {	  ((    LinearObjectiveFunction)f).restrictToNonNegative,    constraints)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
245	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.PAXIMIZE));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.PAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.PAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
246	[BUG]  [BUGGY]  epsilon,  constraintToNonNegative)  {  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  epsilon,  constraintToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	epsilon,  constraintToNonNegative)  {	  epsilon)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
247	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  f);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  f);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  f);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    f);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
248	[BUG]  [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraintToNonNegative);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  ((  LinearObjectiveFunction)f).setConstraints(constraintToNonNegative);  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	((  LinearObjectiveFunction)f).setConstraints(constraintToNonNegative);	  ((    LinearObjectiveFunction)f).setConstraints(epsilon);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
249	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
250	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  goalType));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  goalType));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MINIMIZE?  GoalType.MAXIMIZE  :  goalType));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    GoalType.MINIMIZE    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
251	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constraintToNonNegative);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constraintToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.LEQ),  constraintToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.LEQ),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
252	[BUG]  [BUGGY]  this.numDecisionVariables,  constrainToNonNegative,  constraints)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  constrainToNonNegative,  constraints)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  constrainToNonNegative,  constraints)  {	  this.numDecisionVariables,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
253	[BUG]  [BUGGY]  (double)epsilon,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  (double)epsilon,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	(double)epsilon,  restrictToNonNegative)  {	  (double)epsilon)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
254	[BUG]  [BUGGY]  this.constraints,  f,  goalType,  constraints,  constrainToNonNegative)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.constraints,  f,  goalType,  constraints,  constrainToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.constraints,  f,  goalType,  constraints,  constrainToNonNegative)  {	  this.constraints,    goalType,    constraints,    constrainToNonNegative)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
255	[BUG]  [BUGGY]  int  epsilon,  double  epsilon)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  int  epsilon,  double  epsilon)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	int  epsilon,  double  epsilon)  {	  int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
256	[BUG]  [BUGGY]  int  epsilon,  boolean  restrictToNonNegative)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  int  epsilon,  boolean  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	int  epsilon,  boolean  restrictToNonNegative)  {	  int    epsilon)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
257	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType  :  GoalType.MAXIMIZE));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType  :  GoalType.MAXIMIZE));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE?  goalType  :  GoalType.MAXIMIZE));	  this.tableau    =    new    RealMatrixImpl(createTableau(restrictToNonNegative?    goalType    :    GoalType.MAXIMIZE));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
258	[BUG]  [BUGGY]  this.numDecisionVariables,  numSlackVariables,  restrictToNonNegative)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.numDecisionVariables,  numSlackVariables,  restrictToNonNegative)  {  [BUGGY]      this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.numDecisionVariables,  numSlackVariables,  restrictToNonNegative)  {	  this.numDecisionVariables,    numSlackVariables)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
259	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE,  f));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE,  f));  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE,  f));	  this.tableau    =    new    RealMatrixImpl(createTableau(f,    goalType    ==    GoalType.MAXIMIZE),    f);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
260	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  f.getDeepestCommonDependencyInclusive();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  LinearObjectiveFunction  f  =  f.getDeepestCommonDependencyInclusive();  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	LinearObjectiveFunction  f  =  f.getDeepestCommonDependencyInclusive();	  LinearObjectiveFunction    f    =    f.getBase();    	non-compiled	[CE]  ')'  expected	45	None	replace
261	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  constrainToNonNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      SimplexTableau(final  LinearObjectiveFunction  f,  final  Collection<LinearConstraint>  constraints,  final  GoalType  goalType,  final  boolean  restrictToNonNegative,      [BUGGY]  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  constrainToNonNegative);  [BUGGY]      final  double  epsilon)  {  this.f=  f;  this.constraints=  constraints;  this.restrictToNonNegative=  restrictToNonNegative;  this.epsilon=  epsilon;  this.numDecisionVariables  =  getNumVariables()  +  (restrictToNonNegative  ?  0  :  1);  this.numSlackVariables=  getConstraintTypeCounts(Relationship.LEQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.numArtificialVariables  =  getConstraintTypeCounts(Relationship.EQ)  +  getConstraintTypeCounts(Relationship.GEQ);  this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.MAXIMIZE));  [CLASS]  SimplexTableau  [METHOD]  <init>  [RETURN_TYPE]  GoalType,boolean,double)  LinearObjectiveFunction  f  LinearConstraint>  constraints  GoalType  goalType  final  boolean  restrictToNonNegative  final  double  epsilon  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  Collection  constraints  GoalType  goalType  long  serialVersionUID  int  numArtificialVariables  numDecisionVariables  numSlackVariables  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.2886751345948129	104	104	1	replace	this.tableau  =  new  RealMatrixImpl(createTableau(goalType  ==  GoalType.DEFAULT)),  constrainToNonNegative);	  this.tableau    =    new    RealMatrixImpl(createTableau(goalType    ==    GoalType.DEFAULT),    constrainToNonNegative);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
