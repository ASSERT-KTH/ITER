bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	  	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
6	[BUG]  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();		non-compiled	[CE]  ')'  expected	4	None	add
7	[BUG]  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
8	[BUG]  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
9	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
13	[BUG]  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  0  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  0  *  f.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  0  *  f.getConstantTerm();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
14	[BUG]  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getConstantTerm();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
15	[BUG]  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	    matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
16	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);	matrix[zIndex][getSlackVariableOffset()  -  1]  =    getInvertedCoeffiecientSum(objectiveCoefficients);  	non-compiled	[CE]  not  a  statement	3	None	replace
