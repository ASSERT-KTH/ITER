bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	6	None	replace
2	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  ')'  expected	6	None	replace
3	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVar();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSlackVar();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSlackVar();	      	non-compiled	[CE]  not  a  statement	4	None	replace
4	[BUG]  [BUGGY]  int  slackVar  =  constraint.size();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.size();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.size();	      	non-compiled	[CE]  not  a  statement	4	None	replace
5	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSize();  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSize();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSize();	      	non-compiled	[CE]  not  a  statement	4	None	replace
6	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVar(0);  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSlackVar(0);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSlackVar(0);	      	non-compiled	[CE]  not  a  statement	4	None	replace
7	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	2	None	replace
9	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  height);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	2	None	replace
10	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(slackVar,  height);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(slackVar,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(slackVar,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	2	None	replace
11	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	15	None	replace
12	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getConstantTerm();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getConstantTerm();    	non-compiled	[CE]  not  a  statement	14	None	replace
13	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getConstantTerm();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getConstantTerm();    	non-compiled	[CE]  not  a  statement	14	None	replace
14	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar):  -1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar):  -1;  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
20	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
21	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
22	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	9	None	replace
23	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	9	None	replace
24	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	16	None	replace
25	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	16	None	replace
26	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	16	None	replace
27	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	17	None	replace
28	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	17	None	replace
29	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar);  getInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar);  getInvertedCoeffiecientSum(slackVar);  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar);  getInvertedCoeffiecientSum(slackVar);	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  /  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  /  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  /  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    +    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	3	None	replace
33	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  *  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    +    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	3	None	replace
34	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	12	None	replace
35	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	11	None	replace
37	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  0  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  0  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  0  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	13	None	replace
38	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	16	None	replace
39	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	16	None	replace
40	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	12	None	replace
41	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	12	None	replace
42	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	17	None	replace
43	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	17	None	replace
44	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();	      	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantTerm();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantTerm();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantTerm();	      	non-compiled	[CE]  not  a  statement	4	None	replace
46	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);	      	non-compiled	[CE]  not  a  statement	4	None	replace
47	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();	      	non-compiled	[CE]  not  a  statement	4	None	replace
48	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	5	None	replace
49	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	5	None	replace
50	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	5	None	replace
51	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	15	None	replace
52	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	15	None	replace
53	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getInstantTerm();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getInstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getInstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getConstantTerm();    	non-compiled	[CE]  not  a  statement	14	None	replace
54	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getNegativeFunction();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getNegativeFunction();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraint.getNegativeFunction();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getConstantTerm();    	non-compiled	[CE]  not  a  statement	14	None	replace
55	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	11	None	replace
56	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  height);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	2	None	replace
57	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  height);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  height);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	2	None	replace
58	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
59	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
60	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	7	None	replace
61	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  not  a  statement	10	None	replace
62	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(integer);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	9	None	replace
63	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  ')'  expected	6	None	replace
64	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	6	None	replace
65	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	6	None	replace
66	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	2	None	replace
67	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  not  a  statement	10	None	replace
68	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  maximize);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  maximize);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  maximize);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	11	None	replace
69	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	11	None	replace
70	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      	non-compiled	[CE]  not  a  statement	4	None	replace
71	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix();	      	non-compiled	[CE]  not  a  statement	4	None	replace
72	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	9	None	replace
73	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	9	None	replace
74	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
75	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	1	None	replace
76	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    +    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	3	None	replace
77	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	15	None	replace
78	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	12	None	replace
79	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	16	None	replace
80	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	8	None	replace
81	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {    [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]    matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);	      matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	8	None	replace
