bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()]  =  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()]  =  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	27	None	replace
2	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getSlackVariableOffset()]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	27	None	replace
3	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNegativeCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNegativeCoeffiecientSum(slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getNegativeCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	27	None	replace
4	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar):  0;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar):  0;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar):  0;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(slackVar):    -1;    	non-compiled	[CE]  not  a  statement	16	None	replace
5	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(scale):  -1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(scale):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(scale):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(slackVar):    -1;    	non-compiled	[CE]  not  a  statement	16	None	replace
6	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar,  height):  -1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar,  height):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(slackVar,  height):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(slackVar):    -1;    	non-compiled	[CE]  not  a  statement	16	None	replace
7	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	69	None	replace
8	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	69	None	replace
9	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	69	None	replace
10	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNumObjectiveFunctions(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getNumObjectiveFunctions(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getNumObjectiveFunctions(objectiveCoefficients,  constraint);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getNumObjectiveFunctions(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	59	None	replace
11	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getNumObjectiveFunctions(objectiveCoefficients);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getNumObjectiveFunctions(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getNumObjectiveFunctions(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getNumObjectiveFunctions(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	59	None	replace
12	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getInstantTerm();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getInstantTerm();    	non-compiled	[CE]  not  a  statement	53	None	replace
13	[BUG]  [BUGGY]  int  slackVar  =  constraints.size();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.size();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraints.size();	  int    slackVar    =    constraint.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  int  slackVar  =  constraint.size()  -  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.size()  -  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.size()  -  1;	  int    slackVar    =    constraint.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  int  slackVar  =  constraint.size()  +  1;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.size()  +  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.size()  +  1;	  int    slackVar    =    constraint.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  int  slackVar  =  constraint.size()  -  2;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.size()  -  2;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.size()  -  2;	  int    slackVar    =    constraint.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  not  a  statement	54	None	replace
18	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getNegativeFunction();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  constraint.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  not  a  statement	54	None	replace
19	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getNegativeFunction();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  not  a  statement	54	None	replace
20	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	29	None	replace
21	[BUG]  [BUGGY]  matrix[zIndex][getWidth()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getWidth()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getWidth()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	29	None	replace
22	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	29	None	replace
23	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	78	None	replace
24	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getStandardTerm();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getStandardTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getStandardTerm();	  matrix[zIndex][getVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	78	None	replace
25	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();	  matrix[zIndex][getConstantTerm()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	11	None	replace
26	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  constraint);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	55	None	replace
27	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	55	None	replace
28	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getRestrictedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getRestrictedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getRestrictedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	55	None	replace
29	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  /  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  /  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  /  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    *    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	79	None	replace
30	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getInvertedCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	43	None	replace
31	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);	  matrix[zIndex][getInvertedCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	43	None	replace
32	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	62	None	replace
33	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	62	None	replace
34	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(integer,  height);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(integer,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(integer,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	62	None	replace
35	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  slackVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  slackVar);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    artificialVar);    	non-compiled	[CE]  not  a  statement	8	None	replace
36	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    artificialVar);    	non-compiled	[CE]  not  a  statement	8	None	replace
37	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSize()  +  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSize()  +  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSize()  +  1;	  int    slackVar    =    constraint.getSize();    	non-compiled	[CE]  not  a  statement	5	None	replace
38	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSize();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSize();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraints.getSize();	  int    slackVar    =    constraint.getSize();    	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSize()  -  1;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSize()  -  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSize()  -  1;	  int    slackVar    =    constraint.getSize();    	non-compiled	[CE]  not  a  statement	5	None	replace
40	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	46	None	replace
41	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveFunctions);	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	46	None	replace
42	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	46	None	replace
43	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	24	None	replace
44	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions));  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions));	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  ';'  expected	24	None	replace
45	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	24	None	replace
46	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  *  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	26	None	replace
47	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	26	None	replace
48	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  not  a  statement	9	None	replace
49	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar,  height);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  not  a  statement	9	None	replace
50	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantFunction();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantFunction();    	non-compiled	[CE]  not  a  statement	50	None	replace
51	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantFunction();    	non-compiled	[CE]  not  a  statement	50	None	replace
52	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantFunction();    	non-compiled	[CE]  not  a  statement	50	None	replace
53	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	70	None	replace
54	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	70	None	replace
55	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	70	None	replace
56	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveFunctions,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveFunctions,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveFunctions,  constraint);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	35	None	replace
57	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  not  a  statement	35	None	replace
58	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()    ]    =    createInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	75	None	replace
59	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getSlackVariableOffset()    ]    =    createInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	75	None	replace
60	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    createInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	75	None	replace
61	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  not  a  statement	48	None	replace
62	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  not  a  statement	48	None	replace
63	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(slackVar);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar);    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  not  a  statement	30	None	replace
64	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	80	None	replace
65	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	80	None	replace
66	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(optimize);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(optimize);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(optimize);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	80	None	replace
67	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  artificialVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	28	None	replace
68	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  artificialVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	28	None	replace
69	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(slackVar,  height);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(slackVar,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(slackVar,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	28	None	replace
70	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	28	None	replace
71	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	51	None	replace
72	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    >    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	60	None	replace
73	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	37	None	replace
74	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar,  height);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar,  height);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar,    artificialVar);    	non-compiled	[CE]  not  a  statement	20	None	replace
75	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar,    artificialVar);    	non-compiled	[CE]  not  a  statement	20	None	replace
76	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(matrix,  artificialVar);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(matrix,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(matrix,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar,    artificialVar);    	non-compiled	[CE]  not  a  statement	20	None	replace
77	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    maximize);    	non-compiled	[CE]  not  a  statement	68	None	replace
78	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  maximize);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  maximize);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  maximize);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    maximize);    	non-compiled	[CE]  not  a  statement	68	None	replace
79	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    maximize);    	non-compiled	[CE]  not  a  statement	68	None	replace
80	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(f,  maximize);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(f,  maximize);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(f,  maximize);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    maximize);    	non-compiled	[CE]  not  a  statement	68	None	replace
81	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getInvertedMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  not  a  statement	71	None	replace
82	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getInvertedMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  not  a  statement	71	None	replace
83	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  not  a  statement	71	None	replace
84	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  not  a  statement	61	None	replace
85	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  not  a  statement	61	None	replace
86	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  not  a  statement	61	None	replace
87	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(matrix,  height);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(matrix,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(matrix,  height);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  not  a  statement	10	None	replace
88	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale,  height);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale,  height);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  not  a  statement	10	None	replace
89	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantSum()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantSum()  :  f.getInvertedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantSum()  :  f.getInvertedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  not  a  statement	44	None	replace
90	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  not  a  statement	44	None	replace
91	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  not  a  statement	44	None	replace
92	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	72	None	replace
93	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer,  height);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	72	None	replace
94	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	72	None	replace
95	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  limit?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  limit?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  limit?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    minimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	17	None	replace
96	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    minimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	17	None	replace
97	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();	  matrix[zIndex][getConstantTerm()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	34	None	replace
98	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(slackVar);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  not  a  statement	18	None	replace
99	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(dimension);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(dimension);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(dimension);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  not  a  statement	18	None	replace
100	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  height);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  not  a  statement	57	None	replace
101	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  slackVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  slackVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  slackVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  not  a  statement	57	None	replace
102	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  artificialVar);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(integer,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  not  a  statement	57	None	replace
103	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getNumObjectiveFunctions()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	58	None	replace
104	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getRestrictedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getRestrictedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  getRestrictedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	58	None	replace
105	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraints);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraints);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraints);	  matrix[zIndex][getNumObjectiveFunctions()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	58	None	replace
106	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  height);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	21	None	replace
107	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  not  a  statement	21	None	replace
108	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  0;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  0;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  0;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveFunctions):    -1;    	non-compiled	[CE]  not  a  statement	15	None	replace
109	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveFunctions):    -1;    	non-compiled	[CE]  not  a  statement	15	None	replace
110	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  /  2]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  /  2]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  /  2]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    /    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	32	None	replace
111	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm()    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
112	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  maximize);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  maximize);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  maximize);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    maximize);    	non-compiled	[CE]  not  a  statement	74	None	replace
113	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    maximize);    	non-compiled	[CE]  not  a  statement	74	None	replace
114	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVar()  +  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVar()  +  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSlackVar()  +  1;	  int    slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  not  a  statement	3	None	replace
115	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSlackVar();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSlackVar();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraints.getSlackVar();	  int    slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  not  a  statement	3	None	replace
116	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	25	None	replace
117	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	25	None	replace
118	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	25	None	replace
119	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  constraint);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  constraint);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    constraint);    	non-compiled	[CE]  not  a  statement	19	None	replace
120	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    constraint);    	non-compiled	[CE]  not  a  statement	19	None	replace
121	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  ArtificialVar);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  ArtificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    ArtificialVar);    	non-compiled	[CE]  not  a  statement	66	None	replace
122	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    ArtificialVar);    	non-compiled	[CE]  not  a  statement	66	None	replace
123	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  ArtificialVar,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    ArtificialVar);    	non-compiled	[CE]  not  a  statement	66	None	replace
124	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  optimize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	39	None	replace
125	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximise?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximise?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximise?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	39	None	replace
126	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients));	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ';'  expected	39	None	replace
127	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    height);    	non-compiled	[CE]  not  a  statement	36	None	replace
128	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	81	None	replace
129	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  not  a  statement	47	None	replace
130	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getRestrictedCoeffiecientSum();  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getRestrictedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getRestrictedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  not  a  statement	47	None	replace
131	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  not  a  statement	47	None	replace
132	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	38	None	replace
133	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	38	None	replace
134	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients));	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ';'  expected	38	None	replace
135	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  computeInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	73	None	replace
136	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  height);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	73	None	replace
137	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  not  a  statement	40	None	replace
138	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantterm();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantterm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantterm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  not  a  statement	40	None	replace
139	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSlackVar(0);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSlackVar(0);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraints.getSlackVar(0);	  int    slackVar    =    constraint.getSlackVar(0);    	non-compiled	[CE]  not  a  statement	6	None	replace
140	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVar(0,  height);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVar(0,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSlackVar(0,  height);	  int    slackVar    =    constraint.getSlackVar(0);    	non-compiled	[CE]  not  a  statement	6	None	replace
141	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVar(1);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVar(1);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSlackVar(1);	  int    slackVar    =    constraint.getSlackVar(0);    	non-compiled	[CE]  not  a  statement	6	None	replace
142	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm()    +    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
143	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	22	None	replace
144	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  +  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  +  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    0;    	non-compiled	[CE]  not  a  statement	14	None	replace
145	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][zIndex]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	2	None	replace
146	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantSum();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	45	None	replace
147	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantValue();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantValue();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantValue();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	45	None	replace
148	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximise?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  not  a  statement	67	None	replace
149	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximise?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximise?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  ']'  expected	67	None	replace
150	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNegativeCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	42	None	replace
151	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getNegativeCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	42	None	replace
152	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  height);	  matrix[zIndex][getNegativeCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	42	None	replace
153	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(maximum,  artificialVar);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(maximum,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()]  =  getInvertedCoeffiecientSum(maximum,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(maximum,    height);    	non-compiled	[CE]  not  a  statement	56	None	replace
154	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  artificialVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(maximum,    height);    	non-compiled	[CE]  not  a  statement	56	None	replace
155	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    <    1)?    0    :    1;    matrix[zIndex][zIndex    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	64	None	replace
156	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectives);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectives);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectives);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	31	None	replace
157	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	  matrix[zIndex][getConstantTerm()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	52	None	replace
158	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantValue()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantValue()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantValue()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	39	None	replace
159	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantStructure()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantStructure()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantStructure()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	39	None	replace
160	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectives);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectives);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectives);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	39	None	replace
161	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  maximize);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    maximize);    	non-compiled	[CE]  not  a  statement	74	None	replace
162	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(maximum,  objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(maximum,  objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(maximum,  objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    maximize);    	non-compiled	[CE]  not  a  statement	74	None	replace
163	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(integer,  maximize);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(integer,  maximize);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(integer,  maximize);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    maximize);    	non-compiled	[CE]  not  a  statement	74	None	replace
164	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(f,  artificialVar);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(f,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(f,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar,    artificialVar);    	non-compiled	[CE]  not  a  statement	20	None	replace
165	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale,  artificialVar);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar,    artificialVar);    	non-compiled	[CE]  not  a  statement	20	None	replace
166	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantFunction();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantFunction();    	non-compiled	[CE]  not  a  statement	50	None	replace
167	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getInstantTerm();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  null  *  f.getInstantTerm();	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  not  a  statement	51	None	replace
168	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	31	None	replace
169	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(integer);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
170	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  computeInvertedCoeffiecientSum(integer);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  computeInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  computeInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  not  a  statement	73	None	replace
171	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  artificialVar);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
172	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  height  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  height  -  1);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  height  -  1);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
173	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  width,  height);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  width,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  width,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  not  a  statement	57	None	replace
174	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantFunction()  :  -1  *  constraint.getNegativeFunction();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantFunction()  :  -1  *  constraint.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantFunction()  :  -1  *  constraint.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
175	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
176	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
177	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRestrictedSum();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRestrictedSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRestrictedSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
178	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRestrictToNonNegative();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRestrictToNonNegative();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRestrictToNonNegative();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
179	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(scale);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
180	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    *    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
181	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  compute(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  compute(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  compute(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
182	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  constraint);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    constraint);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
183	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(integer,  constraint);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(integer,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(integer,  constraint);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    constraint);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
184	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getInstantTerm();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  constraints.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
185	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(f,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(f,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(f,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    height);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
186	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  ArtificialVar);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  ArtificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    height);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
187	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(maximum,  objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    maximize);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
188	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(optimize,  objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(optimize,  objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(optimize,  objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions,    maximize);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
189	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
190	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
191	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    createInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
192	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  *  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  *  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  *  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    *    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
193	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectives);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectives);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectives);	  matrix[zIndex][getSlackVariableOffset()    *    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
194	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(width,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(width,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(width,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
195	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scale,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scale,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scale,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
196	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
197	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions)+  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions)+  1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
198	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getObjectiveSum();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getObjectiveSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getObjectiveSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
199	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantFunction()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantFunction()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantFunction()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	25	None	replace
200	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantValue()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantValue()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantValue()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	25	None	replace
201	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantStructure()  :  f.getInvertedCoeffiecientSum();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantStructure()  :  f.getInvertedCoeffiecientSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantStructure()  :  f.getInvertedCoeffiecientSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
202	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVar(2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVar(2);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraint.getSlackVar(2);	  int    slackVar    =    constraint.getSlackVar(0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
203	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getInvertedCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
204	[BUG]  [BUGGY]  Integer  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	Integer  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    0    :    1;    matrix[zIndex][zIndex]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
205	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    {    1)?    0    :    1;    matrix[zIndex][zIndex    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
206	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
207	[BUG]  [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNegativeCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNegativeCoeffiecientSum()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
208	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
209	[BUG]  [BUGGY]  matrix[zIndex][getInstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInstantTerm()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
210	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedSumMatrix();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedSumMatrix();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedSumMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
211	[BUG]  [BUGGY]  matrix[zIndex][getWidth()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getWidth()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getWidth()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getConstantTerm()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
212	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getLargerValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getLargerValue();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getLargerValue();	  matrix[zIndex][getVariableOffset()    -    1]    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
213	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(target):  -1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(target):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(target):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(slackVar):    -1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
214	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  constraint);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  constraint);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  constraint);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
215	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
216	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
217	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  compute(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  compute(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  compute(objectiveFunctions);	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
218	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(matrix);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(matrix);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(matrix);	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
219	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()	  int    zIndex    =(getNumObjectiveFunctions()    <    1)?    0    :    1;    matrix[zIndex][zIndex    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  ';'  expected	64	None	replace
220	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm	  int    zIndex    =(getNumObjectiveFunctions()    <    1)?    0    :    1;    matrix[zIndex][zIndex    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  ';'  expected	64	None	replace
221	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(integer);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
222	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(integer);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(integer);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
223	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  /  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  /  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  /  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    /    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
224	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveFunctions):    -1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
225	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveFunctions,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveFunctions,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveFunctions,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
226	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveFunctions,  artificialVar);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveFunctions,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveFunctions,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
227	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(maximum,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(maximum,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(maximum,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
228	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scale);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scale);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scale);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
229	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
230	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar);    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
231	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integerCoefficients);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integerCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integerCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar);    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
232	[BUG]  [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInvertedCoeffiecientSum()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInvertedCoeffiecientSum()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getNumObjectiveFunctions(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
233	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  getNumObjectiveFunctions(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getNumObjectiveFunctions(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
234	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNumObjectiveFunctions(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNumObjectiveFunctions(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNumObjectiveFunctions(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getNumObjectiveFunctions(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
235	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(dimension,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(dimension,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(dimension,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(maximum,    height);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
236	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(width,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(width,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(width,  height);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
237	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(dimension,  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(dimension,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(dimension,  height);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
238	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimise?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimise?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimise?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    minimize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
239	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >=  1)?  0  :  1;  matrix[zIndex][width  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    >    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
240	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  0]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  0]  =  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  0]  =  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	76	None	replace
241	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  matrix[zIndex][zIndex  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    ==    1)?    0    :    1;    matrix[zIndex][zIndex    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
242	[BUG]  [BUGGY]  matrix[zIndex][getInstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getInstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getInstantTerm()  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
243	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
244	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  maximize?  getInvertedCoeffiecientSum(objectiveCoefficients):  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
245	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
246	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  f.getConstantTerm()  :  -1  *  f.getNegativeFunction();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraint.getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
247	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  -1;	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    -1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
248	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  ]  =  createInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getNumObjectiveFunctions()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
249	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  ArtificialVar);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  ArtificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(integer,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(integer,    height);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
250	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  epsilon);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  epsilon);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
251	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantMatrix();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantMatrix();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
252	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantSize();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantSize();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getConstantSize();	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
253	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  not  a  statement	25	None	replace
254	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients));  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  :  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveCoefficients));	  matrix[zIndex][getSlackVariableOffset()    :    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  ']'  expected	25	None	replace
255	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][ZIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][ZIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  1)?  0  :  1;  matrix[zIndex][ZIndex  -  1]  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  int    zIndex    =(getNumObjectiveFunctions()    >    1)?    0    :    1;    matrix[zIndex][width    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
256	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  epsilon);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveFunctions,  epsilon);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
257	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  ArtificialVar);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  ArtificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getNegativeCoeffiecientSum(objectiveCoefficients,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getNegativeCoeffiecientSum(objectiveCoefficients,    height);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
258	[BUG]  [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getConstantTerm()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getConstantTerm()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	  matrix[zIndex][getConstantTerm()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
259	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getNegativeCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getNegativeCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
260	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  ArtificialVar);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  ArtificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar,  ArtificialVar);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
261	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveFunctions):  -1;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveFunctions):    -1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
262	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients,  artificialVar);	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
263	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectives);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectives);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  f.getInvertedCoeffiecientSum(objectives);	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    f.getInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
264	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDecimalTerm();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDecimalTerm();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDecimalTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
265	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  optimize?  getInvertedCoeffiecientSum(objectiveCoefficients):  0;	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    getInvertedCoeffiecientSum(objectiveCoefficients):    0;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
266	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  artificialVar);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
267	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  true);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(integer,  true);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
268	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  *  1]  =  maximize?  f.getConstantTerm()  :  getInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
269	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    constraints.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
270	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer,  artificialVar);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer,  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(integer,  artificialVar);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(integer);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
271	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar  +  1);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(slackVar  +  1);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
272	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  maximise?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
273	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions)+  1;  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(objectiveFunctions)+  1;	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
274	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  f.getConstantTerm()  :  null  *  f.getConstantTerm();	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
275	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  new  Double(f.getConstantTerm());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  new  Double(f.getConstantTerm());  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  maximize?  f.getConstantTerm()  :  new  Double(f.getConstantTerm());	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    null    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
276	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  epsilon);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  getInvertedCoeffiecientSum(objectiveCoefficients,  epsilon);	  matrix[zIndex][getSlackVariableOffset()    ]    =    getInvertedCoeffiecientSum(objectiveCoefficients,    constraint);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
277	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveFunctions);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  ]  =  createInvertedCoeffiecientSum(objectiveFunctions);	  matrix[zIndex][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
278	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSlackVar(1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSlackVar(1);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	int  slackVar  =  constraints.getSlackVar(1);	  int    slackVar    =    constraint.getSlackVar(0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
279	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(matrix,  height);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(matrix,  height);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
280	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  height  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  height  -  1);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(slackVar,  height  -  1);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar,    height);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
281	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum(objectiveCoefficients);	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
282	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum(integer);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum(integer);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInvertedCoeffiecientSum()  :  f.getInvertedCoeffiecientSum(integer);	  RealVector    objectiveCoefficients    =    maximize?    f.getInvertedCoeffiecientSum()    :    f.getInvertedCoeffiecientSum();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
283	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedStandardMatrix();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedStandardMatrix();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedStandardMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
284	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedSum();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedSum();  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedSum();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
285	[BUG]  [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getNumObjectiveFunctions()  -  1]  =  minimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	  matrix[zIndex][getNumObjectiveFunctions()    -    1]    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
286	[BUG]  [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scaled);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scaled);  [BUGGY]      getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(scaled);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiecientSum(slackVar);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
287	[BUG]  [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[zIndex][getVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);  [BUGGY]      matrix[zIndex][getSlackVariableOffset()  -  1]  =      getInvertedCoeffiecientSum(objectiveCoefficients);  getInvertedCoeffiecientSum(objectiveCoefficients);  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	matrix[zIndex][getVariableOffset()  -  1]  =  computeInvertedCoeffiecientSum(objectiveCoefficients);	  matrix[zIndex][getSlackVariableOffset()    -    1]    =    computeInvertedCoeffiecientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
