bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return; [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { [BUGGY] return; [BUGGY] } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected void discardArtificialVariables() { if (numArtificialVariables == 0) { [BUGGY] [BUGGY] return; } int width = getWidth() - numArtificialVariables - 1; int height = getHeight() - 1; double[][] matrix = new double[height][width]; for (int i = 0; i < height; i++) { for (int j = 0; j < width - 1; j++) { matrix[i][j] = getEntry(i + 1, j + 1); } matrix[i][width - 1] = getEntry(i + 1, getRhsOffset()); } [CLASS] SimplexTableau [METHOD] discardArtificialVariables [RETURN_TYPE] void  [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum LinearObjectiveFunction f double[][] matrix Collection constraints long serialVersionUID int artificialVar col count height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.7071067811865475	291	291	1	add	
3	[BUG] [BUGGY] matrix[zIndex][getSlackVariableOffset() - 1] =  getInvertedCoeffiecientSum(objectiveCoefficients); [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] } int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1; matrix[zIndex][zIndex] = maximize ? 1 : -1; RealVector objectiveCoefficients = maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients(); copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions()); matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm(); if (!restrictToNonNegative) { [BUGGY] matrix[zIndex][getSlackVariableOffset() - 1] =      getInvertedCoeffiecientSum(objectiveCoefficients); [BUGGY] getInvertedCoeffiecientSum(objectiveCoefficients); }  int slackVar = 0; int artificialVar = 0; for (int i = 0; i < constraints.size(); i++) { LinearConstraint constraint = constraints.get(i); int row = getNumObjectiveFunctions() + i;  [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] double[][]  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f double[][] matrix LinearConstraint constraint Collection constraints List constraints long serialVersionUID int artificialVar height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] } int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1; matrix[zIndex][zIndex] = maximize ? 1 : -1; RealVector objectiveCoefficients = maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients(); copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions()); matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm(); if (!restrictToNonNegative) { [BUGGY] [BUGGY] matrix[zIndex][getSlackVariableOffset() - 1] =      getInvertedCoeffiecientSum(objectiveCoefficients); getInvertedCoeffiecientSum(objectiveCoefficients); }  int slackVar = 0; int artificialVar = 0; for (int i = 0; i < constraints.size(); i++) { LinearConstraint constraint = constraints.get(i); int row = getNumObjectiveFunctions() + i;  [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] double[][]  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f double[][] matrix LinearConstraint constraint Collection constraints List constraints long serialVersionUID int artificialVar height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	145	146	1	add	
5	[BUG] [BUGGY] matrix[row][getSlackVariableOffset() - 1] =  getInvertedCoeffiecientSum(constraint.getCoefficients()); [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] int artificialVar = 0; for (int i = 0; i < constraints.size(); i++) { LinearConstraint constraint = constraints.get(i); int row = getNumObjectiveFunctions() + i;  copyArray(constraint.getCoefficients().getData(), matrix[row], 1);  if (!restrictToNonNegative) { [BUGGY] matrix[row][getSlackVariableOffset() - 1] =       getInvertedCoeffiecientSum(constraint.getCoefficients()); [BUGGY] getInvertedCoeffiecientSum(constraint.getCoefficients()); }  matrix[row][width - 1] = constraint.getValue();  if (constraint.getRelationship() == Relationship.LEQ) { matrix[row][getSlackVariableOffset() + slackVar++] = 1;// slack } else if (constraint.getRelationship() == Relationship.GEQ) { [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] double[][]  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f double[][] matrix LinearConstraint constraint Collection constraints List constraints long serialVersionUID int artificialVar height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] int artificialVar = 0; for (int i = 0; i < constraints.size(); i++) { LinearConstraint constraint = constraints.get(i); int row = getNumObjectiveFunctions() + i;  copyArray(constraint.getCoefficients().getData(), matrix[row], 1);  if (!restrictToNonNegative) { [BUGGY] [BUGGY] matrix[row][getSlackVariableOffset() - 1] =       getInvertedCoeffiecientSum(constraint.getCoefficients()); getInvertedCoeffiecientSum(constraint.getCoefficients()); }  matrix[row][width - 1] = constraint.getValue();  if (constraint.getRelationship() == Relationship.LEQ) { matrix[row][getSlackVariableOffset() + slackVar++] = 1;// slack } else if (constraint.getRelationship() == Relationship.GEQ) { [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] double[][]  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f double[][] matrix LinearConstraint constraint Collection constraints List constraints long serialVersionUID int artificialVar height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	add	
7	[BUG] [BUGGY] matrix[row][getSlackVariableOffset() + slackVar++] = 1;// slack  } else if (constraint.getRelationship() == Relationship.GEQ) { [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] if (!restrictToNonNegative) { matrix[row][getSlackVariableOffset() - 1] = getInvertedCoeffiecientSum(constraint.getCoefficients()); }  matrix[row][width - 1] = constraint.getValue();  if (constraint.getRelationship() == Relationship.LEQ) { [BUGGY] matrix[row][getSlackVariableOffset() + slackVar++] = 1;// slack     } else if (constraint.getRelationship() == Relationship.GEQ) { [BUGGY] } else if (constraint.getRelationship() == Relationship.GEQ) { matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess }  if ((constraint.getRelationship() == Relationship.EQ) || (constraint.getRelationship() == Relationship.GEQ)) { matrix[0][getArtificialVariableOffset() + artificialVar] = 1; matrix[row][getArtificialVariableOffset() + artificialVar++] = 1; } [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] double[][]  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f double[][] matrix LinearConstraint constraint Collection constraints List constraints long serialVersionUID int artificialVar height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] if (!restrictToNonNegative) { matrix[row][getSlackVariableOffset() - 1] = getInvertedCoeffiecientSum(constraint.getCoefficients()); }  matrix[row][width - 1] = constraint.getValue();  if (constraint.getRelationship() == Relationship.LEQ) { [BUGGY] [BUGGY] matrix[row][getSlackVariableOffset() + slackVar++] = 1;// slack     } else if (constraint.getRelationship() == Relationship.GEQ) { } else if (constraint.getRelationship() == Relationship.GEQ) { matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess }  if ((constraint.getRelationship() == Relationship.EQ) || (constraint.getRelationship() == Relationship.GEQ)) { matrix[0][getArtificialVariableOffset() + artificialVar] = 1; matrix[row][getArtificialVariableOffset() + artificialVar++] = 1; } [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] double[][]  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f double[][] matrix LinearConstraint constraint Collection constraints List constraints long serialVersionUID int artificialVar height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	170	171	1	add	
9	[BUG] [BUGGY] double sum = 0; [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { [BUGGY] double sum = 0; [BUGGY] for (double coefficient : coefficients.getData()) { sum -= coefficient; } return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	260	260	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { [BUGGY] [BUGGY] double sum = 0; for (double coefficient : coefficients.getData()) { sum -= coefficient; } return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	260	260	1	add	
11	[BUG] [BUGGY] for (double coefficient : coefficients.getData()) { [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { double sum = 0; [BUGGY] for (double coefficient : coefficients.getData()) { [BUGGY] sum -= coefficient; } return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	261	261	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { double sum = 0; [BUGGY] [BUGGY] for (double coefficient : coefficients.getData()) { sum -= coefficient; } return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	261	261	1	add	
13	[BUG] [BUGGY] sum -= coefficient; [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { double sum = 0; for (double coefficient : coefficients.getData()) { [BUGGY] sum -= coefficient; [BUGGY] } return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	262	262	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { double sum = 0; for (double coefficient : coefficients.getData()) { [BUGGY] [BUGGY] sum -= coefficient; } return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	262	262	1	add	
15	[BUG] [BUGGY] return sum; [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { double sum = 0; for (double coefficient : coefficients.getData()) { sum -= coefficient; } [BUGGY] return sum; [BUGGY] } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	264	264	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected static double getInvertedCoeffiecientSum(final RealVector coefficients) { double sum = 0; for (double coefficient : coefficients.getData()) { sum -= coefficient; } [BUGGY] [BUGGY] return sum; } [CLASS] SimplexTableau [METHOD] getInvertedCoeffiecientSum [RETURN_TYPE] double  RealVector coefficients [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau double coefficient epsilon sum RealVector coefficients LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar count height i numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	264	264	1	add	
17	[BUG] [BUGGY] double[] coefficients = new double[getOriginalNumDecisionVariables()]; [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected RealPointValuePair getSolution() { [BUGGY] double[] coefficients = new double[getOriginalNumDecisionVariables()]; [BUGGY] Integer basicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()); Set<Integer> basicRows = new HashSet<Integer>(); for (int i = 0; i < coefficients.length; i++) { basicRow = getBasicRow(getNumObjectiveFunctions() + i); if (basicRows.contains(basicRow)) {   coefficients[i] = 0; [CLASS] SimplexTableau [METHOD] getSolution [RETURN_TYPE] RealPointValuePair  [VARIABLES] Integer basicRow boolean maximize restrictToNonNegative Set basicRows RealMatrix tableau double[] coefficients double coefficient epsilon mostNegative sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count destPos height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	325	325	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected RealPointValuePair getSolution() { [BUGGY] [BUGGY] double[] coefficients = new double[getOriginalNumDecisionVariables()]; Integer basicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()); Set<Integer> basicRows = new HashSet<Integer>(); for (int i = 0; i < coefficients.length; i++) { basicRow = getBasicRow(getNumObjectiveFunctions() + i); if (basicRows.contains(basicRow)) {   coefficients[i] = 0; [CLASS] SimplexTableau [METHOD] getSolution [RETURN_TYPE] RealPointValuePair  [VARIABLES] Integer basicRow boolean maximize restrictToNonNegative Set basicRows RealMatrix tableau double[] coefficients double coefficient epsilon mostNegative sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count destPos height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	325	325	1	add	
19	[BUG] [BUGGY] Integer basicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected RealPointValuePair getSolution() { double[] coefficients = new double[getOriginalNumDecisionVariables()]; [BUGGY] Integer basicRow =   getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); [BUGGY] getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()); Set<Integer> basicRows = new HashSet<Integer>(); for (int i = 0; i < coefficients.length; i++) { basicRow = getBasicRow(getNumObjectiveFunctions() + i); if (basicRows.contains(basicRow)) {   coefficients[i] = 0; } else { [CLASS] SimplexTableau [METHOD] getSolution [RETURN_TYPE] RealPointValuePair  [VARIABLES] Integer basicRow boolean maximize restrictToNonNegative Set basicRows RealMatrix tableau double[] coefficients double coefficient epsilon mostNegative sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count destPos height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	326	327	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError testSingleVariableAndConstraint [CONTEXT] protected RealPointValuePair getSolution() { double[] coefficients = new double[getOriginalNumDecisionVariables()]; [BUGGY] [BUGGY] Integer basicRow =   getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables()); double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()); Set<Integer> basicRows = new HashSet<Integer>(); for (int i = 0; i < coefficients.length; i++) { basicRow = getBasicRow(getNumObjectiveFunctions() + i); if (basicRows.contains(basicRow)) {   coefficients[i] = 0; } else { [CLASS] SimplexTableau [METHOD] getSolution [RETURN_TYPE] RealPointValuePair  [VARIABLES] Integer basicRow boolean maximize restrictToNonNegative Set basicRows RealMatrix tableau double[] coefficients double coefficient epsilon mostNegative sum LinearObjectiveFunction f Collection constraints long serialVersionUID int artificialVar col count destPos height i j numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	326	327	1	add	
