bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
2	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
3	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyVariables());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyVariables());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyVariables());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
4	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  slackVar]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  slackVar]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  slackVar]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  matrix[row][getNegativeFunctions()]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeFunctions()]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeFunctions()]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  height++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
17	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
18	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
19	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
20	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
21	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
22	[BUG]  [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
23	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
24	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
25	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
26	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  matrix[row][getHeight()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getHeight()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getHeight()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon(),  artificialVar);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon(),  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon(),  artificialVar);	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
31	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
32	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  getInvertedOptionalSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  getInvertedOptionalSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  getInvertedOptionalSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
33	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
34	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  createInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  createInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  createInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  matrix[row][getSize()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSize()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSize()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getActualCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
38	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getActualCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
39	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getActualCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getActualCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
40	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedOptionalSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedOptionalSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedOptionalSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
41	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedOptionalSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedOptionalSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  getInvertedOptionalSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
42	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
43	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
45	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
46	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
47	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  createInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
50	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
51	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
52	[BUG]  [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
53	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
54	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalFunctions());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalMatrix());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalMatrix());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalMatrix());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyVariables());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEmptyVariables());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
59	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffie(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
60	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffie(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
61	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
62	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
63	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
64	[BUG]  [BUGGY]  matrix[row][getNegativeCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
65	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i]  =  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i]  =  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i]  =  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
66	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getWidth());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getWidth());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getWidth());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
69	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
70	[BUG]  [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
71	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
72	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  slackVar]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  slackVar]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  slackVar]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
73	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
74	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
75	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  1]  =  getInvertedCoeffiecientSum(constraint.getRows());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
76	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
77	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  matrix[row][getNumSlackVariables()  +  i++]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumSlackVariables()  +  i++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumSlackVariables()  +  i++]  =  1;	  matrix[row][getNumSlackVariables()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
79	[BUG]  [BUGGY]  matrix[row][getSlackVariables()  +  slackVar++]  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariables()  +  slackVar++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariables()  +  slackVar++]  =  1;	  matrix[row][getNumSlackVariables()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
80	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  i]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  i]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  i]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
81	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
82	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i)]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
83	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i)]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
84	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  i)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  i)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  i)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i)]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
85	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  2]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  2]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  2]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
86	[BUG]  [BUGGY]  matrix[row][getHeight()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getHeight()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getHeight()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  matrix[row][getWidth()]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
89	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
90	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getRows());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getRows());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getRows());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
91	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRows());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
92	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getColumns());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getColumns());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()]  =  getInvertedCoeffiecientSum(constraint.getColumns());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
93	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
94	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
95	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRight());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
96	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
97	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  artificialVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  artificialVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  artificialVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    slackVar]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  *  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  *  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  *  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    slackVar]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
100	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
101	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1++]  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1++]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
102	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  height++]  =  1;	  matrix[row][getSlackVariableOffset()    +    artificialVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
103	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  width++]  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  width++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  width++]  =  1;	  matrix[row][getSlackVariableOffset()    +    artificialVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
104	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    1)]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
105	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoefficients(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoefficients(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
107	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoefficients(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoefficients(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createNegativeCoefficients(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoefficients(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
108	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  2;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  2;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    2;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
109	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getWidth());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
110	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
111	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  2++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  2++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  2++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
112	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
113	[BUG]  [BUGGY]  matrix[row][getNegativeFunctions()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeFunctions()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeFunctions()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
114	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
115	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
116	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1)]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1)]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1)]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
117	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  epsilonVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  epsilonVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  epsilonVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
118	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
119	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
120	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
121	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getHeight());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getHeight());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getHeight());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
122	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getHeight());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getHeight());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getHeight());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
123	[BUG]  [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNegativeFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNegativeFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
124	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
125	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(constraint.getInvertedCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(constraint.getInvertedCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(constraint.getInvertedCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
126	[BUG]  [BUGGY]  matrix[row][getInvertedCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getInvertedCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getInvertedCoeffiecientSum()  -  1]  =  createNegativeCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
127	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1)]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1)]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1)]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
128	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i)]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i)]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i)]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
129	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getColumns());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
130	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getData());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getData());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getData());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
132	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedOptionalSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedOptionalSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedOptionalSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
134	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
135	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
136	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffie(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffie(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffie(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
137	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
138	[BUG]  [BUGGY]  matrix[row][getNumDecisionVariables()  +  slackVar++]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumDecisionVariables()  +  slackVar++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumDecisionVariables()  +  slackVar++]  =  1;	  matrix[row][getNumSlackVariables()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
139	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
140	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
141	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
142	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  1;	  matrix[row][getSlackVariableOffset()    +    artificialVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
143	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  createNegativeCoefficients(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoefficients(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getRangeEpsilon());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getRangeEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getRangeEpsilon());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
145	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedNegativeSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedNegativeSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedNegativeSum(constraint.getWidth());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
147	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
148	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiedSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiedSum(constraint.getNegativeFunctions());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiedSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
149	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRangeEpsilon());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRangeEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getRangeEpsilon());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
150	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
151	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedOptionalFunction(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedOptionalFunction(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedOptionalFunction(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
152	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
153	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedOptionalSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedOptionalSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedOptionalSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
154	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getGamma());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getGamma());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getGamma());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
155	[BUG]  [BUGGY]  matrix[row][getNumSlackVariables()  +  slackVar++]  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumSlackVariables()  +  slackVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumSlackVariables()  +  slackVar++]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
156	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    i]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
157	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedPolymorphicSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedPolymorphicSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedPolymorphicSum(constraint.getEpsilon());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
158	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedOptionalSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedOptionalSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedOptionalSum(constraint.getEpsilon());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
159	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
160	[BUG]  [BUGGY]  matrix[row][getInvertedCoeffiecientSum()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getInvertedCoeffiecientSum()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getInvertedCoeffiecientSum()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getInvertedCoeffiecientSum()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
161	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
162	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
163	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions(),  artificialVar);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions(),  artificialVar);  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getNegativeFunctions(),  artificialVar);	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
164	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffie(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffie(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
165	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedNegative(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedNegative(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedNegative(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffie(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
166	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedPolymorphicSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedPolymorphicSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedPolymorphicSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
167	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getGamma());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getGamma());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getGamma());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
168	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedOptionalCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedOptionalCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedOptionalCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
169	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoefficient(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
170	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoefficient(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoefficient(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoefficient(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
171	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i)]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i)]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i)]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
172	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
173	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedNegativeSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedNegativeSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedNegativeSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
174	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
175	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalVariables());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalVariables());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
176	[BUG]  [BUGGY]  matrix[row][getNumSlackVariables()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumSlackVariables()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumSlackVariables()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
177	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getLines());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getLines());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getLines());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
178	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoefficients(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoefficients(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoefficients(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
179	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  i]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  i]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  i]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    slackVar]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
180	[BUG]  [BUGGY]  matrix[row][getObjectiveFunctions()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getObjectiveFunctions()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getObjectiveFunctions()  +  i++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
181	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInverted(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInverted(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInverted(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoefficient(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
182	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffie(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffie(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffie(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffie(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
184	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffie(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffie(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffie(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffie(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
185	[BUG]  [BUGGY]  Matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  Matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	Matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
186	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  getInvertedCoeffiedSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
187	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getWidth());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getWidth());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
188	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getActualCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getActualCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getActualCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
189	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
190	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getNegativeFunctions());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
191	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getEntry());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getEntry());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createInvertedCoeffiecientSum(constraint.getEntry());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
192	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  +  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
193	[BUG]  [BUGGY]  matrix[row][getNumSlackVariables()  -  1]  =  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumSlackVariables()  -  1]  =  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumSlackVariables()  -  1]  =  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getSlackVariableOffset()]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
194	[BUG]  [BUGGY]  matrix[row][getRows()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getRows()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRows());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getRows()  -  1]  =  getInvertedCoeffiecientSum(constraint.getRows());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
195	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
196	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
197	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getHeight());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
198	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
199	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  artificialVar)]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i)]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
200	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  4;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  4;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  4;	  matrix[row][getSlackVariableOffset()    +    i++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
201	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  row++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  row++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  row++]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
202	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoefficients(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoefficients(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoefficients(constraint.getRows());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoefficients(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
203	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoefficients(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoefficients(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoefficients(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createNegativeCoefficients(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
204	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedOptionalCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
205	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
206	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedVolume(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedVolume(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedVolume(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
207	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getNegativeFunctions());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getNegativeFunctions());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
208	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(constraint.getActualCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(constraint.getActualCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  createNegativeCoeffiecientSum(constraint.getActualCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    createInvertedCoeffiecientSum(constraint.getActualCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
209	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
210	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getRows());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getRows());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  +  slackVar]  =  getInvertedCoeffiecientSum(constraint.getRows());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiecientSum(constraint.getRows());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
211	[BUG]  [BUGGY]  matrix[row][getHeight()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getHeight()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getHeight()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
212	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  artificialVar++]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
213	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  1]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  1]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
214	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
215	[BUG]  [BUGGY]  matrix[row][getEpsilon()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getEpsilon()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getEpsilon()  -  1]  =  getInvertedCoeffiecientSum(constraint.getEpsilon());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
216	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
217	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
218	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getHeight());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getHeight());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getHeight());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
219	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getOptionalCoefficients());	  matrix[row][getSlackVar()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
220	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getActualCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getActualCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  getInvertedCoeffiecientSum(constraint.getActualCoefficients());	  matrix[row][getSlackVar()    +    slackVar++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
221	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  artificialVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  artificialVar]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
222	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
223	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeCoefficientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeCoefficientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVarOffset()  -  1]  =  getInvertedNegativeCoefficientSum(constraint.getCoefficients());	  matrix[row][getSlackVarOffset()    -    1]    =    getInvertedCoeffiedSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
224	[BUG]  [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVar()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getEpsilon());  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVar()    -    1]    =    getInvertedCoeffiecientSum(constraint.getEpsilon());    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
225	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  bsilonVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  bsilonVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  bsilonVar++]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    1]    =    createInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
226	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoefficients(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoefficients(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  -  1]  =  getInvertedCoefficients(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    -    1]    =    getInvertedOptionalSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
227	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  computeInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
228	[BUG]  [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getNumObjectiveFunctions()  -  1]  =  createInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getValue());	  matrix[row][getNumObjectiveFunctions()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
229	[BUG]  [BUGGY]  matrix[row][getSlackVariables()  +  i++]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariables()  +  i++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariables()  +  i++]  =  1;	  matrix[row][getNumSlackVariables()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
230	[BUG]  [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());  [BUGGY]      matrix[row][getSlackVariableOffset()  -  1]  =        getInvertedCoeffiecientSum(constraint.getCoefficients());  getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getWidth()  -  1]  =  getInvertedCoeffiecientSum(constraint.getCoefficients());	  matrix[row][getWidth()    -    1]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    getInvertedCoeffiecientSum(constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
231	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  maximize(constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().getData(),  matrix[row],  1);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  i++]  =  maximize(constraint.getCoefficients());  [BUGGY]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.35355339059327373	161	162	1	replace	matrix[row][getSlackVariableOffset()  +  i++]  =  maximize(constraint.getCoefficients());	  matrix[row][getSlackVariableOffset()    +    i++]    =    getInvertedCoeffiecientSum(constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
