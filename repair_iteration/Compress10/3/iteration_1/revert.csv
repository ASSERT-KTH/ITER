projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnull;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnthis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry!=null)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset<0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset==0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset!=0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataInputStream;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataStart;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataLength;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataSize;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.data;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataEnd;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset==0)?null:offsetEntry.dataOffset+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset>=0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(OffsetEntry.dataOffset==0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(dataOffset==0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset==0)?offsetEntry.dataOffset:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset>>0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset!=0)?null:offsetEntry.dataOffset+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(dataOffset!=0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset==offsetEntry.dataOffset)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset==null)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataOffset+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataOffset,remaining;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry>=null)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry!=null)?null:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(OffsetEntry.dataOffset==null)?null:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry>=null)?null:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?0:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(zip,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(zipFile,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){thrownewIllegalArgumentException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321ze=(ZipArchiveEntry)entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){thrownewIllegalArgumentException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){thrownewIllegalStateException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321offsetEntry.dataOffset=offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset<0)?null:offsetEntry.dataOffset+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset<=0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(dataOffset<0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset!=null)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry!=null)?null:offsetEntry.dataOffset+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry>>null)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321Return(offsetEntry.dataOffset==0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataSource;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.dataOutputFile;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(offsetEntry);if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null||offsetEntry.dataOffset!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null||offsetEntry.dataOffset==null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null||offsetEntry.dataOffset!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(offsetEntry);if(offsetEntry==null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset>0)?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.data;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataInputStream;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataOffset+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returns(offsetEntry==null)?null:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:entry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataLength();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321Return(offsetEntry==null)?null:offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(zipEncoding,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.input;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.inflater;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.inputStream;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnoffsetEntry.inputFile;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null||offsetEntry.dataOffset==null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null||offsetEntry.dataOffset<0){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null||offsetEntry.dataOffset<0){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset<0)?null:offsetEntry.dataOffset++;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.getMethod(),offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.getEnd(),offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.getName(),offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.dataOffset(),offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry!=null)?null:offsetEntry.dataOffset,remaining;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry.dataOffset==0)?Null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:newZipArchiveEntry(offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(zipEncoding,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(ze,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321returnnewZipArchiveEntry(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java321return(offsetEntry==null)?null:offsetEntry.dataOffset,dataOffset;
