bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] if (!orig.equals(ze.getName())) { [FE] AssertionFailedError [CONTEXT] archive.readFully(localExtraData); ze.setExtra(localExtraData); offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen; if (entriesWithoutUTF8Flag.containsKey(ze)) { String orig = ze.getName(); NameAndComment nc = entriesWithoutUTF8Flag.get(ze); ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name, nc.comment); [BUGGY] if (!orig.equals(ze.getName())) { [BUGGY] nameMap.remove(orig); nameMap.put(ze.getName(), ze); } } } } [CLASS] ZipFile OffsetEntry 2 BoundedInputStream NameAndComment 1 [METHOD] resolveLocalFileHeaderData [RETURN_TYPE] void  NameAndComment> entriesWithoutUTF8Flag [VARIABLES] byte[] b cdExtraData cfdOffset cfh comment fileName localExtraData name sig signatureBytes zip64EocdOffset boolean addDummyByte closed found hasCompressedSize hasRelativeHeaderOffset hasUTF8Flag hasUncompressedSize success useUnicodeExtraFields ZipEncoding entryEncoding zipEncoding RandomAccessFile archive OffsetEntry offsetEntry ZipArchiveEntry ze String archiveName encoding name orig NameAndComment nc Map entries entriesWithoutUTF8Flag nameMap noUTF8Flag int BYTE_SHIFT CFD_LOCATOR_OFFSET CFH_LEN HASH_SIZE MAX_EOCD_SIZE MIN_EOCD_SIZE NIBLET_MASK POS_0 POS_1 POS_2 POS_3 ZIP64_EOCDL_LENGTH ZIP64_EOCDL_LOCATOR_OFFSET ZIP64_EOCD_CFD_LOCATOR_OFFSET commentLen count curr diskStart extraFieldLen extraLen fileNameLen lenToSkip off skipped skippedNow totalSkipped versionMadeBy long CFH_SIG LFH_OFFSET_FOR_FILENAME_LENGTH dataOffset headerOffset loc maxDistanceFromEnd minDistanceFromEnd off offset remaining sig start stopSearching time Comparator OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	837	837	1	replace	
