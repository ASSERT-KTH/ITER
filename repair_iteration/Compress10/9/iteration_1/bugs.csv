bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	compilable	  [FE]  AssertionFailedError  	17	2	replace
2	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	compilable	  [FE]  AssertionFailedError  	17	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	compilable	  [FE]  AssertionFailedError  	17	2	replace
4	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	compilable	  [FE]  AssertionFailedError  	17	2	replace
5	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]        AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol  name	17	None	replace
6	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	17	None	replace
7	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  comment));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol  name	17	None	replace
8	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	  	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	compilable	  [FE]  AssertionFailedError  	17	2	replace
10	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	  	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	compilable	  [FE]  AssertionFailedError  	17	2	replace
11	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]    AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	17	None	replace
12	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  name);  [CE]  cannot  find  symbol  name  [FE]      AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  name);  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  name);	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol  name	17	None	replace
13	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
14	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	17	None	replace
15	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
16	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(1)));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(1)));  [BUGGY]  }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(1)));	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
