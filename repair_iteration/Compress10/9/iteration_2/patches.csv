bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName,  encoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName,  encoding.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	141	None	replace
2	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  fileName.substring(1)));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  fileName.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  fileName.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
3	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(1)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
4	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  encoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  encoding.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	141	None	replace
5	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  fileName,  encoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  fileName,  encoding.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	141	None	replace
6	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  comment.substring(1)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  comment.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  comment.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
7	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  name.substring(1)));  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  name.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  name.substring(1)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	141	None	replace
8	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length()  -  1)));  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
9	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length()  -  1)));  [CE]  int  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
10	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
11	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
12	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	153	None	replace
13	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	153	None	replace
14	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields.toString()));  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	7	None	replace
15	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	7	None	replace
16	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName.length),  fileName);  [CE]  cannot  find  symbol  name  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName.length),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName.length),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
17	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  entryEncoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
18	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment.length),  fileName);  [CE]  cannot  find  symbol  name  [FE]                                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment.length),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  comment.length),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
19	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  encoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
20	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
21	[BUG]  [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  ze);  [CE]  cannot  find  symbol  name  [FE]                                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
22	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  encoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
23	[BUG]  [BUGGY]  ze.setDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
24	[BUG]  [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
25	[BUG]  [BUGGY]  ze.setCommentLen(commentLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCommentLen(commentLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCommentLen(commentLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
26	[BUG]  [BUGGY]  ze.setLocalFileName(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setLocalFileName(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setLocalFileName(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
27	[BUG]  [BUGGY]  ze.setDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	32	None	replace
28	[BUG]  [BUGGY]  ze.setDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
29	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  comment));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  comment));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
30	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  commentLen));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	89	None	replace
31	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  name));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  name));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	89	None	replace
32	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  entryEncoding));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	89	None	replace
33	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  entryEncoding));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	89	None	replace
34	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(cfh,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(cfh,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(cfh,  comment,  fileName));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	89	None	replace
35	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
36	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen)));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
37	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
38	[BUG]  [BUGGY]  nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
39	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
40	[BUG]  [BUGGY]  fileName.put(ze,  new  NameAndComment(comment.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  fileName.put(ze,  new  NameAndComment(comment.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	fileName.put(ze,  new  NameAndComment(comment.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	compilable	  [FE]  AssertionFailedError  	150	2	replace
42	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	compilable	  [FE]  AssertionFailedError  	150	2	replace
43	[BUG]  [BUGGY]  ze.setZip64Extra(cfh);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setZip64Extra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
44	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
45	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	150	None	replace
46	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
47	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  offset);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  offset);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  offset);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
48	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  encoding));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
49	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
50	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
51	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
52	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  comment,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
53	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
54	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
55	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	60	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	60	2	replace
57	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	60	2	replace
58	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
59	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(cfh));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(cfh));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(cfh));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	60	None	replace
60	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
61	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8));  [CE]  cannot  find  symbol  hasUTF8  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    baseUri));    	non-compiled	[CE]  cannot  find  symbol  hasUTF8	120	None	replace
62	[BUG]  [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  cdStart  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  cdStart	124	None	replace
63	[BUG]  [BUGGY]  archive.readFully(entryStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  entryStart  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  entryStart	124	None	replace
64	[BUG]  [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  no  suitable  method  found  for  readFully(ZipEncoding)  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipEncoding)	124	None	replace
65	[BUG]  [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  signatureLen  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  signatureLen	124	None	replace
66	[BUG]  [BUGGY]  archive.readFully(destStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  destStart  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(destStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(destStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  destStart	124	None	replace
67	[BUG]  [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  dummyByte  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  dummyByte	124	None	replace
68	[BUG]  [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  diskEnd  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  diskEnd	124	None	replace
69	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name));  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  cannot  find  symbol  length	109	None	replace
70	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.length,  comment));  [CE]  cannot  find  symbol  length  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.length,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.length,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  cannot  find  symbol  length	109	None	replace
71	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	109	None	replace
72	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  cannot  find  symbol  name	109	None	replace
73	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  off,  commentLen);  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  off,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  off,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	132	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	compilable	  [FE]  AssertionFailedError  	132	2	replace
75	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	compilable	  [FE]  AssertionFailedError  	132	2	replace
76	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	132	None	replace
77	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentsLen);  [CE]  cannot  find  symbol  commentsLen  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentsLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentsLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  commentsLen	132	None	replace
78	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  lineLen);  [CE]  cannot  find  symbol  lineLen  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  lineLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  lineLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  lineLen	132	None	replace
79	[BUG]  [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(signatureLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  signatureLen  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(signatureLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(signatureLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  signatureLen	113	None	replace
80	[BUG]  [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  signatureLen  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  signatureLen	113	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	113	2	replace
82	[BUG]  [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	113	2	replace
83	[BUG]  [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  cdExtraFields  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  cdExtraFields	113	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	113	2	replace
85	[BUG]  [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	113	2	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(fileName);  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	113	2	replace
87	[BUG]  [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(fileName);  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	113	2	replace
88	[BUG]  [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  cdStart  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  cdStart	111	None	replace
89	[BUG]  [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	111	None	replace
90	[BUG]  [BUGGY]  archive.readFully(entryStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  entryStart  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  entryStart	111	None	replace
91	[BUG]  [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  no  suitable  method  found  for  readFully(ZipEncoding)  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipEncoding)	111	None	replace
92	[BUG]  [BUGGY]  archive.readFully(destStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  destStart  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(destStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(destStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  destStart	111	None	replace
93	[BUG]  [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  diskLen  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  diskLen	111	None	replace
94	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	126	None	replace
95	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  this);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  this);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  ')'  expected	126	None	replace
96	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  this);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  this);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  cannot  find  symbol  name	126	None	replace
97	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  this);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  this);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  cannot  find  symbol  name	126	None	replace
98	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	126	None	replace
99	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  name	127	None	replace
100	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	127	None	replace
101	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	127	None	replace
102	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	127	None	replace
103	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh,    comment);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	65	None	replace
104	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  gpFlag);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  gpFlag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  gpFlag);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh,    comment);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	65	None	replace
105	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  encoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh,    comment);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	65	None	replace
106	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
107	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(nameMap,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(nameMap,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(nameMap,  comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
108	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
109	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
110	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
111	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(nameMap,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(nameMap,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(nameMap,  comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
112	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
113	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	87	None	replace
114	[BUG]  [BUGGY]  fileName.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  fileName.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	fileName.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
115	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	87	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	compilable	  [FE]  AssertionFailedError  	136	1	add
117	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	compilable	  [FE]  AssertionFailedError  	136	1	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	compilable	  [FE]  AssertionFailedError  	136	1	add
119	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	compilable	  [FE]  AssertionFailedError  	136	1	add
120	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  data  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  cannot  find  symbol  data	136	None	add
121	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(zip64Data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  zip64Data  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(zip64Data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(zip64Data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  cannot  find  symbol  zip64Data	136	None	add
122	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	136	None	add
123	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cfhData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  cfhData  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cfhData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(cfhData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  cannot  find  symbol  cfhData	136	None	add
124	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
125	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	136	None	add
126	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment  +  1),  fileName);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment  +  1),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  comment  +  1),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  cannot  find  symbol  name	98	None	replace
127	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName  +  1),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName  +  1),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName  +  1),  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  cannot  find  symbol  name	98	None	replace
128	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	98	None	replace
129	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  encoding);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	98	None	replace
130	[BUG]  [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName  +  1),  ze);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName  +  1),  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(name,  new  NameAndComment(fileName  +  1),  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  cannot  find  symbol  name	98	None	replace
131	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name,  entryEncoding);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name,  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	98	None	replace
132	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name,  hasUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name,  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name,  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	98	None	replace
133	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	49	None	replace
134	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  entryEncoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	49	None	replace
135	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  hasUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	49	None	replace
136	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  addDummyByte);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  addDummyByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  addDummyByte);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	49	None	replace
137	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentStart  +  1));  [CE]  cannot  find  symbol  commentStart  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentStart  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentStart  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  cannot  find  symbol  commentStart	49	None	replace
138	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.versionMadeByte);  [CE]  cannot  find  symbol  versionMadeByte  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.versionMadeByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.versionMadeByte);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  versionMadeByte	147	None	replace
139	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.versionMadeBytes);  [CE]  cannot  find  symbol  versionMadeBytes  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.versionMadeBytes);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.versionMadeBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  versionMadeBytes	147	None	replace
140	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.encoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	147	None	replace
141	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.descriptionBytes);  [CE]  cannot  find  symbol  descriptionBytes  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.descriptionBytes);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.descriptionBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  descriptionBytes	147	None	replace
142	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.syntheticBytes);  [CE]  cannot  find  symbol  syntheticBytes  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.syntheticBytes);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.syntheticBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  syntheticBytes	147	None	replace
143	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.dataset);  [CE]  cannot  find  symbol  dataset  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.dataset);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.dataset);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  dataset	147	None	replace
144	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  encoding));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	94	None	replace
145	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  commentLen));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	94	None	replace
146	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  encoding));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	94	None	replace
147	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  comment));  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  comment));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
149	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
150	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	35	None	add
151	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(zip64Data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  zip64Data  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(zip64Data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(zip64Data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol  zip64Data	35	None	add
152	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  data  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol  data	35	None	add
153	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cdExtraData,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	35	None	add
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
155	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
156	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
157	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	35	None	add
158	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  commentLen));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	144	None	replace
159	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  nameMap));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	144	None	replace
160	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  noUTF8Flag));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	144	None	replace
161	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  entryEncoding));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	144	None	replace
162	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(cfh,  comment));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
163	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  comment));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
164	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
165	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(comment,  fileName.toString()));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(comment,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	97	None	replace
166	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
167	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
168	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(comment,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(comment,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
169	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	95	None	replace
170	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  zipEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
171	[BUG]  [BUGGY]  noUTF8Flag.put(zipEncoding,  new  NameAndComment(comment,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(zipEncoding,  new  NameAndComment(comment,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(zipEncoding,  new  NameAndComment(comment,  zipEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
172	[BUG]  [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(zipEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(zipEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(entryEncoding,  new  NameAndComment(zipEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
173	[BUG]  [BUGGY]  NoUTF8Flag.put(zipEncoding,  new  NameAndComment(comment,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(zipEncoding,  new  NameAndComment(comment,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(zipEncoding,  new  NameAndComment(comment,  zipEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
174	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  useUnicodeExtraFields));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  useUnicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    unicodeExtraFields));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	151	None	replace
175	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  addDummyByte));  [CE]  cannot  find  symbol  addDummyByte  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  addDummyByte));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  addDummyByte));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    unicodeExtraFields));    	non-compiled	[CE]  cannot  find  symbol  addDummyByte	151	None	replace
176	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	27	None	replace
177	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	27	None	replace
178	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  expression));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  expression));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  expression));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    expression));    	non-compiled	[CE]  cannot  find  symbol  name	69	None	replace
179	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  expression));  [CE]  cannot  find  symbol  expression  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  expression));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  expression));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    expression));    	non-compiled	[CE]  cannot  find  symbol  expression	69	None	replace
180	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    expression));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	69	None	replace
181	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  sourceName));  [CE]  cannot  find  symbol  sourceName  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  sourceName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  sourceName));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  sourceName	3	None	replace
182	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	3	None	replace
183	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	3	None	replace
184	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  message));  [CE]  cannot  find  symbol  message  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  message));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  message	3	None	replace
185	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
186	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	100	None	replace
187	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(comment,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
188	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  comment,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
189	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(fileName,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
190	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
191	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  nameMap));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
193	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
194	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	149	None	add
195	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  cannot  find  symbol	149	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
197	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
198	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setNameAndComment(entryEncoding.decode(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setNameAndComment(entryEncoding.decode(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setNameAndComment(entryEncoding.decode(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	149	None	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
200	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
201	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	18	None	replace
202	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name.length));  [CE]  cannot  find  symbol  length  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
203	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment.length));  [CE]  cannot  find  symbol  length  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
204	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment.length));  [CE]  cannot  find  symbol  name  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  name	18	None	replace
205	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	18	None	replace
206	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  fileName.length));  [CE]  cannot  find  symbol  length  [FE]                                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  fileName.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
207	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.length,  comment.length));  [CE]  cannot  find  symbol  length  [FE]                                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.length,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	31	1	add
209	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	31	1	add
210	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	  	non-compiled	[CE]  cannot  find  symbol  discStart	31	None	add
211	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  data  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol  data	31	None	add
212	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  diskEnd  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	  	non-compiled	[CE]  cannot  find  symbol  diskEnd	31	None	add
213	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	31	None	add
214	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
215	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	31	None	add
216	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  diskLen  [FE]                  AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  	non-compiled	[CE]  cannot  find  symbol  diskLen	31	None	add
217	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  addDummyByte);  [CE]  cannot  find  symbol  addDummyByte  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  addDummyByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  addDummyByte);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  addDummyByte	55	None	replace
218	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  hasUTF8Flag);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    signatureBytes);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	55	None	replace
219	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  fileNameLen);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  fileNameLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    signatureBytes);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	55	None	replace
220	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  gpFlag);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  gpFlag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  gpFlag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    signatureBytes);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	55	None	replace
221	[BUG]  [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
222	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setZip64Extra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setZip64Extra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setZip64Extra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
223	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
224	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
225	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
226	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
227	[BUG]  [BUGGY]  File  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  File  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	File  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    new    File(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	106	None	replace
228	[BUG]  [BUGGY]  Node  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  Node  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	Node  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    new    File(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
229	[BUG]  [BUGGY]  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  no  suitable  constructor  found  for  File(byte[])  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    new    File(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  no  suitable  constructor  found  for  File(byte[])	106	None	replace
230	[BUG]  [BUGGY]  File  fileName  =  new  File(ze);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  File  fileName  =  new  File(ze);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	File  fileName  =  new  File(ze);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    new    File(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	106	None	replace
231	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	96	None	replace
232	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName,  name));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	96	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	96	1	replace
234	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	96	1	replace
235	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  fileName,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  fileName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  fileName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	96	None	replace
236	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  signatureBytes));  [CE]  cannot  find  symbol  signatureBytes  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  signatureBytes));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  signatureBytes));	  ze.put(fileName,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	90	None	replace
237	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  message));  [CE]  cannot  find  symbol  message  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  message));	  ze.put(fileName,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  cannot  find  symbol  message	90	None	replace
238	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	139	None	replace
239	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	139	None	replace
240	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  name	139	None	replace
241	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding.length));  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  length	139	None	replace
242	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart),  cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart),  cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart),  cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
243	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  cdExtraData);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  cdExtraData);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  cdExtraData);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
244	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DELETE_SHIFT);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DELETE_SHIFT);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DELETE_SHIFT);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
245	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskExtra);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskExtra);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskExtra);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
246	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData),  diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData),  diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData),  diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	38	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	38	2	replace
248	[BUG]  [BUGGY]  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	38	2	replace
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	compilable	  [FE]  AssertionFailedError  	1	1	add
250	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	compilable	  [FE]  AssertionFailedError  	1	1	add
251	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	1	None	add
252	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.put(ze,  new  NameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze.put(ze,  new  NameAndComment(comment,  cfh));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
253	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ((  NameAndComment)noUTF8Flag).put(ze,  new  NameAndComment(comment,  cfh));  [CE]  inconvertible  types  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ((  NameAndComment)noUTF8Flag).put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ((  NameAndComment)noUTF8Flag).put(ze,  new  NameAndComment(comment,  cfh));	  	non-compiled	[CE]  inconvertible  types	1	None	add
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	compilable	  [FE]  AssertionFailedError  	1	1	add
255	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	compilable	  [FE]  AssertionFailedError  	1	1	add
256	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  int  cfh  =  entryEncoding.decode(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [CE]  variable  cfh  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  int  cfh  =  entryEncoding.decode(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    int  cfh  =  entryEncoding.decode(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	non-compiled	[CE]  variable  cfh  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	1	None	add
257	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding,  fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
258	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
259	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  entryLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  entryLen  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  entryLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding,  entryLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  entryLen	34	None	replace
260	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
261	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  entryStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  entryStart  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  entryStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding,  entryStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  entryStart	34	None	replace
262	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	47	None	replace
263	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen.length())));  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen.length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  int  cannot  be  dereferenced	142	None	replace
264	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment.substring(0,  comment.length())));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment.substring(0,  comment.length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol  name	142	None	replace
265	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(fileName.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(fileName.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(fileName.substring(0,  comment.length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
266	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length()  -  1)));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
267	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen).length()));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen).length()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen).length()));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
268	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length()  -  2)));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length()  -  2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length()  -  2)));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
269	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(1)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
270	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(1)));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
271	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(2)));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(2)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
272	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  off,  commentLen);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  off,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  off,  commentLen);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
273	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  off,  diskStart);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  off,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  off,  diskStart);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
274	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(offset,  diskStart);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(offset,  diskStart);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
275	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  name));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding,    name));    	non-compiled	[CE]  cannot  find  symbol  name	118	None	replace
276	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	118	None	replace
277	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  encoding));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding,    name));    	non-compiled	[CE]  cannot  find  symbol  name	118	None	replace
278	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields,  name));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding,    name));    	non-compiled	[CE]  cannot  find  symbol  name	118	None	replace
279	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  encoding));  [CE]  cannot  find  symbol  description  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding,    name));    	non-compiled	[CE]  cannot  find  symbol  description	118	None	replace
280	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  0));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  0));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  0));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
281	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  1));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
282	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
283	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  false));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  false));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  false));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
284	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  0));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  0));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  0));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
285	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0,  entryEncoding.length));  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0,  entryEncoding.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0,  entryEncoding.length));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
286	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  nameMap);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	57	None	replace
287	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	57	None	replace
288	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  nameMap,  entryEncoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  nameMap,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  nameMap,  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	57	None	replace
289	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap),  entryEncoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	57	None	replace
290	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	57	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	64	2	replace
292	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	64	2	replace
293	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  ')'  expected	64	None	replace
294	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
295	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
296	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  ')'  expected	64	None	replace
297	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	64	None	replace
298	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  ze));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  ze));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  ze));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
299	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  cannot  find  symbol  name	40	None	replace
300	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
301	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  entryEncoding));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  cannot  find  symbol  name	40	None	replace
302	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
303	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	40	None	replace
304	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
305	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileName));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	117	None	replace
306	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileName));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	117	None	replace
307	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  name));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	117	None	replace
308	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	117	None	replace
309	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
310	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  fileNameLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
311	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(fileName,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
312	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment,  commentLen));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	88	None	replace
313	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  comment,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  comment,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  comment,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
314	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(comment,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
315	[BUG]  [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(ze,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(ze,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(entryEncoding,  new  NameAndComment(ze,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	123	None	replace
316	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(ze,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(ze,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(ze,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	123	None	replace
317	[BUG]  [BUGGY]  noUTF8Flag.put(encoding,  new  NameAndComment(ze,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(encoding,  new  NameAndComment(ze,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(encoding,  new  NameAndComment(ze,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	123	None	replace
318	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	123	None	replace
319	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
320	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  -  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  -  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  -  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
321	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
322	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
323	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  entryEncoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
324	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  archiveName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  archiveName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  archiveName));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	122	None	replace
325	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  archiveName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  archiveName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  archiveName));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	122	None	replace
326	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  archivesName));  [CE]  cannot  find  symbol  archivesName  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  archivesName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  archivesName));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  archivesName	122	None	replace
327	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(archiveName,  comment));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(archiveName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(archiveName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	122	None	replace
328	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(archiveName,  ze));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(archiveName,  ze));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(archiveName,  ze));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	122	None	replace
329	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	122	None	replace
330	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment),  noUTF8Flag);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  comment),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
331	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameMap),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameMap),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  nameMap),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	102	None	replace
332	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  name),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  name	102	None	replace
333	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  fileName),  noUTF8Flag);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  fileName),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  fileName),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
334	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment,  noUTF8Flag);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment,  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  comment,  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  ')'  expected	102	None	replace
335	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileName),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileName),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment,  fileName),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  name	102	None	replace
336	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name,  noUTF8Flag);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name,  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  name,  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  ')'  expected	102	None	replace
337	[BUG]  [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	37	None	replace
338	[BUG]  [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  cannot  find  symbol  cdStart  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  cannot  find  symbol  cdStart	37	None	replace
339	[BUG]  [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  no  suitable  method  found  for  readFully(ZipEncoding)  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipEncoding)	37	None	replace
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	compilable	  [FE]  AssertionFailedError  	37	2	replace
341	[BUG]  [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	compilable	  [FE]  AssertionFailedError  	37	2	replace
342	[BUG]  [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  signatureLen  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  cannot  find  symbol  signatureLen	37	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	compilable	  [FE]  AssertionFailedError  	37	2	replace
344	[BUG]  [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	compilable	  [FE]  AssertionFailedError  	37	2	replace
345	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
346	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  entryEncoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  entryEncoding);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
347	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  nameMap);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
348	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  hasUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  hasUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
349	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  addDummyByte);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  addDummyByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  addDummyByte);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
350	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  name);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
351	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
352	[BUG]  [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	compilable	  [FE]  AssertionFailedError  	134	2	replace
354	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	compilable	  [FE]  AssertionFailedError  	134	2	replace
355	[BUG]  [BUGGY]  ze.setLocalFileName(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setLocalFileName(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setLocalFileName(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
356	[BUG]  [BUGGY]  ze.setCommentLen(commentLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCommentLen(commentLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCommentLen(commentLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
357	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);  [CE]  cannot  find  symbol  discStart  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol  discStart	134	None	replace
358	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
359	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name,  fileName));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  name	128	None	replace
360	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
361	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
362	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
363	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  expression));  [CE]  cannot  find  symbol  expression  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  expression));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  expression));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  expression	128	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	compilable	  [FE]  AssertionFailedError  	152	1	add
365	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	compilable	  [FE]  AssertionFailedError  	152	1	add
366	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	152	None	add
367	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.put(ze,  new  NameAndComment(comment,  comment));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.put(ze,  new  NameAndComment(comment,  comment));	  	non-compiled	[CE]  cannot  find  symbol	152	None	add
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	compilable	  [FE]  AssertionFailedError  	152	1	add
369	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	compilable	  [FE]  AssertionFailedError  	152	1	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	152	1	add
371	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	152	1	add
372	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	152	None	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	compilable	  [FE]  AssertionFailedError  	152	1	add
374	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  	compilable	  [FE]  AssertionFailedError  	152	1	add
375	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  message));  [CE]  cannot  find  symbol  message  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  message));	  noUTF8Flag.put(ze,    new    NameAndComment(signatureBytes,    comment));    	non-compiled	[CE]  cannot  find  symbol  message	121	None	replace
376	[BUG]  [BUGGY]  ze.put(entryName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  entryName  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryName,  new  NameAndComment(comment,  fileName));	  ze.put(name,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  entryName	92	None	replace
377	[BUG]  [BUGGY]  ze.put(encodeName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  encodeName  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encodeName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encodeName,  new  NameAndComment(comment,  fileName));	  ze.put(name,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  encodeName	92	None	replace
378	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	74	None	replace
379	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.substring(1)));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	74	None	replace
380	[BUG]  [BUGGY]  noUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.substring(1)));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
381	[BUG]  [BUGGY]  NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.substring(1)));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
382	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(name,  fileName));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(name,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(name,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	41	None	replace
383	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  description));  [CE]  cannot  find  symbol  description  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  description));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  description));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol  description	41	None	replace
384	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length())));  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
385	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length())));  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  int  cannot  be  dereferenced	73	None	replace
386	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
387	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
388	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
389	[BUG]  [BUGGY]  nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
390	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
391	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(comment,  fileName  +  1));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(comment,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(comment,  fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  cannot  find  symbol  name	53	None	replace
392	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  ze  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  ze  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  ze  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
393	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(ze,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(ze,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(ze,  fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
394	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
395	[BUG]  [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  entryLen  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  entryLen	39	None	replace
396	[BUG]  [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  signatureLen  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  signatureLen	39	None	replace
397	[BUG]  [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  discStart	39	None	replace
398	[BUG]  [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  no  suitable  method  found  for  readFully(ZipEncoding)  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipEncoding)	39	None	replace
399	[BUG]  [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  discStart	39	None	replace
400	[BUG]  [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  discStart	39	None	replace
401	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  comment));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(fileName,  comment));	  ze.put(fileName,    new    NameAndComment(comment,    comment));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
402	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileNameLen));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment,  fileNameLen));	  ze.put(fileName,    new    NameAndComment(comment,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	101	None	replace
403	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields.toString()));  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  useUnicodeExtraFields.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	8	None	replace
404	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
405	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length  -  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length  -  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length  -  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
406	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
407	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
408	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  fileName,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
409	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment,  fileName,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	129	None	replace
410	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
411	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(comment,  fileName,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
412	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameMap,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameMap,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  nameMap,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
413	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  comment,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
414	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  ')'  expected	54	None	replace
415	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment),  encoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	54	None	replace
416	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  encoding);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  cannot  find  symbol  name	54	None	replace
417	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  encoding);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  cannot  find  symbol  name	54	None	replace
418	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  ')'  expected	54	None	replace
419	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding,  name);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding,  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding,  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  cannot  find  symbol  name	54	None	replace
420	[BUG]  [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
421	[BUG]  [BUGGY]  ze.setDiskStart(offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDiskStart(offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDiskStart(offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
422	[BUG]  [BUGGY]  File  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  File  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	File  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    getFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	86	None	replace
423	[BUG]  [BUGGY]  Node  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  Node  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	Node  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    getFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
424	[BUG]  [BUGGY]  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    getFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
425	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
426	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  off));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  off));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  off));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
427	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
428	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  name));  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
429	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  offset));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  offset));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  offset));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
430	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  on));  [CE]  cannot  find  symbol  on  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  on));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  on));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  on	15	None	replace
431	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
432	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
433	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
434	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length,  name.length));  [CE]  cannot  find  symbol  name  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length,  name.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length,  name.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  name	16	None	replace
435	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
436	[BUG]  [BUGGY]  NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	42	None	replace
437	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	42	None	replace
438	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
439	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName.length,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName.length,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
440	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  encoding));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	110	None	replace
441	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
442	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
443	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(comment)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(comment)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(comment)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
444	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name,  encoding));  [CE]  cannot  find  symbol  name  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	110	None	replace
445	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	145	None	replace
446	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	145	None	replace
447	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(comment,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	145	None	replace
448	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	145	None	replace
449	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	145	None	replace
450	[BUG]  [BUGGY]  ze.setZip64Extra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setZip64Extra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setZip64Extra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
451	[BUG]  [BUGGY]  ze.setZip64Extra(archiveName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setZip64Extra(archiveName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setZip64Extra(archiveName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
452	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length()  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
453	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length()  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
454	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.substring(0,  comment.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
455	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length));  [CE]  cannot  find  symbol  name  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  cannot  find  symbol  name	19	None	replace
456	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length));  [CE]  cannot  find  symbol  length  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
457	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	19	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
459	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
460	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	59	None	add
461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
462	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
463	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
464	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	59	None	add
465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	59	1	add
466	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	59	1	add
467	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  comment.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
468	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
469	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  ze.length())));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  ze.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  ze.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
470	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  comment.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
471	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
472	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	43	None	replace
473	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	43	None	replace
474	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  nameMap));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	43	None	replace
475	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	43	None	replace
476	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	2	None	replace
477	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	2	None	replace
478	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	2	None	replace
479	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
480	[BUG]  [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
481	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString(),  name));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString(),  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString(),  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	11	None	replace
482	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
483	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(fileName,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(fileName,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	154	None	replace
484	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  name  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	154	None	replace
485	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
486	[BUG]  [BUGGY]  File  fileName  =  new  NameAndComment(fileName,  noUTF8Flag);  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  File  fileName  =  new  NameAndComment(fileName,  noUTF8Flag);  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	File  fileName  =  new  NameAndComment(fileName,  noUTF8Flag);  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	154	None	replace
487	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	154	None	replace
488	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  	compilable	  [FE]  AssertionFailedError  	46	1	add
490	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  	compilable	  [FE]  AssertionFailedError  	46	1	add
491	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	46	None	add
492	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(ze,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    ze.put(ze,  new  NameAndComment(fileName,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
493	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  fileName.put(ze,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  fileName.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    fileName.put(ze,  new  NameAndComment(fileName,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
494	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	140	None	replace
495	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	140	None	replace
496	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()),  name);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	140	None	replace
497	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  fileName));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  fileName));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
498	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  cfh));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
499	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(cfh,  comment));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	93	None	replace
500	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(cfh,  fileName));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(cfh,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(cfh,  fileName));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
501	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  commentLen));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	93	None	replace
502	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
503	[BUG]  [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(cfh,  comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(entryEncoding,  new  NameAndComment(cfh,  comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(entryEncoding,  new  NameAndComment(cfh,  comment,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
504	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  entryEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  entryEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  entryEncoding,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
505	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  entryEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  entryEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  entryEncoding,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
506	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
507	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  entryEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
508	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(cfh,  comment,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(cfh,  comment,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(cfh,  comment,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	5	None	replace
509	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encodingName,  comment));  [CE]  cannot  find  symbol  encodingName  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encodingName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(encodingName,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  encodingName	21	None	replace
510	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encodeName,  comment));  [CE]  cannot  find  symbol  encodeName  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encodeName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(encodeName,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  encodeName	21	None	replace
511	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(text,  comment));  [CE]  cannot  find  symbol  text  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(text,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(text,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  text	21	None	replace
512	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  description));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  description));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  description));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  name	70	None	replace
513	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  useUnicodeExtraFields));  [CE]  cannot  find  symbol  description  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  useUnicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
514	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  comment));  [CE]  cannot  find  symbol  description  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
515	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  name));  [CE]  cannot  find  symbol  description  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
516	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
517	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(fileName,  noUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	83	None	replace
518	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(fileName,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	83	None	replace
519	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	83	None	replace
520	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	83	None	replace
521	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  ze.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	83	None	replace
522	[BUG]  [BUGGY]  ze.setZip64Extra(fileName);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setZip64Extra(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setZip64Extra(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
523	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  expression));  [CE]  cannot  find  symbol  expression  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  expression));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  expression));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  expression	22	None	replace
524	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	22	None	replace
525	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	22	None	replace
526	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  message));  [CE]  cannot  find  symbol  message  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  message));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  message	22	None	replace
527	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
528	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
529	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
530	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	  ze.setSizesAndOffsetFromZip64Extra(zipFile,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  discStart	135	None	replace
531	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  diskLen  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  ze.setSizesAndOffsetFromZip64Extra(zipFile,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  diskLen	135	None	replace
532	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  diskEnd  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	  ze.setSizesAndOffsetFromZip64Extra(zipFile,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  diskEnd	135	None	replace
533	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  cannot  find  symbol  diskStartLen  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	  ze.setSizesAndOffsetFromZip64Extra(zipFile,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  diskStartLen	135	None	replace
534	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	125	None	replace
535	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  1)));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  cannot  find  symbol  name	125	None	replace
536	[BUG]  [BUGGY]  nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  1)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	nameMap.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
537	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  1)));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  cannot  find  symbol  name	125	None	replace
538	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(fileName,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
539	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(fileName,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(fileName,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	107	None	replace
540	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	85	None	replace
541	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	85	None	replace
542	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	85	None	replace
543	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	85	None	replace
544	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  hasUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  hasUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	138	None	replace
545	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  name);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  name);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  name	138	None	replace
546	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  gpFlag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  gpFlag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  gpFlag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	138	None	replace
547	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name  +  1));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  cannot  find  symbol  name	50	None	replace
548	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	50	None	replace
549	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  entryEncoding);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  ')'  expected	56	None	replace
550	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  comment);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	56	None	replace
551	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  entryEncoding,  name);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  entryEncoding,  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  entryEncoding,  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  cannot  find  symbol  name	56	None	replace
552	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  entryEncoding);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  cannot  find  symbol  name	56	None	replace
553	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  entryEncoding);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  cannot  find  symbol  name	56	None	replace
554	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  entryEncoding,  new  NameAndComment(fileName,  comment),  noUTF8Flag);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  entryEncoding,  new  NameAndComment(fileName,  comment),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  entryEncoding,  new  NameAndComment(fileName,  comment),  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
556	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
558	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
559	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
560	[BUG]  [BUGGY]  ze.setDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
562	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
563	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression));  [CE]  cannot  find  symbol  expression  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  expression	44	None	replace
564	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description));  [CE]  cannot  find  symbol  description  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  description	44	None	replace
565	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment.toString()),  fileName);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  comment.toString()),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  comment.toString()),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
566	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
567	[BUG]  [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  ze);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
568	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  encoding);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
569	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName.toString()),  fileName);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName.toString()),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName.toString()),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
570	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  fileName);  [CE]  cannot  find  symbol  name  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
571	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  fileNameLen);  [CE]  cannot  find  symbol  name  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  fileNameLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
572	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
573	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
574	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  comment));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
575	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString(),  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString(),  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString(),  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
576	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString(),  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString(),  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString(),  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
577	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  hasUTF8Flag));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	71	None	replace
578	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  useUnicodeExtraFields));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  useUnicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	71	None	replace
579	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  name));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	71	None	replace
580	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  hasUTF8Flag));  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	71	None	replace
581	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  addDummyByte));  [CE]  cannot  find  symbol  addDummyByte  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  addDummyByte));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  addDummyByte));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  addDummyByte	71	None	replace
582	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	71	None	replace
583	[BUG]  [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	33	None	replace
584	[BUG]  [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  cdStart  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol  cdStart	33	None	replace
585	[BUG]  [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  no  suitable  method  found  for  readFully(ZipEncoding)  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipEncoding)	33	None	replace
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	compilable	  [FE]  AssertionFailedError  	133	1	add
587	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	compilable	  [FE]  AssertionFailedError  	133	1	add
588	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);  [CE]  cannot  find  symbol  discStart  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol  discStart	133	None	add
589	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetfromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol	133	None	add
590	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnt  +  1);  [CE]  cannot  find  symbol  diskEnt  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnt  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnt  +  1);	  	non-compiled	[CE]  cannot  find  symbol  diskEnt	133	None	add
591	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze  =  setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze  =  setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze  =  setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol	133	None	add
592	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  off,  diskStart  +  1);  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  off,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  off,  diskStart  +  1);	  	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	133	None	add
593	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1));	  	non-compiled	[CE]  ';'  expected	133	None	add
594	[BUG]  [BUGGY]  ze.put(zipEncoding.decode(entry));  [CE]  cannot  find  symbol  entry  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(zipEncoding.decode(entry));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(zipEncoding.decode(entry));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol  entry	146	None	replace
595	[BUG]  [BUGGY]  ze.put(entryEncoding.decode(entryLen));  [CE]  cannot  find  symbol  entryLen  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding.decode(entryLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding.decode(entryLen));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol  entryLen	146	None	replace
596	[BUG]  [BUGGY]  ze.put(entryEncoding.decode(signatureBytes));  [CE]  cannot  find  symbol  signatureBytes  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding.decode(signatureBytes));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding.decode(signatureBytes));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	146	None	replace
597	[BUG]  [BUGGY]  ze.put(ZipEncoding.decode(zipEncoding));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ZipEncoding.decode(zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ZipEncoding.decode(zipEncoding));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	146	None	replace
598	[BUG]  [BUGGY]  ze.put(entryEncoding.decode(entryFile));  [CE]  cannot  find  symbol  entryFile  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding.decode(entryFile));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding.decode(entryFile));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol  entryFile	146	None	replace
599	[BUG]  [BUGGY]  ze.put(entryEncoding.decode(entry,  name));  [CE]  cannot  find  symbol  entry  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding.decode(entry,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding.decode(entry,  name));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol  entry	146	None	replace
600	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
601	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  commentLen));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	45	None	replace
602	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
603	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  offset));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  offset));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  offset));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
604	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
605	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameLen));  [CE]  cannot  find  symbol  nameLen  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  nameLen	45	None	replace
606	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  name));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	45	None	replace
607	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name.length));  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
608	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment.length));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.length,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
609	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment.length));  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
610	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentStart);  [CE]  cannot  find  symbol  commentStart  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentStart);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  commentStart	131	None	replace
611	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  off);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  off);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	compilable	  [FE]  AssertionFailedError  	131	2	replace
612	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  off);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  off);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  off);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	compilable	  [FE]  AssertionFailedError  	131	2	replace
613	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  DEFAULT_EOCDL_LENGTH);  [CE]  cannot  find  symbol  DEFAULT_EOCDL_LENGTH  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  DEFAULT_EOCDL_LENGTH);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  DEFAULT_EOCDL_LENGTH);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EOCDL_LENGTH	131	None	replace
614	[BUG]  [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  entryLen  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  entryLen	30	None	replace
615	[BUG]  [BUGGY]  archive.readFully(commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	30	None	replace
616	[BUG]  [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  no  suitable  method  found  for  readFully(ZipEncoding)  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryEncoding);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipEncoding)	30	None	replace
617	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	30	2	replace
618	[BUG]  [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(fileName);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	30	2	replace
619	[BUG]  [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  encoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(entryEncoding,  new  NameAndComment(fileName,  encoding.substring(1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	76	None	replace
620	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.substring(1)));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.substring(1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	76	None	replace
621	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(1)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
622	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
623	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(1)));  [CE]  cannot  find  symbol  name  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	76	None	replace
624	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  message));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  message));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    message));    	non-compiled	[CE]  cannot  find  symbol  name	72	None	replace
625	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  message));  [CE]  cannot  find  symbol  message  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  message));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    message));    	non-compiled	[CE]  cannot  find  symbol  message	72	None	replace
626	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  addDummyByte,  comment));  [CE]  cannot  find  symbol  addDummyByte  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  addDummyByte,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  addDummyByte,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    message));    	non-compiled	[CE]  cannot  find  symbol  addDummyByte	72	None	replace
627	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileNameLen));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	103	None	replace
628	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameLen));  [CE]  cannot  find  symbol  nameLen  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  nameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  nameLen));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8));    	non-compiled	[CE]  cannot  find  symbol  nameLen	103	None	replace
629	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(diskStart,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  noUTF8Flag);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(diskStart,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(diskStart,  offset);  setSizesAndOffsetFromZip64Extra(ze,  offset,  noUTF8Flag);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
630	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  noUTF8Flag);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  noUTF8Flag);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
631	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding,  noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding,  noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
632	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag,  entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag,  entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag,  entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
633	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag,  fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag,  fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag,  fileName);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
634	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(noUTF8Flag));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(noUTF8Flag));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(noUTF8Flag));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	115	None	replace
635	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  commentLen));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	23	None	replace
636	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  off));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
637	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
638	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
639	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  offset));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  offset));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  offset));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
640	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  commentLen));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	23	None	replace
641	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  offset));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  offset));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  offset));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
642	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	25	None	replace
643	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  cannot  find  symbol  name	25	None	replace
644	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
645	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
646	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  fileName  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  fileName  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
647	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	148	None	replace
648	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	148	None	replace
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	compilable	  [FE]  AssertionFailedError  	148	2	replace
650	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	compilable	  [FE]  AssertionFailedError  	148	2	replace
651	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	148	None	replace
652	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  diskEnd  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  cannot  find  symbol  diskEnd	148	None	replace
653	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  addDummyByte);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  addDummyByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  addDummyByte);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
654	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  useUnicodeExtraFields);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  useUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  useUnicodeExtraFields);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
655	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  name);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
656	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  encoding);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
657	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  entryEncoding);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
658	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1),  hasUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1),  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
659	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  addDummyByte));  [CE]  cannot  find  symbol  addDummyByte  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  addDummyByte));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  addDummyByte));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  addDummyByte	24	None	replace
660	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression));  [CE]  cannot  find  symbol  expression  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  expression	24	None	replace
661	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	67	None	replace
662	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	67	None	replace
663	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	67	None	replace
664	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileEncoding));  [CE]  cannot  find  symbol  fileEncoding  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileEncoding));	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol  fileEncoding	91	None	replace
665	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  fileName));	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
666	[BUG]  [BUGGY]  ze.put(fileName,  entryEncoding);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  entryEncoding);	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
667	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	63	1	add
668	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	63	1	add
669	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	63	None	add
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	63	1	add
671	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	63	1	add
672	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  ';'  expected	63	None	add
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	63	1	add
674	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	63	1	add
675	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	63	None	add
676	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	63	None	add
677	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
678	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	10	None	replace
679	[BUG]  [BUGGY]  ze.setFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
680	[BUG]  [BUGGY]  ze.put(entryEncoding.toString(),  new  NameAndComment(fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding.toString(),  new  NameAndComment(fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding.toString(),  new  NameAndComment(fileName.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
681	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment.toString()));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(name,  new  NameAndComment(comment.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	130	None	replace
682	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(fileName.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
683	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
684	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
685	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(comment.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(comment.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(comment.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
686	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(entryEncoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(entryEncoding.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(entryEncoding.toString()));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
687	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	compilable	  [FE]  AssertionFailedError  	81	1	add
688	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	compilable	  [FE]  AssertionFailedError  	81	1	add
689	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	81	None	add
690	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  ';'  expected	81	None	add
691	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	compilable	  [FE]  AssertionFailedError  	81	1	add
692	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	compilable	  [FE]  AssertionFailedError  	81	1	add
693	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	81	None	add
694	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(entryEncoding.decode(fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(entryEncoding.decode(fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(entryEncoding.decode(fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	81	None	add
695	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileNameLen));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  fileNameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  cannot  find  symbol  name	119	None	replace
696	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	119	None	replace
697	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  ze.setFileName(fileName);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  ze.setFileName(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  ze.setFileName(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	84	None	replace
698	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  expression);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  expression);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  expression);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    expression);    	non-compiled	[CE]  cannot  find  symbol  name	58	None	replace
699	[BUG]  [BUGGY]  File  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  File  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	File  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    entryEncoding.decode(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	105	None	replace
700	[BUG]  [BUGGY]  Node  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  Node  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	Node  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    entryEncoding.decode(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
701	[BUG]  [BUGGY]  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    entryEncoding.decode(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  incompatible  types	105	None	replace
702	[BUG]  [BUGGY]  File  fileName  =  entryEncoding.decode(fileName);  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  File  fileName  =  entryEncoding.decode(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	File  fileName  =  entryEncoding.decode(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    entryEncoding.decode(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	105	None	replace
703	[BUG]  [BUGGY]  NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(encoding,  new  NameAndComment(fileName,  noUTF8Flag.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	9	None	replace
704	[BUG]  [BUGGY]  noUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(encoding,  new  NameAndComment(fileName,  ze.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	9	None	replace
705	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  fileName.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	9	None	replace
706	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.toString()));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	9	None	replace
707	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	62	None	replace
708	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  commentLen));  ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	62	None	replace
709	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  false);  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  false);  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  false);  ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	62	None	replace
710	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  entryEncoding));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  cannot  find  symbol  name	48	None	replace
711	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	48	None	replace
712	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	48	None	replace
713	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	71	None	replace
714	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	71	None	replace
715	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  extraLen);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  extraLen);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
716	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  comment.length()  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
717	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen).length())));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen).length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen).length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  ';'  expected	77	None	replace
718	[BUG]  [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  cannot  find  symbol  signatureLen  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  cannot  find  symbol  signatureLen	37	None	replace
719	[BUG]  [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  cannot  find  symbol  separator  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  cannot  find  symbol  separator	37	None	replace
720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	compilable	  [FE]  AssertionFailedError  	37	2	replace
721	[BUG]  [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cfh);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	compilable	  [FE]  AssertionFailedError  	37	2	replace
722	[BUG]  [BUGGY]  archive.readFully(entries);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  no  suitable  method  found  for  readFully(Map<ZipArchiveEntry,OffsetEntry>)  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entries);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entries);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(Map<ZipArchiveEntry,OffsetEntry>)	37	None	replace
723	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString(),  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString(),  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.toString(),  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
724	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  fileName));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
725	[BUG]  [BUGGY]  ze.setUnicodeExtraFields(useUnicodeExtraFields);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setUnicodeExtraFields(useUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setUnicodeExtraFields(useUnicodeExtraFields);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
726	[BUG]  [BUGGY]  ze.setSizesAndOffset(diskStart  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffset(diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffset(diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
727	[BUG]  [BUGGY]  ze.setSizesAndOffset(diskStart,  offset  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffset(diskStart,  offset  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffset(diskStart,  offset  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	134	None	replace
728	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
729	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(entryEncoding));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(entryEncoding));	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	134	None	replace
730	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  +  1);  [CE]  cannot  find  symbol  diskEnd  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol  diskEnd	134	None	replace
731	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  noUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
732	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
733	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
734	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  sourceName));  [CE]  cannot  find  symbol  sourceName  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  sourceName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  sourceName));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  cannot  find  symbol  sourceName	43	None	replace
735	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  useUnicodeExtraFields);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  useUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  useUnicodeExtraFields);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
736	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(ceilingUnicodeExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  ceilingUnicodeExtraFields  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(ceilingUnicodeExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(ceilingUnicodeExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol  ceilingUnicodeExtraFields	35	None	add
737	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	35	None	add
738	[BUG]  [BUGGY]  ze.setZip64Extra(archiveName);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setZip64Extra(archiveName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setZip64Extra(archiveName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
739	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(archiveName);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(archiveName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(archiveName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
740	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
741	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileNameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
742	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
743	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileNameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
744	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  commentLen,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  commentLen,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  commentLen,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
745	[BUG]  [BUGGY]  ze.putByte(comment,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.putByte(comment,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.putByte(comment,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
746	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  ';'  expected	149	None	add
747	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	143	None	replace
748	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	143	None	replace
749	[BUG]  [BUGGY]  NoUTF8Flag  noUTF8Flag  =  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag  noUTF8Flag  =  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag  noUTF8Flag  =  new  NameAndComment(fileName,  ze.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  ';'  expected	143	None	replace
750	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  commentLen)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  commentLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  commentLen)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
751	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  fileNameLen);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  fileNameLen);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
752	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  name  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	154	None	replace
753	[BUG]  [BUGGY]  entryEncoding.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  entryEncoding.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	entryEncoding.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
754	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
755	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression),  expression);  [CE]  cannot  find  symbol  expression  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression),  expression);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression),  expression);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    expression);    	non-compiled	[CE]  cannot  find  symbol  expression	58	None	replace
756	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding),  expression);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding),  expression);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding),  expression);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    expression);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	58	None	replace
757	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  entryEncoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  entryEncoding.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  entryEncoding.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	9	None	replace
758	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  nameMap);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	57	None	replace
759	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.toString()),  name);	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
760	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.toString()),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
761	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.toString()  +  1));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	130	None	replace
762	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString(),  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString(),  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.toString(),  name));	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	130	None	replace
763	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  name));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(comment,  name));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	94	None	replace
764	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  name));  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  name));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	94	None	replace
765	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	117	None	replace
766	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(info,  archiveName,  comment));  [CE]  cannot  find  symbol  info  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(info,  archiveName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(info,  archiveName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  info	122	None	replace
767	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  archives));  [CE]  cannot  find  symbol  archives  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  archives));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  archives));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  archives	122	None	replace
768	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  description));  [CE]  cannot  find  symbol  description  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  description));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  description));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
769	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  fileName));  [CE]  cannot  find  symbol  description  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  description,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  description	70	None	replace
770	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  description));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  description));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  description));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    description));    	non-compiled	[CE]  cannot  find  symbol  name	70	None	replace
771	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(encoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(encoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(encoding,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	42	None	replace
772	[BUG]  [BUGGY]  ze.setUnicodeExtraFields(useUnicodeExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setUnicodeExtraFields(useUnicodeExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setUnicodeExtraFields(useUnicodeExtraFields);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
773	[BUG]  [BUGGY]  ze.setSizesAndOffset(diskStart);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffset(diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffset(diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
774	[BUG]  [BUGGY]  ze.setSizesAndOffset(offset,  diskStart);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffset(offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffset(offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
775	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoder));  [CE]  cannot  find  symbol  encoder  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoder));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoder));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  encoder	123	None	replace
776	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoded));  [CE]  cannot  find  symbol  encoded  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoded));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  encoded));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  encoded	123	None	replace
777	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileNameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
778	[BUG]  [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  dummyByte  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  dummyByte	30	None	replace
779	[BUG]  [BUGGY]  archive.readFully(entries);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  no  suitable  method  found  for  readFully(Map<ZipArchiveEntry,OffsetEntry>)  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entries);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entries);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(Map<ZipArchiveEntry,OffsetEntry>)	30	None	replace
780	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	136	None	add
781	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  diskEnd  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  diskEnd	131	None	replace
782	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	83	None	replace
783	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment));  ze.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
784	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
785	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(2)));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(2)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	74	None	replace
786	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  2)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  2)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	74	None	replace
787	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	24	None	replace
788	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  message));  [CE]  cannot  find  symbol  message  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  message));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  message	24	None	replace
789	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
790	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
791	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  noUTF8Flag.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  noUTF8Flag.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
792	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
793	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  archiveName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  archiveName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  archiveName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
794	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  message));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  message));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  message));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    message));    	non-compiled	[CE]  cannot  find  symbol  name	72	None	replace
795	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
796	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
797	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  ';'  expected	59	None	add
798	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	59	1	add
799	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	59	1	add
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
801	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
802	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	19	None	replace
803	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length  -  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length  -  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.length  -  1));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	19	None	replace
804	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length));  [CE]  cannot  find  symbol  length  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
805	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
806	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	150	None	replace
807	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setLocalFileExtra(cfh);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setLocalFileExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setLocalFileExtra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
808	[BUG]  [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	10	None	replace
809	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	10	None	replace
810	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	108	None	replace
811	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	108	None	replace
812	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	108	None	replace
813	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	108	2	replace
814	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	108	2	replace
815	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
816	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
817	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	104	None	replace
818	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment,  encoding));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
819	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  comment);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  comment);	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  ')'  expected	144	None	replace
820	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  comment2));  [CE]  cannot  find  symbol  comment2  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  comment2));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  comment2));	  ze.put(comment,    new    NameAndComment(cfh,    noUTF8));    	non-compiled	[CE]  cannot  find  symbol  comment2	144	None	replace
821	[BUG]  [BUGGY]  ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
822	[BUG]  [BUGGY]  ze.setFileName(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setFileName(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setFileName(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
823	[BUG]  [BUGGY]  ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
824	[BUG]  [BUGGY]  ze.setFileName(fileNameLen);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setFileName(fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setFileName(fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
825	[BUG]  [BUGGY]  ze.setFileName(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setFileName(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setFileName(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
826	[BUG]  [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  dummyByte  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  dummyByte	111	None	replace
827	[BUG]  [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  separator  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  separator	111	None	replace
828	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  fileName.length));  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name.length));    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
829	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression,  comment));  [CE]  cannot  find  symbol  expression  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    expression));    	non-compiled	[CE]  cannot  find  symbol  expression	69	None	replace
830	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression,  name));  [CE]  cannot  find  symbol  expression  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  expression,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    expression));    	non-compiled	[CE]  cannot  find  symbol  expression	69	None	replace
831	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  fileName));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
832	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  name));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	129	None	replace
833	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name,  noUTF8Flag));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  name,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  name	129	None	replace
834	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName,  useUnicodeExtraFields));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName,  useUnicodeExtraFields));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
835	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  name));	  ze.put(entryEncoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	89	None	replace
836	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  1);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  1);	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8));    	non-compiled	[CE]  ')'  expected	103	None	replace
837	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	47	None	replace
838	[BUG]  [BUGGY]  ze  =  new  NameAndComment(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze  =  new  NameAndComment(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze  =  new  NameAndComment(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  incompatible  types	60	None	replace
839	[BUG]  [BUGGY]  ze  =  new  NameAndComment(cfh,  comment);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze  =  new  NameAndComment(cfh,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze  =  new  NameAndComment(cfh,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  incompatible  types	60	None	replace
840	[BUG]  [BUGGY]  ze.put(fileName,  entryEncoding));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  entryEncoding));	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  ';'  expected	91	None	replace
841	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  zipEncoding));	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	91	None	replace
842	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  nameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  nameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  nameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	63	None	add
843	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  nameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  nameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  nameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
844	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF7Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF7Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF7Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	63	None	add
845	[BUG]  [BUGGY]  noUTF8Flag.put(zipEncoding,  new  NameAndComment(ze,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(zipEncoding,  new  NameAndComment(ze,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(zipEncoding,  new  NameAndComment(ze,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
846	[BUG]  [BUGGY]  NoUTF8Flag.put(zipEncoding,  new  NameAndComment(ze,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(zipEncoding,  new  NameAndComment(ze,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(zipEncoding,  new  NameAndComment(ze,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
847	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
848	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
849	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName),  noUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	127	None	replace
850	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  name	127	None	replace
851	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  File  fileName  =  new  File(fileName);  [CE]  cannot  find  symbol  name  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  File  fileName  =  new  File(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  File  fileName  =  new  File(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    new    File(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	106	None	replace
852	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskExtraData);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskExtraData);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskExtraData);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
853	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DEFAULT_LOCATOR_OFFSET);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DEFAULT_LOCATOR_OFFSET);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DEFAULT_LOCATOR_OFFSET);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
854	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DELETE_EOCD_SIZE);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DELETE_EOCD_SIZE);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(diskStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  DELETE_EOCD_SIZE);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	38	None	replace
855	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  fileNameLen);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  fileNameLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	49	None	replace
856	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	21	None	replace
857	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  comment));  [CE]  cannot  find  symbol  signatureBytes  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	21	None	replace
858	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	21	None	replace
859	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
860	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  name	23	None	replace
861	[BUG]  [BUGGY]  ze.setLocale(locale);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  locale  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setLocale(locale);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setLocale(locale);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol  locale	36	None	replace
862	[BUG]  [BUGGY]  ze.setLocale(locale);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  locale  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setLocale(locale);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setLocale(locale);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol  locale	36	None	replace
863	[BUG]  [BUGGY]  ze.setCommentLen(commentLen);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCommentLen(commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCommentLen(commentLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
864	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	41	None	replace
865	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  0));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  0));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  0));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	119	None	replace
866	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  off));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  off));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  off));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	119	None	replace
867	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  on));  [CE]  cannot  find  symbol  on  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  on));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  on));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  cannot  find  symbol  on	119	None	replace
868	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  hasUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name,  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
869	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName,  comment.length),  fileName);  [CE]  cannot  find  symbol  name  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName,  comment.length),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(name,  fileName,  comment.length),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
870	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  comment);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()),  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
871	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  off));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  off));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  off));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
872	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  out));  [CE]  cannot  find  symbol  out  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  out));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  out));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  out	88	None	replace
873	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  on));  [CE]  cannot  find  symbol  on  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  on));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  on));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  cannot  find  symbol  on	88	None	replace
874	[BUG]  [BUGGY]  ze.putInt(fileName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.putInt(fileName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.putInt(fileName,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
875	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  hasUTF8Flag);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName),  hasUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
876	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  noUTF8Flag,  hasUTF8Flag);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  noUTF8Flag,  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName),  noUTF8Flag,  hasUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
877	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  this.noUTF8Flag);  [CE]  cannot  find  symbol  noUTF8Flag  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  this.noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName),  this.noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  noUTF8Flag	102	None	replace
878	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
879	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	50	None	replace
880	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  extraLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  extraLen);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
881	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  addDummyByte);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  addDummyByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  addDummyByte);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
882	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  hasUTF8Flag);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  hasUTF8Flag);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
883	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
884	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
885	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	133	None	add
886	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  data  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol  data	133	None	add
887	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  +  1);  [CE]  cannot  find  symbol  diskEnd  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  +  1);	  	non-compiled	[CE]  cannot  find  symbol  diskEnd	133	None	add
888	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(diskStart);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	133	None	add
889	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  encoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	54	None	replace
890	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  1)));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
891	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  encoding.substring(0,  1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  encoding.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  encoding.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	125	None	replace
892	[BUG]  [BUGGY]  ze.put(zipEncoding.decode(noUTF8Flag));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(zipEncoding.decode(noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(zipEncoding.decode(noUTF8Flag));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	146	None	replace
893	[BUG]  [BUGGY]  ze.put(zipEncoding.decode(zipEncoding));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(zipEncoding.decode(zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(zipEncoding.decode(zipEncoding));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	146	None	replace
894	[BUG]  [BUGGY]  ze.put(zipEncoding.decode(entries));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(zipEncoding.decode(entries));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(zipEncoding.decode(entries));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	146	None	replace
895	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
896	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  encoding,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  encoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  encoding,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
897	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	27	None	replace
898	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  sourceName));  [CE]  cannot  find  symbol  sourceName  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  sourceName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  sourceName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  cannot  find  symbol  sourceName	27	None	replace
899	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  entryEncoding,  comment));  [CE]  cannot  find  symbol  signatureBytes  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	4	None	replace
900	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(info,  entryEncoding,  comment));  [CE]  cannot  find  symbol  info  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(info,  entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(info,  entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  info	4	None	replace
901	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  this.signatureBytes);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  this.signatureBytes);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name),  this.signatureBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  name	147	None	replace
902	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.encoded);  [CE]  cannot  find  symbol  encoded  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.encoded);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.encoded);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  encoded	147	None	replace
903	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.off);  [CE]  cannot  find  symbol  off  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.off);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.off);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  off	147	None	replace
904	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen  -  1)));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
905	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name  +  1));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  cannot  find  symbol  name	53	None	replace
906	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	53	None	replace
907	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  code.toString()));  [CE]  cannot  find  symbol  code  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  code.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  code.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  cannot  find  symbol  code	8	None	replace
908	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entry,  cfh));  [CE]  cannot  find  symbol  entry  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entry,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(entry,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  entry	2	None	replace
909	[BUG]  [BUGGY]  entryEncoding.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  entryEncoding.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	entryEncoding.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
910	[BUG]  [BUGGY]  NoUTF8Flag  ze  =  new  NameAndComment(cfh,  comment);  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag  ze  =  new  NameAndComment(cfh,  comment);  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag  ze  =  new  NameAndComment(cfh,  comment);  ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
911	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(zip64,  offset,  diskStart);  [CE]  cannot  find  symbol  zip64  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(zip64,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(zip64,  offset,  diskStart);	  ze.setSizesAndOffsetFromZip64Extra(zipFile,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  zip64	135	None	replace
912	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  noUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh,    comment);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	65	None	replace
913	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh,  comment);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh,    comment);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	65	None	replace
914	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  useUnicodeExtraFields));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  useUnicodeExtraFields));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	100	None	replace
915	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  nameUnicodeExtraFields));  [CE]  cannot  find  symbol  nameUnicodeExtraFields  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  nameUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  nameUnicodeExtraFields));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8Flag));    	non-compiled	[CE]  cannot  find  symbol  nameUnicodeExtraFields	100	None	replace
916	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	96	None	replace
917	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	96	None	replace
918	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
919	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
920	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(dummyByte));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(dummyByte));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(dummyByte));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
921	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  disk  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  disk  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  disk	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
922	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setZip64Extra(separatorEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setZip64Extra(separatorEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setZip64Extra(separatorEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
923	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStar  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStar  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setComment(entryEncoding.decode(signatureBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStar	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
924	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setZip64Extra(sipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setZip64Extra(sipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setZip64Extra(sipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
925	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  name	139	None	replace
926	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	139	None	replace
927	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	139	None	replace
928	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	138	None	replace
929	[BUG]  [BUGGY]  archive.readFully(separatorLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  separatorLen  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(separatorLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(separatorLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  separatorLen	124	None	replace
930	[BUG]  [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  separator  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  separator	124	None	replace
931	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(info,  comment));  [CE]  cannot  find  symbol  info  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(info,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(info,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(encodingName,    comment));    	non-compiled	[CE]  cannot  find  symbol  info	26	None	replace
932	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
933	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  not  a  statement	64	None	replace
934	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
935	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	64	2	replace
936	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	64	2	replace
937	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	64	2	replace
938	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	64	2	replace
939	[BUG]  [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  ')'  expected	64	None	replace
940	[BUG]  [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(dummyByte);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  dummyByte  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(dummyByte);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(dummyByte);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  dummyByte	113	None	replace
941	[BUG]  [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(entryLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  entryLen  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entryLen);  ze.setCentralDirectoryExtra(entryLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entryLen);  ze.setCentralDirectoryExtra(entryLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  entryLen	113	None	replace
942	[BUG]  [BUGGY]  archive.readFully(entries);  ze.setCentralDirectoryExtra(entries);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  no  suitable  method  found  for  readFully(Map<ZipArchiveEntry,OffsetEntry>)  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(entries);  ze.setCentralDirectoryExtra(entries);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(entries);  ze.setCentralDirectoryExtra(entries);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(Map<ZipArchiveEntry,OffsetEntry>)	113	None	replace
943	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1),  name);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	98	None	replace
944	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.put(entryEncoding,  new  NameAndComment(comment,  comment));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.put(entryEncoding,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.put(entryEncoding,  new  NameAndComment(comment,  comment));	  	non-compiled	[CE]  cannot  find  symbol	152	None	add
945	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  noUTF8Flag.put(ze,  new  FileAndComment(comment,  comment));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  noUTF8Flag.put(ze,  new  FileAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    noUTF8Flag.put(ze,  new  FileAndComment(comment,  comment));	  	non-compiled	[CE]  cannot  find  symbol	152	None	add
946	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  new  NameAndComment(comment,  comment));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    new  NameAndComment(comment,  comment));	  	non-compiled	[CE]  ';'  expected	152	None	add
947	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  new  NameAndComment(comment,  cfh));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    new  NameAndComment(comment,  cfh));	  	non-compiled	[CE]  ';'  expected	1	None	add
948	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  NoUTF8Flag.put(ze,  new  nameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  NoUTF8Flag.put(ze,  new  nameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    NoUTF8Flag.put(ze,  new  nameAndComment(comment,  cfh));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
949	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze  =  new  NameAndComment(comment,  cfh);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze  =  new  NameAndComment(comment,  cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze  =  new  NameAndComment(comment,  cfh);	  	non-compiled	[CE]  incompatible  types	1	None	add
950	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen  -  1)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  commentLen  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
951	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName.substring(0,  comment.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
952	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString(),  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString(),  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString(),  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	140	None	replace
953	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment),  noUTF8Flag);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  comment),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
954	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  comment,  name));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	93	None	replace
955	[BUG]  [BUGGY]  ze.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
956	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
957	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(fileName,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(fileName,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(fileName,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
958	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  ';'  expected	81	None	add
959	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF7Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  noUTF7Flag  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF7Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF7Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol  noUTF7Flag	81	None	add
960	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  name	22	None	replace
961	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  null));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  null));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  null));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	22	None	replace
962	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	22	None	replace
963	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  data  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  data	132	None	replace
964	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(true);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(true);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(true);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	132	None	replace
965	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	132	None	replace
966	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment.length,  encoding));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment.length,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment.length,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	110	None	replace
967	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
968	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding,  name));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	110	None	replace
969	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment.length,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment.length,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment.length,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
970	[BUG]  [BUGGY]  archive.readFully(signature);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  signature  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signature);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signature);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol  signature	33	None	replace
971	[BUG]  [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  separator  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(separator);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	non-compiled	[CE]  cannot  find  symbol  separator	33	None	replace
972	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  archive.readFully(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    archive.readFully(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  	compilable	  [FE]  AssertionFailedError  	46	2	add
973	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  archive.readFully(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  archive.readFully(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    archive.readFully(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  	compilable	  [FE]  AssertionFailedError  	46	2	add
974	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(fileName,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.put(fileName,  new  NameAndComment(fileName,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    ze.put(fileName,  new  NameAndComment(fileName,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
975	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen)));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen)));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
976	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(comment.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(comment.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(comment.substring(0,  comment.length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
977	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen).length())));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen).length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  commentLen).length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  ';'  expected	142	None	replace
978	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entryEncoding.toString())));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entryEncoding.toString())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entryEncoding.toString())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	11	None	replace
979	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entry)));  [CE]  cannot  find  symbol  entry  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entry)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entry)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  cannot  find  symbol  entry	11	None	replace
980	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
981	[BUG]  [BUGGY]  archive.readFully(separatorLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  separatorLen  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(separatorLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(separatorLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  separatorLen	39	None	replace
982	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment));  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  cannot  find  symbol  length	109	None	replace
983	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name));  [CE]  cannot  find  symbol  length  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  cannot  find  symbol  length	109	None	replace
984	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  name	128	None	replace
985	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  encoding,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
986	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  name.substring(2)));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  name.substring(2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  name.substring(2)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	141	None	replace
987	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.length())));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
988	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(2)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(2)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
989	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	31	1	add
990	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	31	1	add
991	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(zipEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	31	None	add
992	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
993	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
994	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
995	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.decode(fileName)));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.decode(fileName)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.decode(fileName)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
996	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  2)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(0,  2)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	76	None	replace
997	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(2)));  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(2)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(2)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	76	None	replace
998	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment,  encoding));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  name	67	None	replace
999	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	67	None	replace
1000	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  0,  0));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  0,  0));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  0,  0));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
1001	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  0,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  0,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  0,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
1002	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  hasUTF8Flag);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  hasUTF8Flag);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
1003	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  useUnicodeExtraFields);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  useUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  useUnicodeExtraFields);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
1004	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag,  true);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag,  true);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag,  true);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
1005	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
1006	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  noUTF8Flag);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  noUTF8Flag);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
1007	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	44	None	replace
1008	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  fileNameLen);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  fileNameLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
1009	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  encoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	51	None	replace
1010	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  HASH_SIZE));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  HASH_SIZE));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  HASH_SIZE));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	3	None	replace
1011	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  baseUri));  [CE]  cannot  find  symbol  baseUri  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  baseUri));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  baseUri));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  baseUri	3	None	replace
1012	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(text,  comment,  cfh));  [CE]  cannot  find  symbol  text  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(text,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(text,  comment,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  text	145	None	replace
1013	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entry,  cfh));  [CE]  cannot  find  symbol  entry  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(entry,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(entry,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  entry	145	None	replace
1014	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(name,  cfh));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(name,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(name,  cfh));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  name	145	None	replace
1015	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  entryEncoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	56	None	replace
1016	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  fileName);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding),  fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	56	None	replace
1017	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  entryEncoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
1018	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	compilable	  [FE]  AssertionFailedError  	148	2	replace
1019	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	compilable	  [FE]  AssertionFailedError  	148	2	replace
1020	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  diskStart));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  ')'  expected	148	None	replace
1021	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  diskLen  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  cannot  find  symbol  diskLen	148	None	replace
1022	[BUG]  [BUGGY]  ze.put(sourceName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  sourceName  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(sourceName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(sourceName,  new  NameAndComment(comment,  fileName));	  ze.put(name,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  sourceName	92	None	replace
1023	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setLocalFileExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setLocalFileExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setLocalFileExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
1024	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setZip64Extra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setZip64Extra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setZip64Extra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
1025	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
1026	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetToZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetToZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetToZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
1027	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  cannot  find  symbol  signatureBytes  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	113	None	replace
1028	[BUG]  [BUGGY]  archive.readFully(commentLen);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(commentLen);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(commentLen);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(signatureBytes);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	113	None	replace
1029	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  useUnicodeExtraFields));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag,  useUnicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	71	None	replace
1030	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    hasUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	71	None	replace
1031	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  fileLen));  [CE]  cannot  find  symbol  fileLen  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  fileLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  fileLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  fileLen	139	None	replace
1032	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  fileName.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	139	None	replace
1033	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(distributionBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  distributionBytes  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(distributionBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(distributionBytes));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  distributionBytes	38	None	replace
1034	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(differStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  differStart  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding.decode(differStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding.decode(differStart));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  differStart	38	None	replace
1035	[BUG]  [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  dummyByte  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  dummyByte	39	None	replace
1036	[BUG]  [BUGGY]  archive.readFully(commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	39	None	replace
1037	[BUG]  [BUGGY]  archive.readFully(cdLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  cdLen  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	non-compiled	[CE]  cannot  find  symbol  cdLen	39	None	replace
1038	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileEncoding,  name));  [CE]  cannot  find  symbol  fileEncoding  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileEncoding,  name));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileEncoding,  name));	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol  fileEncoding	91	None	replace
1039	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileEncoding,  noUTF8Flag));  [CE]  cannot  find  symbol  fileEncoding  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileEncoding,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileEncoding,  noUTF8Flag));	  ze.put(entryEncoding,    new    NameAndComment(fileName,    fileName));    	non-compiled	[CE]  cannot  find  symbol  fileEncoding	91	None	replace
1040	[BUG]  [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	10	None	replace
1041	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1042	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setComment(entryEncoding.decode(comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	60	2	replace
1043	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(comment));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	60	2	replace
1044	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	60	None	replace
1045	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment)	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  ')'  expected	60	None	replace
1046	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  entriesWithoutUTF8Flag.put(ze,  new  NameAndComment(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  entriesWithoutUTF8Flag.put(ze,  new  NameAndComment(  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  entriesWithoutUTF8Flag.put(ze,  new  NameAndComment(	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1047	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	67	None	replace
1048	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  entryEncoding,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	67	None	replace
1049	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    nameMap);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	57	None	replace
1050	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  unicodeExtraFields));  [CE]  cannot  find  symbol  unicodeExtraFields  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  unicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  unicodeExtraFields));	  ze.put(fileName,    new    NameAndComment(comment,    name));    	non-compiled	[CE]  cannot  find  symbol  unicodeExtraFields	90	None	replace
1051	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment),  ze.put(ze,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  ')'  expected	62	None	replace
1052	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  encoding);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    encoding);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1053	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	148	None	replace
1054	[BUG]  [BUGGY]  noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	148	None	replace
1055	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    setSizesAndOffsetFromZip64Extra(ze,    offset,    comment);    	non-compiled	[CE]  cannot  find  symbol  discStart	148	None	replace
1056	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.encode(entryEncoding.toString())));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.encode(entryEncoding.toString())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.encode(entryEncoding.toString())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
1057	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entryEncoding.toString()));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entryEncoding.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(entryEncoding.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding.toString()));    	non-compiled	[CE]  ')'  expected	11	None	replace
1058	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  entryEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  entryEncoding,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
1059	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(entryEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
1060	[BUG]  [BUGGY]  NoUTF8Flag  noUTF8Flag  =  new  NameAndComment(fileName,  ze);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag  noUTF8Flag  =  new  NameAndComment(fileName,  ze);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag  noUTF8Flag  =  new  NameAndComment(fileName,  ze);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1061	[BUG]  [BUGGY]  noUTF8Flag  =  new  NameAndComment(fileName,  ze);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag  =  new  NameAndComment(fileName,  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag  =  new  NameAndComment(fileName,  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	156	None	replace
1062	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  commentLen,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
1063	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  hasUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
1064	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  entryEncoding));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
1065	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  extraLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  extraLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  extraLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
1066	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen,  fileNameLen));	  ze.put(fileName,    new    NameAndComment(comment,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	88	None	replace
1067	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  encoding.substring(1)));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  encoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  encoding.substring(1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  ')'  expected	76	None	replace
1068	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(encoding)));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(encoding)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(encoding)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	76	None	replace
1069	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  fileNameLen)));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  fileNameLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  fileNameLen)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
1070	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  encoding.substring(0,  1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  encoding.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  encoding.substring(0,  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	76	None	replace
1071	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  offset));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  offset));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  offset));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
1072	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  nameMap));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	128	None	replace
1073	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  this.signatureBytes));  [CE]  cannot  find  symbol  signatureBytes  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  this.signatureBytes));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  this.signatureBytes));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName,    name));    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	128	None	replace
1074	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
1075	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	149	1	add
1076	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  cannot  find  symbol	149	None	add
1077	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  	non-compiled	[CE]  cannot  find  symbol	149	None	add
1078	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);	  	non-compiled	[CE]  ';'  expected	149	None	add
1079	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	108	2	replace
1080	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	108	2	replace
1081	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  fileNameLen)));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  fileNameLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  fileNameLen)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1082	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(off,  fileNameLen)));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(off,  fileNameLen)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(off,  fileNameLen)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1083	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.decode(fileName)));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.decode(fileName)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(0,  entryEncoding.decode(fileName)));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  ')'  expected	141	None	replace
1084	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(off,  comment.length())));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(off,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  entryEncoding.substring(off,  comment.length())));	  ze.put(fileName,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
1085	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(zipFileData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [CE]  cannot  find  symbol  zipFileData  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  ze.setCentralDirectoryExtra(zipFileData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    ze.setCentralDirectoryExtra(zipFileData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  	non-compiled	[CE]  cannot  find  symbol  zipFileData	136	None	add
1086	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  zipEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
1087	[BUG]  [BUGGY]  noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    encoding));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	5	None	replace
1088	[BUG]  [BUGGY]  ze.put(encoding.decode(encoding));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding.decode(encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding.decode(encoding));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1089	[BUG]  [BUGGY]  ze.put(archiveName.decode(entryEncoding));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(archiveName.decode(entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(archiveName.decode(entryEncoding));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1090	[BUG]  [BUGGY]  ze.put(archiveName.decode(zipEncoding));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(archiveName.decode(zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(archiveName.decode(zipEncoding));	  ze.put(entryEncoding.decode(entry));    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1091	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	50	None	replace
1092	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	50	None	replace
1093	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment));  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.length,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    name));    	non-compiled	[CE]  cannot  find  symbol  length	109	None	replace
1094	[BUG]  [BUGGY]  noUTF8Flag  =  new  NameAndComment(fileName,  ze.getZip64Extra());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag  =  new  NameAndComment(fileName,  ze.getZip64Extra());  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag  =  new  NameAndComment(fileName,  ze.getZip64Extra());	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1095	[BUG]  [BUGGY]  NoUTF8Flag  ze  =  new  NameAndComment(fileName,  noUTF8Flag);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag  ze  =  new  NameAndComment(fileName,  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag  ze  =  new  NameAndComment(fileName,  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1096	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
1097	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  nameMap);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  nameMap);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
1098	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  ze);  [CE]  cannot  find  symbol  name  [FE]                                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.length),  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
1099	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  commentLen);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length),    name);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	20	None	replace
1100	[BUG]  [BUGGY]  ze.putAll(fileName,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.putAll(fileName,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.putAll(fileName,  new  NameAndComment(comment,  noUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	83	None	replace
1101	[BUG]  [BUGGY]  ze.put(z,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  z  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(z,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(z,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  z	83	None	replace
1102	[BUG]  [BUGGY]  fileName.put(ze,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  fileName.put(ze,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	fileName.put(ze,  new  NameAndComment(comment,  noUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	83	None	replace
1103	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(archiveName,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(archiveName,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(archiveName,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	122	None	replace
1104	[BUG]  [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(archiveName,  comment));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(archiveName,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(name,  new  NameAndComment(archiveName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(archiveName,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	122	None	replace
1105	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	48	None	replace
1106	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	48	None	replace
1107	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length()  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1108	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  ze.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  ze.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  ze.length()  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1109	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  commentLen.length()  -  1)));  [CE]  int  cannot  be  dereferenced  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  commentLen.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  commentLen.length()  -  1)));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  int  cannot  be  dereferenced	79	None	replace
1110	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
1111	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()  + ") ");  [CE]  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()  + ") ");  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.toString()  + ") ");	  ze.put(fileName,    new    NameAndComment(comment.toString()));    	non-compiled	[CE]  	130	None	replace
1112	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.put(ze,  new  NameAndComment(comment,  cfh));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.put(ze,  new  NameAndComment(comment,  cfh));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze.put(ze,  new  NameAndComment(comment,  cfh));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
1113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
1114	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
1115	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment  +  1),  hasUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment  +  1),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment  +  1),  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
1116	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  usesUnicodeExtraFields);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  usesUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag,  usesUnicodeExtraFields);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
1117	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment  +  1),  hasUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment  +  1),  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment  +  1),  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    hasUTF8Flag);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
1118	[BUG]  [BUGGY]  ze  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    getFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
1119	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  encoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  encoding);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
1120	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  commentLen  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  commentLen  +  1));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(ze,  commentLen  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	52	None	replace
1121	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  expressionLen);  [CE]  cannot  find  symbol  expressionLen  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  expressionLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  expressionLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    expression);    	non-compiled	[CE]  cannot  find  symbol  expressionLen	58	None	replace
1122	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	119	None	replace
1123	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  useUnicodeExtraFields));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  useUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen,  useUnicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	119	None	replace
1124	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  fileNameLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  fileNameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    fileNameLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	119	None	replace
1125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1126	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1127	[BUG]  [BUGGY]  ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(fileNameLen);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    fileNameLen);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1128	[BUG]  [BUGGY]  archive.readFully(duplicateStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  duplicateStart  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(duplicateStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(duplicateStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskLen);    	non-compiled	[CE]  cannot  find  symbol  duplicateStart	111	None	replace
1129	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.put(comment,  new  NameAndComment(comment,  comment));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  ze.put(comment,  new  NameAndComment(comment,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    ze.put(comment,  new  NameAndComment(comment,  comment));	  	non-compiled	[CE]  cannot  find  symbol	152	None	add
1130	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  off,  diskStartLen);  [CE]  cannot  find  symbol  diskStartLen  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  off,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  off,  diskStartLen);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  diskStartLen	114	None	replace
1131	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
1132	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  discStartLen);  [CE]  cannot  find  symbol  discStartLen  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  discStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  discStartLen);	  ze.setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  discStartLen	114	None	replace
1133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
1134	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
1135	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName);  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(fileName,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileName);	  	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	46	None	add
1136	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(comment,  noUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	153	None	replace
1137	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(comment,  noUTF8));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(comment,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    comment));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	153	None	replace
1138	[BUG]  [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  cannot  find  symbol  dummyByte  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(dummyByte);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    extraLen);    	non-compiled	[CE]  cannot  find  symbol  dummyByte	37	None	replace
1139	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  cfh));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  cfh));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	96	None	replace
1140	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1141	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length()  -  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1142	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length()    -    1)));    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	82	2	replace
1144	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	82	2	replace
1145	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  entriesWithoutUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [CE]  cannot  find  symbol  entriesWithoutUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  entriesWithoutUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  entriesWithoutUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  entriesWithoutUTF8Flag	82	None	replace
1146	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  archive.readFully(ze);  }  [CE]  no  suitable  method  found  for  readFully(ZipArchiveEntry)  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  archive.readFully(ze);  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  archive.readFully(ze);  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipArchiveEntry)	82	None	replace
1147	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	82	None	replace
1148	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  zipEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	56	None	replace
1149	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding,  comment);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    entryEncoding);    	non-compiled	[CE]  ')'  expected	56	None	replace
1150	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  ')'  expected	12	None	replace
1151	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  comment.toString()));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  comment.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString(),  comment.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
1152	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  ze);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment.toString()),  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()),    name);    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
1153	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length())));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1154	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  ze.length())));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  ze.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  ze.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1155	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  encoding);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  encoding);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	127	None	replace
1156	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this.fileNameLen);  [CE]  cannot  find  symbol  fileNameLen  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this.fileNameLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  this.fileNameLen);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  fileNameLen	127	None	replace
1157	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setLocalFileExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setLocalFileExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setLocalFileExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol	133	None	add
1158	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol	133	None	add
1159	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(differData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  cannot  find  symbol  differData  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  ze.setCentralDirectoryExtra(differData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    ze.setCentralDirectoryExtra(differData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  	non-compiled	[CE]  cannot  find  symbol  differData	133	None	add
1160	[BUG]  [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  no  suitable  method  found  for  readFully(int)  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(diskStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(int)	124	None	replace
1161	[BUG]  [BUGGY]  archive.readFully(duplicateStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  duplicateStart  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(duplicateStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(duplicateStart);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskEnd);    	non-compiled	[CE]  cannot  find  symbol  duplicateStart	124	None	replace
1162	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdextraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  cdextraData  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdextraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cdextraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol  cdextraData	35	None	add
1163	[BUG]  [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetToZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]          ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetToZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	                ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetToZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
1164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1165	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1166	[BUG]  [BUGGY]  ze.setSizesAndOffset(offset,  diskStart  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffset(offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffset(offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1167	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(commentLen));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(commentLen));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(commentLen));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	134	None	replace
1168	[BUG]  [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart  +  1);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    +    1);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1169	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  setSizesAndOffsetFromZip64Extra(ze,  offset,  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  setSizesAndOffsetFromZip64Extra(ze,  offset,  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  setSizesAndOffsetFromZip64Extra(ze,  offset,	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1170	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  archive.readFully(cdExtraData);  setSizesAndOffsetFromZip64Extra(  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  archive.readFully(cdExtraData);  setSizesAndOffsetFromZip64Extra(  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  archive.readFully(cdExtraData);  setSizesAndOffsetFromZip64Extra(	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1171	[BUG]  [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag  &&  useUnicodeExtraFields)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  ')'  expected	64	None	replace
1172	[BUG]  [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.length));  [CE]  cannot  find  symbol  length  [FE]                                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.length));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
1173	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.length));  [CE]  cannot  find  symbol  length  [FE]                                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  ze.length));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
1174	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(comment,  noUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	19	None	replace
1175	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  sourceName.toString()));  [CE]  cannot  find  symbol  sourceName  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  sourceName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  sourceName.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  cannot  find  symbol  sourceName	7	None	replace
1176	[BUG]  [BUGGY]  ze.setDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  data  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  data	32	None	replace
1177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	32	2	replace
1178	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	compilable	  [FE]  AssertionFailedError  	32	2	replace
1179	[BUG]  [BUGGY]  ze.setDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  cannot  find  symbol  data  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(data);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  data	32	None	replace
1180	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(comment.substring(0,  commentLen.length())));  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(comment.substring(0,  commentLen.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(comment.substring(0,  commentLen.length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  int  cannot  be  dereferenced	142	None	replace
1181	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  entryEncoding.length())));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  entryEncoding.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  entryEncoding.length())));	  ze.put(fileName,    new    NameAndComment(comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
1183	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setComment(entryEncoding.decode(comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	59	1	add
1184	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  ';'  expected	59	None	add
1185	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
1186	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	59	None	add
1187	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	154	None	replace
1188	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(cfh);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
1189	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
1190	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  comment));	  	non-compiled	[CE]  ';'  expected	63	None	add
1191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setComment(entryEncoding.decode(comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setComment(entryEncoding.decode(comment));	  	compilable	  [FE]  AssertionFailedError  	63	1	add
1192	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setComment(entryEncoding.decode(comment));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setComment(entryEncoding.decode(comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setComment(entryEncoding.decode(comment));	  	compilable	  [FE]  AssertionFailedError  	63	1	add
1193	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  comment);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(cfh,  comment);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(cfh,  comment);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
1194	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setZip64Extra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setZip64Extra(cfh);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
1195	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(cfh,        comment));        ze.setCentralDirectoryExtra(cfh);    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
1196	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
1197	[BUG]  [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(commentLen,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(fileName,  new  NameAndComment(commentLen,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(fileName,  new  NameAndComment(commentLen,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
1198	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  off));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  off));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  off));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
1199	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	45	None	replace
1200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1201	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1203	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	87	1	replace
1205	[BUG]  [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(!hasUTF8Flag)  {  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    }    else    {    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	87	1	replace
1206	[BUG]  [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1),  noUTF8Flag);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1),  noUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  cannot  find  symbol  name	98	None	replace
1207	[BUG]  [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1),  ze);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1),  ze);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(name,  new  NameAndComment(fileName,  comment  +  1),  ze);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  cannot  find  symbol  name	98	None	replace
1208	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  commentLen);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1),    name);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	98	None	replace
1209	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  encoding);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  encoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	49	None	replace
1210	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  ze.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	97	None	replace
1211	[BUG]  [BUGGY]  NoUTF8Flag.put(zip,  new  NameAndComment(comment,  fileName.toString()));  [CE]  cannot  find  symbol  zip  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(zip,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(zip,  new  NameAndComment(comment,  fileName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName.toString()));    	non-compiled	[CE]  cannot  find  symbol  zip	97	None	replace
1212	[BUG]  [BUGGY]  ze.put(archiveName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(archiveName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(archiveName,  new  NameAndComment(comment,  fileName));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
1213	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encoding,  new  NameAndComment(fileName,  entryEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(fileName,  entryEncoding));	  ze.put(encoding,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	94	None	replace
1214	[BUG]  [BUGGY]  ze  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    entryEncoding.decode(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  incompatible  types	105	None	replace
1215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	compilable	  [FE]  AssertionFailedError  	132	2	replace
1216	[BUG]  [BUGGY]  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    discStart);    	compilable	  [FE]  AssertionFailedError  	132	2	replace
1217	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment)&  this.signatureBytes);  [CE]  cannot  find  symbol  signatureBytes  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment)&  this.signatureBytes);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment)&  this.signatureBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	147	None	replace
1218	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.commentLen);  [CE]  cannot  find  symbol  commentLen  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this.signatureBytes);    	non-compiled	[CE]  cannot  find  symbol  commentLen	147	None	replace
1219	[BUG]  [BUGGY]  ze.setDummyByte(addDummyByte);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDummyByte(addDummyByte);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDummyByte(addDummyByte);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
1220	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
1221	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(entryEncoding));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(entryEncoding));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(entryEncoding));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
1222	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd	  archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart    	non-compiled	[CE]  ')'  expected	112	None	replace
1223	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  fileNameLen,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  fileNameLen,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  fileNameLen,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
1224	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  entryEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  entryEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  entryEncoding,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	110	None	replace
1225	[BUG]  [BUGGY]  ze  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  no  suitable  constructor  found  for  File(byte[])  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File    fileName    =    new    File(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  no  suitable  constructor  found  for  File(byte[])	106	None	replace
1226	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  comment,  hasUTF8Flag));	  ze.put(fileName,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	93	None	replace
1227	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.length,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.length,  fileName.length));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.length,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	17	None	replace
1228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	81	1	add
1229	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	81	1	add
1230	[BUG]  [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,        new        NameAndComment(comment,        fileName));        noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setDirectoryExtra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
1231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	85	2	replace
1232	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	85	2	replace
1233	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	85	None	replace
1234	[BUG]  [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  archive.readFully(ze);  }  [CE]  no  suitable  method  found  for  readFully(ZipArchiveEntry)  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  archive.readFully(ze);  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(fileName!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  archive.readFully(ze);  }	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  no  suitable  method  found  for  readFully(ZipArchiveEntry)	85	None	replace
1235	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  hasUTF8Flag));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
1236	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(commentLen,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(commentLen,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(commentLen,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
1237	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	23	None	replace
1238	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  useUnicodeExtraFields);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  useUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  useUnicodeExtraFields);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	138	None	replace
1239	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  hasUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  hasUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  hasUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	138	None	replace
1240	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  addDummyByte);  [CE]  cannot  find  symbol  addDummyByte  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  addDummyByte);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag,  addDummyByte);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol  addDummyByte	138	None	replace
1241	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.decode(fileName)));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.decode(fileName)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.decode(fileName)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.toString()));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1242	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
1243	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString(),  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString(),    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
1244	[BUG]  [BUGGY]  ze.setFileName(fileName);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setFileName(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setFileName(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1245	[BUG]  [BUGGY]  noUTF8Flag  =  nameMap.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag  =  nameMap.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag  =  nameMap.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setFileName(fileName);    noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	84	None	replace
1246	[BUG]  [BUGGY]  ze.putByte(fileName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.putByte(fileName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.putByte(fileName,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1247	[BUG]  [BUGGY]  ze.putShort(fileName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.putShort(fileName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.putShort(fileName,  new  NameAndComment(comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1248	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  encoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	42	None	replace
1249	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  zipEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	42	None	replace
1250	[BUG]  [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(entryEncoding,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(fileName,  new  NameAndComment(entryEncoding,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(fileName,  new  NameAndComment(entryEncoding,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    entryEncoding));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	40	None	replace
1251	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  commentLen);	          ze.setCentralDirectoryExtra(entryEncoding);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	34	None	replace
1252	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encodeUnicodeExtraFields));  [CE]  cannot  find  symbol  encodeUnicodeExtraFields  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  encodeUnicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  encodeUnicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(encoding,    comment));    	non-compiled	[CE]  cannot  find  symbol  encodeUnicodeExtraFields	123	None	replace
1253	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  commentLen.length())));  [CE]  int  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  commentLen.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  commentLen.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
1254	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  ze.length())));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  ze.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.substring(0,  ze.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1255	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length())));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  ze.length())));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length())));    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1256	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  noUTF8Flag,  0));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  noUTF8Flag,  0));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  noUTF8Flag,  0));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
1257	[BUG]  [BUGGY]  noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment,  ze));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment,  ze));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(comment,  new  NameAndComment(cfh,  comment,  ze));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment,    0));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
1258	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    fileName,    noUTF8Flag));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	129	None	replace
1259	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh),  noUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    cfh));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	145	None	replace
1260	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  hasUTF8Flag));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
1261	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  commentLen));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment.length,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length,    commentLen));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
1262	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  1)));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1263	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  1)));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    1)));    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1264	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  unicodeExtraFields));  [CE]  cannot  find  symbol  unicodeExtraFields  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  unicodeExtraFields));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  unicodeExtraFields));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  unicodeExtraFields	22	None	replace
1265	[BUG]  [BUGGY]  ze.put(encodingName,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  encodingName  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(encodingName,  new  NameAndComment(comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encodingName,  new  NameAndComment(comment,  fileName));	  ze.put(name,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  encodingName	92	None	replace
1266	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  encoding.substring(1)));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  encoding.substring(1)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.substring(off,  encoding.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  ')'  expected	74	None	replace
1267	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(encoding)));  [CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(encoding)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.decode(encoding)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  method  decode  in  interface  ZipEncoding  cannot  be  applied  to  given  types;	74	None	replace
1268	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  entryEncoding.substring(0,  entryEncoding.length())));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName,  entryEncoding.substring(0,  entryEncoding.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    encoding.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1269	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  commentLen);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart,  commentLen);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	115	None	replace
1270	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(differStart,  noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  differStart  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(differStart,  noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(differStart,  noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  ze.setCentralDirectoryExtra(noUTF8Flag);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  differStart	115	None	replace
1271	[BUG]  [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(comment,  new  NameAndComment(fileName,  ze.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	140	None	replace
1272	[BUG]  [BUGGY]  ze.putByte(comment,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.putByte(comment,  new  NameAndComment(cfh,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.putByte(comment,  new  NameAndComment(cfh,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1273	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  nameMap));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    nameMap));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	68	None	replace
1274	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen),  noUTF8Flag);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen),  noUTF8Flag);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	102	None	replace
1275	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  useUnicodeExtraFields);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  useUnicodeExtraFields);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName),  useUnicodeExtraFields);	  ze.put(fileName,    new    NameAndComment(comment,    fileName),    noUTF8Flag);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
1276	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
1277	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length)));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(0,    comment.length)));    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
1278	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  archiveName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  archiveName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  archiveName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
1279	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  sourceName.toString()));  [CE]  cannot  find  symbol  sourceName  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  sourceName.toString()));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  sourceName.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    name.toString()));    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
1280	[BUG]  [BUGGY]  if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	66	2	replace
1282	[BUG]  [BUGGY]  if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	if(noUTF8Flag!=  null)  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  }	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	66	2	replace
1283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1284	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(comment));  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	          ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    commentLen);    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1285	[BUG]  [BUGGY]  ze.setComment(entryEncoding.decode(entry));  [CE]  cannot  find  symbol  entry  [FE]    AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setComment(entryEncoding.decode(entry));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setComment(entryEncoding.decode(entry));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol  entry	150	None	replace
1286	[BUG]  [BUGGY]  ze.setDirectoryExtra(cfh);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setDirectoryExtra(cfh);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setDirectoryExtra(cfh);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1287	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(cfh,  offset,  commentLen);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(cfh,  offset,  commentLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(cfh,  offset,  commentLen);	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1288	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this,  entryEncoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this,  entryEncoding);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this,  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	126	None	replace
1289	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  this);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  this);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding),  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    this);    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	126	None	replace
1290	[BUG]  [BUGGY]  archive.readFully(cdLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  cdLen  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(cdLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(cdLen);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  cdLen	30	None	replace
1291	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  cannot  find  symbol  diskStartLen  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  diskStartLen	30	None	replace
1292	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [CE]  cannot  find  symbol  signatureBytes  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStartLen);	          archive.readFully(signatureBytes);    ze.setCentralDirectoryExtra(cdExtraData);    setSizesAndOffsetFromZip64Extra(ze,    offset,    diskStart);    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	30	None	replace
1293	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  null));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  null));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  null));	  ze.put(fileName,    new    NameAndComment(comment,    noUTF8));    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1294	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  fileName));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
1295	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  zipEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  zipEncoding));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  zipEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(zipEncoding,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	95	None	replace
1296	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(line,  comment));  [CE]  cannot  find  symbol  line  [FE]            AssertionFailedError      [CONTEXT]      archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {      [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(line,  comment));  [BUGGY]      }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(line,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  line	21	None	replace
