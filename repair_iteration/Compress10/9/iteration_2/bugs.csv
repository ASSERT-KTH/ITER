bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	4	2	replace
2	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	compilable	  [FE]  AssertionFailedError  	4	2	replace
3	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
4	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(entryEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
5	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  encoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
6	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  0));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
7	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()));  [CE]  cannot  find  symbol  name  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
8	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()));  [CE]  cannot  find  symbol  name  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
9	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
10	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
11	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
12	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()),  name);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
13	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString(),  name));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString(),  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString(),  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
14	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name.length));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name.length));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  name	8	None	replace
15	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
16	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
17	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  comment.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
18	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name.length));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name.length));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  name	8	None	replace
19	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.length));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
20	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name);  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
21	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(name,  comment));  [CE]  cannot  find  symbol  name  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(name,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(name,  comment));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	11	None	replace
22	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name));  [CE]  cannot  find  symbol  name  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	11	None	replace
23	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
24	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	11	None	replace
25	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	11	None	replace
26	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encodingName,  comment));  [CE]  cannot  find  symbol  encodingName  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encodingName,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encodingName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  encodingName	7	None	replace
27	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  name	7	None	replace
28	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encodeName,  comment));  [CE]  cannot  find  symbol  encodeName  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encodeName,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encodeName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  encodeName	7	None	replace
29	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(text,  comment));  [CE]  cannot  find  symbol  text  [FE]                      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(text,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(text,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  text	7	None	replace
30	[BUG]  [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  signatureBytes  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  cannot  find  symbol  signatureBytes	9	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	        ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
32	[BUG]  [BUGGY]      ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
33	[BUG]  [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [CE]  cannot  find  symbol  signatureBytes  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	non-compiled	[CE]  cannot  find  symbol  signatureBytes	9	None	add
34	[BUG]  [BUGGY]      ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        ze.setCentralDirectoryExtra(entryEncoding);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	9	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	        ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
36	[BUG]  [BUGGY]      ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  commentLen);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
37	[BUG]  [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [CE]  cannot  find  symbol  signatureBytes  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  extraLen);	  	non-compiled	[CE]  cannot  find  symbol  signatureBytes	9	None	add
38	[BUG]  [BUGGY]      ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        ze.setCentralDirectoryExtra(entryEncoding.decode(cdExtraData));  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	9	None	add
39	[BUG]  [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  signatureBytes  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	  	non-compiled	[CE]  cannot  find  symbol  signatureBytes	9	None	add
40	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	14	None	replace
41	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	14	None	replace
42	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	14	None	replace
43	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
44	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  [CE]  cannot  find  symbol  name  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
45	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	2	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	2	1	replace
47	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	compilable	  [FE]  AssertionFailedError  	2	1	replace
48	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  entryEncoding));	  noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	2	None	replace
49	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
50	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
51	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
52	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  commentLen  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	6	None	replace
53	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName  +  1));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
54	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  encoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	12	None	replace
55	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  signatureBytes);  [CE]  cannot  find  symbol  signatureBytes  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  signatureBytes);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  signatureBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	12	None	replace
56	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  entryEncoding);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  entryEncoding);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  entryEncoding);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	12	None	replace
57	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  nameMap);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  nameMap);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  nameMap);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	12	None	replace
58	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  expression);  [CE]  cannot  find  symbol  expression  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  expression);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  expression);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  cannot  find  symbol  expression	12	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	3	1	add
60	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	3	1	add
61	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	3	None	add
62	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	3	1	add
64	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	compilable	  [FE]  AssertionFailedError  	3	1	add
65	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh,  comment);  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	3	None	add
66	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
67	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
68	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  nameMap));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
69	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  expression));  [CE]  cannot  find  symbol  expression  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  expression));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  expression));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  expression	5	None	replace
70	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  description));  [CE]  cannot  find  symbol  description  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  description));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  description));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  description	5	None	replace
71	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  hasUTF8Flag));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
72	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  message));  [CE]  cannot  find  symbol  message  [FE]                      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  message));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  message));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  message	5	None	replace
73	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
74	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
75	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length()  -  1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
76	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
77	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
78	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(1)));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol  name	16	None	replace
79	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length()  -  1)));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length()  -  1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length()  -  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
80	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	1	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	compilable	  [FE]  AssertionFailedError  	1	1	add
82	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	compilable	  [FE]  AssertionFailedError  	1	1	add
83	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
84	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
85	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	1	None	add
86	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  File  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  File  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File  fileName  =  getFileName(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	1	None	add
87	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  }  else  {  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	1	None	add
88	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  commentLen));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  commentLen));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
89	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(comment,  fileName));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
90	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  name));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
91	[BUG]  [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding,  new  NameAndComment(fileName,  fileName));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
92	[BUG]  [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(name,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(name,  new  NameAndComment(comment,  fileName));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
93	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(cfh,  comment));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
94	[BUG]  [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(encoding,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(encoding,  new  NameAndComment(comment,  fileName));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
95	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(zipEncoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
96	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	4	None	replace
97	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
98	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  name);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
99	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment  +  1),  hasUTF8Flag);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment    +    1));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
100	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
101	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  comment));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
102	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  noUTF8Flag);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName),  noUTF8Flag);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName),  noUTF8Flag);	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
103	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  noUTF8));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  noUTF8));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	15	None	replace
104	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  encoding));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
105	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  File  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  File  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File  fileName  =  entryEncoding.decode(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	1	None	add
106	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  File  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  File  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    File  fileName  =  new  File(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  variable  fileName  is  already  defined  in  method  readCentralDirectoryEntry(Map<ZipArchiveEntry,NameAndComment>)	1	None	add
107	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(ze,  new  NameAndComment(comment,  fileName));  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
108	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    NoUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));	  	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	3	None	add
109	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name));  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol  name	8	None	replace
110	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length,  encoding));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	8	None	replace
111	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  signatureBytes  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	      	non-compiled	[CE]  cannot  find  symbol  signatureBytes	10	None	replace
112	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart	      	non-compiled	[CE]  ')'  expected	10	None	replace
113	[BUG]  [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  signatureBytes  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(signatureBytes);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	      	non-compiled	[CE]  cannot  find  symbol  signatureBytes	10	None	replace
114	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
115	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(noUTF8Flag);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);	      	non-compiled	[CE]  method  setCentralDirectoryExtra  in  class  ZipArchiveEntry  cannot  be  applied  to  given  types;	10	None	replace
116	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  name,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
117	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileName));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
118	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name));  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  encoding,  name));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
119	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  fileNameLen));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	5	None	replace
120	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  baseUri));  [CE]  cannot  find  symbol  baseUri  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  baseUri));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  baseUri));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  baseUri	5	None	replace
121	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  comment));  [CE]  cannot  find  symbol  signatureBytes  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(signatureBytes,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	7	None	replace
122	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(archiveName,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	7	None	replace
123	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(encoding,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	7	None	replace
124	[BUG]  [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [CE]  cannot  find  symbol  signatureBytes  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]      archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	        archive.readFully(signatureBytes);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskEnd);	  	non-compiled	[CE]  cannot  find  symbol  signatureBytes	9	None	add
125	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  1)));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
126	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	12	None	replace
127	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  noUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  noUTF8Flag);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	14	None	replace
128	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  name));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  name));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName,  name));	  NoUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
129	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment,  fileName,  noUTF8Flag));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment,  fileName,  noUTF8Flag));	  ze.put(fileName,    new    NameAndComment(comment,    fileName));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	15	None	replace
130	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.toString()));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.toString()));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	13	None	replace
131	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [CE]  cannot  find  symbol  diskLen  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskLen);	      	non-compiled	[CE]  cannot  find  symbol  diskLen	10	None	replace
132	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [CE]  cannot  find  symbol  discStart  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  discStart);	      	non-compiled	[CE]  cannot  find  symbol  discStart	10	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	      	compilable	  [FE]  AssertionFailedError  	10	2	replace
134	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart  +  1);	      	compilable	  [FE]  AssertionFailedError  	10	2	replace
135	[BUG]  [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(zipFile,  offset,  diskStart);  [CE]  cannot  find  symbol  zipFile  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setSizesAndOffsetFromZip64Extra(zipFile,  offset,  diskStart);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setSizesAndOffsetFromZip64Extra(zipFile,  offset,  diskStart);	      	non-compiled	[CE]  cannot  find  symbol  zipFile	10	None	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	      	compilable	  [FE]  AssertionFailedError  	10	2	replace
137	[BUG]  [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  fileNameLen);	      	compilable	  [FE]  AssertionFailedError  	10	2	replace
138	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag);  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  noUTF8Flag);	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	11	None	replace
139	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.length));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
140	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.toString()));	  NoUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	11	None	replace
141	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  encoding.substring(1)));  [CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(fileName,  encoding.substring(1)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(fileName,  encoding.substring(1)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  constructor  NameAndComment  in  class  NameAndComment  cannot  be  applied  to  given  types;	16	None	replace
142	[BUG]  [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length())));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length())));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(fileName,  new  NameAndComment(comment.substring(0,  comment.length())));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.substring(1)));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
143	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length)));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length)));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment.substring(0,  comment.length)));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment.length));    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
144	[BUG]  [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  noUTF8));  [CE]  cannot  find  symbol  noUTF8  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(comment,  new  NameAndComment(cfh,  noUTF8));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(comment,  new  NameAndComment(cfh,  noUTF8));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  noUTF8	4	None	replace
145	[BUG]  [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [CE]  cannot  find  symbol  NoUTF8Flag  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	NoUTF8Flag.put(ze,  new  NameAndComment(comment,  cfh));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  NoUTF8Flag	4	None	replace
146	[BUG]  [BUGGY]  ze.put(entryEncoding.decode(entry));  [CE]  cannot  find  symbol  entry  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  ze.put(entryEncoding.decode(entry));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	ze.put(entryEncoding.decode(entry));	  noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    	non-compiled	[CE]  cannot  find  symbol  entry	4	None	replace
147	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.signatureBytes);  [CE]  cannot  find  symbol  signatureBytes  [FE]          AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.signatureBytes);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment),  this.signatureBytes);	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment),    name);    	non-compiled	[CE]  cannot  find  symbol  signatureBytes	12	None	replace
148	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);  setSizesAndOffsetFromZip64Extra(ze,  offset,  comment);	  	non-compiled	[CE]  method  setSizesAndOffsetFromZip64Extra  in  class  ZipFile  cannot  be  applied  to  given  types;	3	None	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
150	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(cfh,  comment));  ze.setCentralDirectoryExtra(cfh);  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(cfh,    comment));    ze.setCentralDirectoryExtra(cfh);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
151	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  unicodeExtraFields));  [CE]  cannot  find  symbol  unicodeExtraFields  [FE]            AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  unicodeExtraFields));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(fileName,  comment,  unicodeExtraFields));	  noUTF8Flag.put(ze,    new    NameAndComment(fileName,    comment,    name));    	non-compiled	[CE]  cannot  find  symbol  unicodeExtraFields	5	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	add	noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	compilable	  [FE]  AssertionFailedError  	7	2	replace
153	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,  new  NameAndComment(comment,  comment));	  noUTF8Flag.put(ze,    new    NameAndComment(name,    comment));    	compilable	  [FE]  AssertionFailedError  	7	2	replace
154	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.put(comment,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.put(comment,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
155	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(fileName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
156	[BUG]  [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(archiveName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    archive.readFully(cdExtraData);  ze.setCentralDirectoryExtra(cdExtraData);  setSizesAndOffsetFromZip64Extra(ze,  offset,  diskStart);  byte[]  comment  =  new  byte[commentLen];  archive.readFully(comment);  ze.setComment(entryEncoding.decode(comment));  if  (!hasUTF8Flag  &&  useUnicodeExtraFields)  {    [BUGGY]  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  ze.setZip64Extra(archiveName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));  [BUGGY]    }  }  [CLASS]  ZipFile  OffsetEntry  2  BoundedInputStream  NameAndComment  1  [METHOD]  readCentralDirectoryEntry  [RETURN_TYPE]  void  NameAndComment>  noUTF8Flag  [VARIABLES]  byte[]  cdExtraData  cfh  comment  fileName  name  signatureBytes  boolean  addDummyByte  closed  hasUTF8Flag  success  useUnicodeExtraFields  ZipEncoding  entryEncoding  zipEncoding  RandomAccessFile  archive  OffsetEntry  offset  ZipArchiveEntry  ze  String  archiveName  encoding  name  GeneralPurposeBit  gpFlag  Map  entries  entriesWithoutUTF8Flag  nameMap  noUTF8Flag  int  BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  ZIP64_EOCDL_LENGTH  ZIP64_EOCDL_LOCATOR_OFFSET  ZIP64_EOCD_CFD_LOCATOR_OFFSET  commentLen  diskStart  extraLen  fileNameLen  off  versionMadeBy  long  CFH_SIG  LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  sig  start  time  Comparator  OFFSET_COMPARATOR  	projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java	0.7071067811865475	513	513	1	replace	noUTF8Flag.put(ze,    new    NameAndComment(comment,    fileName));    ze.setZip64Extra(archiveName);  noUTF8Flag.put(ze,  new  NameAndComment(comment,  fileName));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
