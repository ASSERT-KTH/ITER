projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset!=offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>>offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=ze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(remaining,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.dataOffset==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zipEnd,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZERO_DATA_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZERO_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zipEnd,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(remaining,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zipEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(entry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(inflater,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entries,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zip.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zipEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.keySet());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zip.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zipEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(remaining,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remaining+offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null||offsetEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze,0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.getPath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.dataLength;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.dataFile;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.dataFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==CFH_SIG);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.dataOffset,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataLength,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataOffset,ze.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.fileToFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataInputStream.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataLength;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.fileNumber();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(ZipArchiveEntry.DEFAULT);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(ZipArchiveEntry.DEFAULT_ENTRY);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(zip);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset<0||offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset<=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset<1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323List<ZipArchiveEntry>entries=Sets.newHashSet();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(offsetEntry.data);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ArrayList<ZipArchiveEntry>entries=Sets.newHashSet();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Collection<ZipArchiveEntry>entries=Sets.newHashSet();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Lists.newHashSet();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(start,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(entry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(entry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getCompressedSize(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,remaining,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getCompressedSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getCompressedSize(),dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummyByte(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(remaining,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(setEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.FOR_FILENAME_LENGTH==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.OFFSET_FOR_FILENAME_LENGTH==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.DATA_OFFSET==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(remaining,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(setEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(start,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(entry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(offsetEntry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entry.getName(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323List<ZipArchiveEntry>entries=Sets.newHashSet(entry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null,offsetEntry.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null,offsetEntry.dataOffset));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(lineNumber,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(start,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remaining,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(Zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_CFD_LENGTH,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(ZERO_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null||offsetEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==null||offsetEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null||offsetEntry.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null&&offsetEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null||offsetEntry.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null&&offsetEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.inflater;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset,ze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset+ze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset?null:offsetEntry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset?offsetEntry.getInputStream():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry,offsetEntry.dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(inflater,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(0);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getValue();if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getSize());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getDataOffset());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(setEntry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataLength!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>>null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offset.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>>1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=1-offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=1||offsetEntry.dataOffset!=1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=2);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset!=null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null,offsetEntry.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset+offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset+offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(start+offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset+ze.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(lineOffset+offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(setEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remainingOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,start,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.dataOffset==0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(entry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(remaining,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getSize());if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getDataOffset());if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=ze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry,ze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=this.entry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.getValue(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,zipEncoding.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries,offsetEntry.keySet());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323List<ZipArchiveEntry>entries=Sets.newHashSet(entries.keySet());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.keySet(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.values());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(setEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(setEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zipEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(entry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getSize());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,inflater);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entriesWithoutUTF8Flag,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zipEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entries,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entries,dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,entries);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,entries);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entries,offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,entries,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==LFH_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==dataOffset.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==CFH_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(setEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remaining<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset!=offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.getMethod(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,offset.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.getMethod(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(remaining,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(setEntry.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(entry.dataOffset==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataOffset),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==line.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==source.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.get(ze),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323List<ZipArchiveEntry>entries=Sets.newHashSet(entries.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.get(ze,offsetEntry.dataOffset));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries,offsetEntry.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.get(0));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.inflater.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=entry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=entries.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=inputStream.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataLength<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsets.length<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetStart<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=CFH_SIG);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.data);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=BYTE_SHIFT);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=HASH_SIG);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset>=offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset>>offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetHashedOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataLength!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset<0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry,offsetEntry.dataOffset<0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offset.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zip.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remainingOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataLength,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset,ze.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset,ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.dataStart);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=ze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getValue()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getKey();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entry.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataLength,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offset.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(entry.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCD_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataLength,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry,offsetEntry.dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(),offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream().openStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(inflater,ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(remaining,ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,offsetEntry.dataOffset,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataLength==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataSet==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=null,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataLength==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetHashedOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getMethod(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,remaining,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.zip64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCDL_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCD_CFD_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>>0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset!=0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset>>0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(start,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset<0||offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=0||offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ZIP64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry!=null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.dataOffset,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(zipEncoding,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entriesWithoutUTF8Flag.keySet());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Collection<ZipArchiveEntry>entries=Sets.newHashSet(entries.keySet());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.getData());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null,offsetEntry.dataOffset)
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_FOR_FILENAME_LENGTH,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(Zip64_EOCD_CFD_LENGTH,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ZERO_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataFile.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataSource.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataOffset+ze.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ZERO_EOCD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ZERO_EOCD_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<0,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=0,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.getData();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.getDestination();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.getInputFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZIP64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323if(entries!=null){OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323if(ze!=null){OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Collection<ZipArchiveEntry>entries=Sets.newHashSet(offsetEntry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetentry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getDataOffset());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getData());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,ze,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==OffsetEntry.FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==OffsetEntry.OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==OffsetEntry.DATA_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==OffsetEntry.DATA_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==OffsetEntry.FOR_FILENAME_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry,ze.dataOffset<0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZIPUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEnd,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.zip,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(inflater);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry,offsetEntry.dataOffset<0||offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffsets.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetName.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ze,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remaining==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entries.get(ze,offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entriesWithoutUTF8Flag.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entries=offsetEntry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze.getData());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(inflater.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.length<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ZERO_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataOffset,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ze.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(position,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(delete,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.remaining,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(line,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetentry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.zip,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(line,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(entry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ZERO_EOCD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ZERO_DATA_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset+remaining<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.data);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(zipEncoding,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(zipEncoding,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry>=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry>>null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(setEntry!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getTime());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=1,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=1&&offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ZIP64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ZERO_SIG);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=OFFSET_COMPARATOR);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==ze.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZZipUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(zipEncoding,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,offsetEntry.getMethod(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>>ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset>>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=z.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZERO_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.getData());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry,inflater);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zipEncoding,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null||offsetEntry.dataOffset>=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getData());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSetWithoutUTF8Flag();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(archiveName,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entries,ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entries,offsetEntry.dataOffset,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(entry,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetFor_FOR_FILENAME_LENGTH<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetFor_FILENAME_LENGTH<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ZIP64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry,ZERO_DATA_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(lineEnd,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry,ze.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zipEncoding,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=ZERO_DATA_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entriesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries.get(offsetEntry.dataOffset));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zipEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(dataOffset>>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=LFH_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(remaining,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(offsetEntry.zipEnd,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=CFH_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zipEntry,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zip,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.file;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Filef=offsetEntry.dataOffset.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getData());if(offsetEntry!=null){returnoffsetEntry;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.OFFSET_FOR_FILENAME_LENGTH==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.CFD_LOCATOR_OFFSET==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.CFH_SIG==offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset!=null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset!=null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZIPUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEntry.dataOffset-offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(inflater==null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(zipEncoding,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCDL_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zip,offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zip64_EOCDL_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(zipEncoding,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zip.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(remaining-offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(position,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset==null,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zipEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZIPUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(remaining,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(signature,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(zipEncoding,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(inflater,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(line,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(entry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZIPUtil.checkState(offsetEntry.dataOffset==0||offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==offsetEntry.dataOffset,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(OffsetEntry.dataOffset==offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323OffsetEntryoffsetEntry=entries.get(ze.getData());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zipEntry!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset==0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(ceiling,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset<0,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetFor_FOR_FILENAME_LENGTH==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset!=1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset!=1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=1,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(ze.getDataOffset(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(ze.getMethod(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(zip64_EOCDL_LENGTH,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(remaining,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323if(entries!=null){OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(offsetEntry.dataOffset,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(entry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(entry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetHeaderOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset==null||ze.dataOffset!=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(entry,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(offsetEntry.dataOffset,ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetentry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZIPUtil.checkState(offsetEntry.dataOffset<0||offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=offsetEntry.dataOffset?ze.getInputStream():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset<=1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset+remaining.length<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(position+offsetEntry.dataOffset<0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(zip.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(offsetEntry.getMethod(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(remaining+offsetEntry.dataOffset>=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset>=ZERO_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zipEncoding,offsetEntry.deprecated);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.length==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.offset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.inputOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(dataOffset,ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(line,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.inputOffset!=0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry.entry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry.entries.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=offsetEntry.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset,ze.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(zip,offsetEntry.dataOffset==0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=entry.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.data;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=entries.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Fileze=offsetEntry.file;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset>=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset>=null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323if(entries!=null){OffsetEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(lineOffset!=offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCDL_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCDL_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323InputStreaminflater=getInputStream(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entry,ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entriesWithoutUTF8Flag?entries.get(ze):null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entriesWithoutUTF8Flag?entriesWithoutUTF8Flag:ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entriesWithoutUTF8Flag?entriesWithoutUTF8Flag:ze.get(entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Entry<ZipArchiveEntry>entry=entriesWithoutUTF8Flag?entriesWithoutUTF8Flag:ze.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(line,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(line.dataOffset>>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(ze.dataOffset>>0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offsetEntry.dataOffset,ze.getDataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkRequestedFeatures(offset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Set<ZipArchiveEntry>entries=Sets.newHashSet(entries);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkPermission(pollEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(entry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkInvalidZip(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(offsetEntry.dataOffset,offsetEntry.remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(zip64_EOCDL_LOCATOR_OFFSET,ze.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDummy(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkState(offsetEntry.dataOffset!=ZIP64_EOCDL_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCDL_FOR_FILENAME_LENGTH,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(zip64_EOCDL_LENGTH,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323Mapentries=Sets.newHashSet(entries.keySet());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java323ZipUtil.checkDeprecated(ceilingOffset,offsetEntry.dataOffset);
