projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(options.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=entries.get(ze);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entries.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),null){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsets.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry,ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+')'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),end){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.next()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entryMap();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(type.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getLength(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getLength()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=entries.get(0);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=entries.get(offsetEntry);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalEntry<K,V>entry=entries.get(ze);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=entries.get(start);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=offsetEntry.getValue();if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,bis.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getCompressedSize()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getCompressedSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getRemaining()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,offset.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,start.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,z.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(dataOffset.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getCompressedSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getRequestedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getCompressedSize()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getLowerCase()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getCompressedSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(0);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327ZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,bis.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()-start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(offsetEntry.dataOffset!=null){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset);caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(offsetEntry.dataOffset,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.entriesWithoutUTF8Flag.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=newHashMap();returnentriesWithoutUTF8Flag.entrySet();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entrySet.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.getEntrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=ze.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getStart()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getEnd()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,bis.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,offset.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.next(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getValue()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.nextToken()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getKey()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getName()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()&&offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()||offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()&&offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()/|offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset-start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(obj.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entries.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset,ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(dataOffset.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(pos.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,bis.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,start.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,bis.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,start,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,bis.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(offsetEntry.dataOffset,ze.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(end,ze.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.cloneTree();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.toArray();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.entryMap();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.clone();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+';',bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()/';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+':'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()*';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()).append(';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+','){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327ZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry!=null){finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(0);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=ze.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()/1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()).startsWith("Archive"){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()).returnNull();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(z.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,entry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(end,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(zipEnd,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(line,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze,bis);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(0);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327OffsetEntryoffsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(remaining.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(offsetEntry.dataOffset!=null){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset);caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalInputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(offsetEntry.dataOffset!=null){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());}else{caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(z.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(options.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.keySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entryCount.keySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.dataSet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()&&offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),start||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()/||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(obj.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entries.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry,bis.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),bis.length()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(frame.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),null){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod(),null){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entries.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entrys.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()+1,bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataLength(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),bis),this){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataLength(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(dataOffset.dataOffset(),offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getValue(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()-1,dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(obj.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.keySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getValue();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),start,bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),start,remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),main){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),rest){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),end){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getCompressedSize()),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()),bis,false){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize()),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod())){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(pos.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getCompressedSize());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(offsetEntry.dataOffset,ze.getCompressedSize());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset);returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getSize());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreamab=newBoundedInputStream(start,offsetEntry.getCompressedSize());returnab;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getRequestedSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getCompressedSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getLowerBound(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.dataOffset(),offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),main){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),remainder){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),rest){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()&&ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset()||offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||dataOffset.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(dataOffset.dataOffset()||offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod()||offsetEntry.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()&&ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod()||ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod()||ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getMethod()||ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getMethod()||offsetEntry.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry!=null){finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327ZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,offsetEntry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,bis.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod()||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()&&ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod()||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod()||ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis,false){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),null){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis,1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis,0){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset,ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(offsetEntry.dataOffset!=null){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset);caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalInputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(offsetEntry.dataOffset,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(zip);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),ze){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),bis,false){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset().getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize()||ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize()||offsetEntry.dataOffset<0){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(remaining.dataOffset(),offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(remaining.dataOffset(),offsetEntry){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()-1,remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()+1,remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()/')'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+')',bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()*')'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+')'||offsetEntry.getMethod()==';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),end){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod(),end){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=offsetEntry.getEntry(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start,bis);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(offsetEntry);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entryWithoutUTF8Flag.getEntry(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entryWithoutUTF8Flag.getEntry(start,bis);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start,bis);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(offsetEntry.dataOffset);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(offsetEntry);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(limit);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>offsetEntry=entries.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=ze.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getRequestedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,offsetEntry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327SetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()),bis,zipEncoding){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(remaining,offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327toggle(offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset()-start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getMethod()>=ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getMethod()==ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()+';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||!offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()||ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||z.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(remaining,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(options,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize()-start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(start>=0){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(start>=0){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();}else{returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>entry=entry.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffsets.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize()+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis),false){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis),this){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(version.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()||ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||z.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||ze.getDataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(date);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,offset.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=offsetEntry.get(ze);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(offsetEntry!=null){finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(zip);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry!=null){finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=ze.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(zipEncoding,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start-1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start-start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(start>=0){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(date);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(zip);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(start>=0){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(start<0){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize()+1);caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset+CFH_SIG){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset+start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(version.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.enext()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.ext()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.trim()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(pos.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=ze.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry!=null){finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.size();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ZERO.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(remainingOffset(),offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(offsetEntry.dataOffset);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),bis),false){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()-1,bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),end){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||bis.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||start.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start);returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalInputStreambis=newBoundedInputStream(start,ze.getCompressedSize());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.length(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()).startsWith(';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()).append(';');
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getName(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getData(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(offsetEntry!=null){finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(zip);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntryMap();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start,bis);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod()||ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,offsetEntry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()-1,start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),start+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize()||ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ce.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>entry=entries.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327ZipArchiveEntryoffsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.clone();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.size();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327SetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()+';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(start<0){InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize()-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getDataSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.toArray();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalInputStreambis=newBoundedInputStream(start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.toArray(newHashMap());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>entry=entries.get(start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),bis.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),bis.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()).startsWith("ZipArchiveEntry.STORED"){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()),ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()).startsWith("ZipArchiveEntry.SIG")){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset,start.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entries.getMethod()||ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.zip(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getSize(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(offset);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,start.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(z.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(optionsWithoutUTF8Flag){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize()-1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize(),null){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getName(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start,offsetEntry.dataOffset);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start,start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start,ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry.getValue()!=null){finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ceilingEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.pop();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),ze){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()),ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getCompressedSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.next()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.next()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.separator()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.zip()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()+')'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()+')'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize()+1);returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry,start.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.remainderOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<ZipArchiveEntry>entry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze)-1;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset()||ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.dataOffset()||offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entries!=null){finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry!=null){finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entries!=null){finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}else{returnbis;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry!=null){finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}else{returnbis;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getDataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()||ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=offsetEntry.getEntry();if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset+ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,offsetEntry.dataOffset.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327ZipArchiveEntryoffsetEntry=entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327if(entry.getValue()!=null){finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
