projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(options.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.FOR_FILENAME_LENGTH:bis.addDummy();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327InputStreambis=newBoundedInputStream(start,ze.getCompressedSize());caseZipArchiveEntry.BYTE_SHIFT:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Entry<K,V>entry=entries.get(ze);if(entry!=null){returnnewBoundedInputStream(start,entry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(start,offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,ze.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offset.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entries.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(entry.getMethod(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),null){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||offsetEntry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsets.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),remaining){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),dataOffset){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset()||ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry,ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start,offsetEntry.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+')'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(offsetEntry.getMethod()+';'){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getMethod()||ze.getMethod()<ZipArchiveEntry.METHOD){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(start.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),start){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getMethod(),end){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.getLength()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.dataOffset,ze.getCompressedSize()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(offsetEntry.next()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewBoundedInputStream(start,offsetEntry.getCompressedSize());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);returnnewZipArchiveEntry(offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalZipArchiveEntryoffsetEntry=entries.get(start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(ze.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327Switch(entry.getMethod()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entryMap();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntry(start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(zip.dataOffset()){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize()-1){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(ze.getCompressedSize(),bis){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java327switch(type.getMethod()){
