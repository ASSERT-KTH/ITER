projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=localExtraData.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=localExtraData.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+"n";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=localExtraData.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(name,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(fileName,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLen+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.remove(ze.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLen+=SHORT;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=localExtraData.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=noUTF8Flag.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getLocalFileName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getClass().getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.title);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(z,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Characterencoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Nameorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=se.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.ToString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar(name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar(false);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getQualifiedName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toLowerCase();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offset.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archives.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.localExtraData.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=data.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=z.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName()+ZERO;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getClass().getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entry.getClass().getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833AssertionFailedError.println("UnicodeExtraFields:"+ze.getClass().getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getClass().getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833FilefileName=entriesWithoutUTF8Flag.getClass().getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerName(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byte[]orig=ze.toString();Stringorig=ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byte[]orig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+File.separatorChar+ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncodingUtil.getOwnerName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFile().toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive,ze.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.readFully(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFile().getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entryEntriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=this.entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerFile()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separatorChar.getOwnerFile()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFile()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();}elseif(!orig.equals(ze.getName())){nameMap.remove(ze.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),nc);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Nameorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Nameorig=entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Nameorig=entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Nameorig=this.entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileorig=ze.toString();Nameorig=orig.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getLocalFileName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833FilefileName=entriesWithoutUTF8Flag.getLocalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getLocalFileName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getLocalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entry.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833AssertionFailedError.println("UnicodeExtraFields:"+ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833AssertionFailedError.println("UnicodeExtraFields:"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getImmediateParent(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separatorChar.getOriginalFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar(fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEntriesWithoutUTF8Flag.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOriginalFileName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFile(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalPath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFile(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,ze.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getImmediateParent(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.fileName.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entry.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getKey());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+ze.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,z.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(nc,ze.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,enc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entryEntriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,ze.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offset.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileNameLen.getOriginalName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+UTF_8_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+fileNameLen,extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFile(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFile().toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();System.err.println("UnicodeExtraFields:"+orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),fileNameLen+SHORT);fileNameLen+=
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),null);fileNameLen+=SHORT;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byte[]orig=ze.toString();Stringorig=ze.ToString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Stringorig=ze.ToString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byte[]orig=ze.toString();Stringorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=se.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+File.separatorChar+se.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileNameLen.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byte[]orig=ze.toString();Stringorig=ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Stringorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Stringorig=ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileorig=ze.toString();Stringorig=ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833char[]orig=ze.toString();Stringorig=orig.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,-1);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,0);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileName);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,name);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,b);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,0);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;}elseif(!orig.equals(ze.getName())){nameMap.remove(ze.getName());nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;}elseif(!entryEncoding.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;}elseif(!entriesWithoutUTF8Flag.containsKey(ze)){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;}elseif(!orig.equals(ze.getName())){nameMap.remove(ze.getName());nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength!=0){Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();Stringorig=ze.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength!=0){Stringorig=ze.toString();Stringorig=ze.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength!=0){Stringorig=ze.toString();Stringorig=ze.toString();}elseif(!orig.equals(ze.getName())){fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833fileNameLen+=LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833fileNameLen+=lenToSkip;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getName();Stringorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileNameLen+ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archiveName.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName,ze.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentenum=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentbc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833AssertionFailedErrore=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentb=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833nameMap.put(ze.getName(),ze);return;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze,offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archiveName.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName,ze.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Characterencoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();characterEncoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833encoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Characterencoding=ze.toCharacterEncoding();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archiveName.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getQualifiedName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zEncoding.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=entriesWithoutUTF8Flag.get(ze)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=noUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=entriesWithoutUTF8Flag.get(ze,offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.localExtraData.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=cdExtraData.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=data.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);Stringorig=nc.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator.getOriginalName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()*File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.SEPARATOR;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.title);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=this.entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=filesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=namesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze,name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze).toLowerCase();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separatorChar.getOwnerFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar(fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar(name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEntriesWithoutUTF8Flag.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getImmediateName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator.getOwnerFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()*File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.pathSeparator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+"_";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+"/";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+"";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+".";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+":";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+",";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toUpperCase();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString()+":"+entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString()+"_"+entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString()+"_"+ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=ze.get(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze,0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFileName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFileName(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archive.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwner(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.localExtraData.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=cdExtraData.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=z.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entryEntriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar(name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar(false);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(ze)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(ze,offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(0));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833FilefileName=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.fileName.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze+1);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,zip64EocdOffset);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze,zip64EocdOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator.getOriginalFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()*File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar(name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar(false);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();}elseif(!orig.equals(ze.getName())){nameMap.remove(ze.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName()+';';
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName()+File.separatorChar;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive,ze.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byte[]orig=ze.toString();Stringorig=z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+File.separatorChar+z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+orig.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.fileName.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toUpperCase();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getKey();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()*File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=zipEncoding.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOriginalFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileNameLen.getOriginalFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=filesWithoutUTF8Flag.getOriginalFileName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+fileNameLen,extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.localExtraData.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=cdExtraData.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=hasUTF8Flag.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archives.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOwnerFileName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entryWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entriesWithoutUTF7Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entriesWithoutUTF-8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=filesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entriesWithoutUTF8)Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Characterorig=entriesWithoutUTF8Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entriesWithoutUTF9Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833AssertionFailedErrort=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=nc.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getQualifiedName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getQualifiedName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getQualifiedName(),name;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOriginalName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getOwnerFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileNameLen.getOwnerFileName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+fileNameLen,extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()||!entriesWithoutUTF8Flag.containsKey(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()||!entriesWithoutUTF8Flag.containsKey(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()||!entriesWithoutUTF8Flag.containsKey(ze.toString()));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()||!entriesWithoutUTF8Flag.containsKey(ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=fileName.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator.getQualifiedName()+ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()*File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFile().getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFile().toUpperCase();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze),ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileName);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+File.separator;System.err.println("UnicodeExtraFields:"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+fileNameLen;System.err.println("UnicodeExtraFields:"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:n"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toURI();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);ZipUtil.setNameAndCommentFromExtraFields(nc,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,dummyByte.name,dummyByte.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+LAST_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+CFD_LOCATOR_OFFSET;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(extraFieldLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+filesWithoutUTF8Flag.get(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=filesWithoutUTF8Flag.getOriginalFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOriginalFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+LAST_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+CFD_LOCATOR_OFFSET;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerFileName()+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName(fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName(name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar+LAST_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.get(ze,hasUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entryEncoding.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=data.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ZE.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Characterencoding=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Nameorig=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+2;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;byteorig=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;charorig=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=ze.toString()+1;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOwnerFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOwnerFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName()+ZERO;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze+1);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,zip64EocdOffset);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.toString();Stringorig=entriesWithoutUTF6Flag.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze,hasUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.keySet().get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.get(ze,noUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offset.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.offsetEntry.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833StringorigLength=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();fileNameLen+=extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(!entriesWithoutUTF8Flag.containsKey(ze)){orig=ze.toString();orig=ze.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(!entriesWithoutUTF8Flag.containsKey(ze)){Stringorig=ze.toString();Stringorig=ze.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(!entriesWithoutUTF8Flag.containsKey(ze)){Stringorig=ze.toString();Stringorig=ze.toString());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(!entriesWithoutUTF8Flag.containsKey(ze)){orig=ze.toString();orig=ze.toString());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+LAST_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+CFD_LOCATOR_OFFSET;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+FH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();Stringorig=ze.toString();}else{nameMap.put(ze.getName(),orig);fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();Stringorig=ze.toString();}else{nameMap.put(ze.getName(),ze);fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();Stringorig=ze.toString();}else{nameMap.put(ze.getName(),fileNameLength+SHORT);fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Stringorig=se.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Booleanorig=se.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=namesWithoutUTF8Flag.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOriginalName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.Separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getOriginalName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getImmediateKey();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toUpperCase();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entryEncoding.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze)){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileorig=ze.toString();Nameorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Nameorig=archive.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFile(),fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerName()+ZERO;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getImmediatePosition();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.get(ze,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=entriesWithoutUTF8Flag.get(ze,hasUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!archiveName.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!archiveName.equals(ze.getName())){nameMap.remove(ze.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!archiveName.equals(ze)){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!archiveName.equals(ze.getName())){nameMap.remove(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!archiveName.equals(ze)){nameMap.remove(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!archiveName.equals(ze.getName())){nameMap.put(ze.getName(),fileName);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offset.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZERO.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getName()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Stringorig=z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);ZipUtil.setNameAndCommentFromExtraFields(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=filesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar+LAST_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833fileNameLen+=extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze+1);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,nc.name,nc.fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFileName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+".js";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+".name";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+"/no-data";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+filesWithoutUTF8Flag.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=filesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+FH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833charorig=ze.toString();Characterencoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Characterencoding=zipEncoding.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanorig=ze.toString();Characterencoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byteorig=ze.toString();Characterencoding=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getClass().getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.substring(0,1).toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offset.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+LAST_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,hasUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offset.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName()+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName()+ZERO_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName()+File.separatorChar+entriesWithoutUTF8Flag;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getImmediateHeader();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getImmediateParent(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archives.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=offsetEntry.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getKey();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanskipped=ze.toString();Stringorig=ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entry.getOwnerName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.Separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=name.getOwnerName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+File.separatorChar+EXTERN_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toOtherString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,localExtraData.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLen>0){Stringorig=ze.toString();orig=orig.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLen>0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLen+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLen>0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLen+=lenToSki
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLen>0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLen+=len
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLen>0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLen+=
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.toString();Stringorig=archive.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getImmediateParent(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entriesWithoutUTF8Flag.getImmediateParent(),ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ce,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFile()+File.separatorChar+entryEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentcomment=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Fileorig=ze.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+1;Stringorig=dest.toString()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getQualifiedName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(len,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.SEPARATOR;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(ze));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.toString()!=null){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(ze));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().length()==0){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get(ze));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.archiveName.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString()+":"+entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entryEncoding.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getImplicitSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()||ze.toString().equals(extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toFormatter().toFormatter().toFormatter();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toFormatter().toFormatter().toFormatter().toFormatter();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byteorig=ze.toString();Stringorig=ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanorig=ze.toString();Stringorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanorig=ze.toString();Stringorig=ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+":"+ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+":"+ze.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.entrySet().get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.values().get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Entryentry=entriesWithoutUTF8Flag.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=z.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOwnerName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(e,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=files.getOwnerFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator+ze.getOwnerFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH+SHORT+S
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archiveName.toString();Stringorig=archiveName.toString();if(!orig.equals(ze.getName())){nameMap.remove(ze.getName());fileNameLen+=LH_OFFSET_FOR_FILENAME_LENGTH;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.toString(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=data.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byteorig=ze.toString();Stringorig=z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanorig=ze.toString();Stringorig=z.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=z.getQualifiedName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entryEncoding.getOriginalFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,cfh);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze),ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze),ZipUtil.setNameAndCommentFromExtraFields(nc.name,ze,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);fileNameLen+=extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=files.getQualifiedName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator+ze.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=files.getOriginalName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.entries.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLength+=lenToSki
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();orig=orig.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();orig=orig.toString();}elseif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);fileNameLength+=len
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(fileNameLength==0){Stringorig=ze.toString();orig=orig.toString();}else{nameMap.put(ze.getName(),ze);fileNameLength+=lenToSkip;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getValue());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getValue());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();}else{nameMap.put(ze.getName(),orig);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalFileName()+File.separatorChar+entryEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalFile(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ZipEncoding.getQualifiedName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+entryEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+File.separatorChar+EXTERN_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.readFully(fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOwnerFileName()+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);Stringorig=nc.name.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);Stringorig=nc.orig.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byteorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.getOwnerName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.fileName.getOwner();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString();Preconditions.checkState(orig.toString());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=archive.getOriginalName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.readFully(archive.getOwnerFile());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+ze.toString());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.toString()!=null){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+ze.toString());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getQualifiedName()+",filename";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getImmediateParentPointer();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentze=entriesWithoutUTF8Flag.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=File.separator+ze.getOriginalFileName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=files.getOriginalFileName()+File.separator;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.ToString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Objectorig=ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getLocalFileName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getLocalFileName()!=null){Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getLocalFileName()!=null){Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.get
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getLocalFileName()!=null){Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8F
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerName()+File.separatorChar+entryEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze,archive.getImmediateParent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze!=null){Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.toString()!=null){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze!=null){Stringorig=ze.toString();Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,cfh);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze),ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen);ZipUtil.setNameAndCommentFromExtraFields(entriesWithoutUTF8Flag,ze,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=this.zipEncoding.getOwnerFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entriesWithoutUTF8Flag.getClass().getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833if(ze.getName().equals("")){Stringorig=ze.toString();System.err.println("UnicodeExtraFields:"+entryWithoutUTF8Flag.getClass().getName());}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.values().get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833NoUTF8Flagze=entriesWithoutUTF8Flag.keySet().get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOriginalName()+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833byteorig=ze.toString();Stringorig=ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833booleanorig=ze.toString();Stringorig=ZE.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.keySet().getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=z.getOriginalName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=entriesWithoutUTF8Flag.getOwnerName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=getUnicodeExtraFields().toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.toString()+se.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Stringorig=ze.getOwnerFileName()+File.separatorChar+entryEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java833Fileze=entriesWithoutUTF8Flag.get(ze,lenToSkip);
