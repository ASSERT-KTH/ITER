projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.clone();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(line,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(zipArchiveEntry.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSTORED();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(zipArchiveEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstr.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.deleteDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.deleteDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteShortDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.delete();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteZeroDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteZipDirectory();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(offsetEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(offsetEntry.stored);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(offsetEntry.storED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(zipArchiveEntry.DEFLATED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(OffsetEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getOutputStream(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getRequestedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getMethod()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getRemaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ZipArchiveEntry.STORED);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getReferenceName(),name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,ze.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,zipEncoding.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,encoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,encoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,encoding.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,zip.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(bis.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(adj.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),remaining,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),rest,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:entry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),start,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),remaining,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toInputStream(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toInputStream(offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toBoundedInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toFileInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toInputStream()&&bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(entry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,offsetEntry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(date,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnmainEntry.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneByte()?null:bis.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneByte()?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneByte(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.cloneTree();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getEntrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.toArray();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.clone();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSTORED(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipDirectory(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?ZipEncoding.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.dataOffset,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.dataOffset())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ZipArchiveEntry.STORED);if(offsetEntry!=null){return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);if(offsetEntry!=null){return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.dataOffset,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,start.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.dataOffset())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_STORED,ze.getMethod())?ZIP64_EOCD_CFD_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_STORED,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCD_STORED,ze.getMethod())?ZIP64_EOCD_CFD_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_STORED,ze.getMethod())?ZIP64_EOCD_FOR_FILENAME_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_STORED,start,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnmainEntry.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,zip.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,zipEncoding.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze,bis.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ZipArchiveEntry.STORED);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.removeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.removeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeDummy()?null:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipFile,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCDL_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCD_CFD_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCDL_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCD_CFD_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCD_CFD_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:offsetEntry;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getOutputStream(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getRequestedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getMethod(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getCompressedSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getCompressedSize()-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSet<ZipArchiveEntry>entriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalListentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,bis.getMethod(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),zipSize,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),zipEncoding,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDirectory(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getStart(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getDummy(),bis.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getMethod()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset+ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.dataOffset:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.storED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addDummy()?bis.addDummy():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.STORED:newZipArchiveEntry(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.STORED:newZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.clone();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSet<ZipArchiveEntry>entriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ZERO_SIZE,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,offsetEntry.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getRemaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getSTORED();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getContent();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset(),start,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip,offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset(),dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset(),start,dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getCompressedSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,offsetEntry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(offsetEntry,bis.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addZipArchiveEntry(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(z,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(zero,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryentry=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=getEntrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=newHashMap();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getOutputStream(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getMethod()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getRemaining());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntrySize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329Returnze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329Returnentry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ZipArchiveEntry.STORED);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.dataOffset():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addDummy()?bis.stored():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.stored()?offsetEntry.addDummy():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored():newZipArchiveEntry(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored():newZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),null,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),bis,null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getMethod(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,null,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),0,null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+":"+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+":"+ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+"n";
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+":"+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store()?null:bis.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store(offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,offsetEntry.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?start:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()-bis.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-offsetEntry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnZERO.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnz.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+bis.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()/ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()*ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()-bis.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()-offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.getSize()-bis.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset-bis.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset()-bis.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.remaining()-bis.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.dataOffset,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSet<ZipArchiveEntry>entriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryentry=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,zipEncoding.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,offsetEntry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),start,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getRemaining())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(date,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,file.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,archiveName,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),archiveName,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,archiveName,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze,archiveName,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.clone();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getRemaining());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ZERO_SIZE,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnimmutable.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(offsetEntry,bis.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(z,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addZipArchiveEntry(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(zero,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(adj,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+bis.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()/ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()+offsetEntry.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()*ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,ze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getSize()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,offsetEntry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getStart();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offset,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip,offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis,offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset,start,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.addZipArchiveEntry(bis.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),bis,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),offsetEntry.dataOffset,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getCompressedSize(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ZERO_SIZE,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ZERO_SIG,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.setZero(ZeroArchiveEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ZipArchiveEntry.STORED);if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entry.getValue();if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offset,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),zipEncoding,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),ZIP64_EOCD_FOR_FILENAME_LENGTH,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),ZIP64_EOCDL_LENGTH,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?null:ze.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:ze.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addZipArchiveEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(entry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,offsetEntry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getValue()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneFilePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.clonePath()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.clonePath(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue()/1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue()*2-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue()*1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSet<ZipArchiveEntry>entriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalSetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=newHashMap();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryentryWithoutUTF8Flag=entriesWithoutUTF8Flag.getValue();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entryWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip,offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(0);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entry.getValue();returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addDelegate();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addStandardDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addShortDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addStdDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.array(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.array(),offsetEntry.dataOffset();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.array(),offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.array(),start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(ze,start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(ze+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(0);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.dataOffset,start,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,start,bis.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip.dataOffset,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getCompressedSize(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize(),bis.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize(),ze.getMethod()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(entry.getMethod(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnmainEntry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.cloneFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.cloneFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneFile(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneFile(),offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,bis.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,ze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataInputStream.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDirectory(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getStart(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInput(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(offsetEntry.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(ZipArchiveEntry.STORED);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(zip.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(zipFile.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(zipEnd.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(entry.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getValue()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getKey();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()/1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()*2-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet(),start;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet(),start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet(),bis;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.getKey();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.storeDirectory();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.storeShortDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ZipArchiveEntry.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,zipEncoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LENGTH,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCDL_LENGTH,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCDL_LENGTH,ze.getMethod())?ZIP64_EOCD_CFD_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.remaining()?null:bis.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnremaining.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.remaining()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,offsetEntry.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.remaining()-offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,ze.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.stored();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(date,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?ZIP64_EOCD_FOR_FILENAME_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:ze;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,offsetEntry.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:entry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getSize()-bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-start+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-start,offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze,start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze.getName());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.clone();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,ze.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.clone();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchives.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.cloneFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,offset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,start.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod(),remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(0);if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ZipArchiveEntry.STORED);if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getSize());if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,start.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getCompressedSize(),start.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,offsetEntry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getRequestedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getInputStream()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDirectory(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getStart(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getDummy(),bis.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze,start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze,0);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(zip);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze+1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze,dataOffset);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze,1);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=newHashMap();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=offsetEntry.dataOffset;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ZipArchiveEntry.STORED;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=getOutputFlag(ZipArchiveEntry.STORED);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze.getEntryCount();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=getOutputFlag(ZipArchiveEntry.STORED,start);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=getOutputFlags();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getDirectory();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+2;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),start,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getInputStream(),bis.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET(),offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(bis.dataOffset(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_FOR_FILENAME_LENGTH,offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_LOCATOR_OFFSET(),offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,z.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_FOR_FILENAME_LENGTH,offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,bis.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.removeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryentryWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entryWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalListentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze.getOutputFileFlag;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=dataOffset;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ZERO;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.toInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.toInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.toInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(zip);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze.getEntryCount());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnmainEntry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:ZERO;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:zipEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize()-bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entriesWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.toArray();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart+ze.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+dev.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(dereference,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entryCount);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipFile,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(ZipArchiveEntry.STORED.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(archiveName.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(zipEncoding.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.addZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addSTORED();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(offsetEntry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(offsetEntry.data);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getInputStream(),bis.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+dev.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize()+abs.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getSize());if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getData());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset+start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset+start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(zipArchiveEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(zipArchiveEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,offsetEntry.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnBis.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,bis.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteZipArchiveEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteDirectory();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.deleteDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(Zip64_EOCD_STORED,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LENGTH,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.addZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(archive);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.getSize()-bis.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getSize()-offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addDirectory();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addBackground();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addBackward();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.addZipArchiveEntry(offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addZipArchiveEntry(offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?start:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.stored()?bis.addDummy():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored():archive;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getCompressedSize(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getDummy(),bis.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getData(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getRequestedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryentryWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entryWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.toArray();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),start,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start)?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnz.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getReferenceName(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.dataOffset,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getInput();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ZERO_SIZE,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,start.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.addZipArchiveEntry(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addZipArchiveEntry(dereference,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entryWithoutUTF8Flag.keySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entriesWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutOUTUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnjusqu.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(ze.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(zip);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start)?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()&&ze.getMethod()==ZipArchiveEntry.STORED;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()&&ze.getMethod()!=ZipArchiveEntry.STORED;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()&&ze.getMethod()==ZipArchiveEntry.DEFLATED;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()&&ze.getMethod()!=ZipArchiveEntry.DEFLATED;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),end,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getName(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getCompressedSize(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.values();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entriesWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag,0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getInputStream(),bis.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getInternal();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnz.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.toDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstr.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize(),encoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,zipEncoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?null:zipEncoding;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getName())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getReferenceName())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSTORED(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getData(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstr.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getData(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addDummy()?bis.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.STORED:newZipArchiveEntry(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.STORED:newZipArchiveEntry(start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.arrayOffset(),offsetEntry.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.cloneFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getRemainder();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store(archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_FOR_FILENAME_LENGTH,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LENGTH,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),start,remaining);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_FOR_FILENAME_LENGTH,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LOCATOR,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.toDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.addSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize(offsetEntry.dataOffset());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipFile,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:ZERO;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnabs.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getRemainderSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod())?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entriesWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329intentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329SetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag,entryCount);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,bis.array());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.array(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.array());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.array());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),ZIP64_EOCDL_LOCATOR_OFFSET,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),bis,zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),ZIP64_EOCD_CFD_LOCATOR_OFFSET,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.detachDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.get(ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entries.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entries.get(ze.getInputStream());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getRemoteEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zipFile.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,zipEncoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipFile,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding.getName(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getTime(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entry.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getZip();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entries.get(ze.getDummy());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entries.get(ze.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,entry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?this:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addZeroDirectory();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addDummy()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addDummy(start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getData());if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),ZIP64_EOCDL_LENGTH,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),ZIP64_EOCDL_LOCATOR_OFFSET,bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze)+ZipArchiveEntry.STORED;if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored():newZipArchiveEntry(start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod())?zipEnd:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329SetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ListentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329intentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,start,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCDL_LENGTH,offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?initializeZipArchiveEntry(start,ze.getMethod()):null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?getInputStream(start,ze.getMethod()):null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneFileInfo();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,z,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipName,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize()-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_FOR_FILENAME_LENGTH,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getCompressedSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze)-1;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getSize());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze.getId());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze.getEntryName());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet(),bis);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329SetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329intentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ListentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,z.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,start.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipFile,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getData());if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getCompressedSize()-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummyByte(zip);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipFile,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalListentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet(),start;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.remaining(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getIntermediateSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getReal();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entriesWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,bis.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?null:ZERO;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entryWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329SetentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ListentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,entry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze.getOutputFile();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=newHashMap<String,Object>();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=ze.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(ZipArchiveEntry.STORED,ze.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.clone();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.arrayOffset(start,offsetEntry.cloneTree());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipStart,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipSize,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returninputStream.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.cloneTree());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getCompressedSize()+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze,entries.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toPath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze,offsetEntry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze)-1;if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,entry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstart+ze.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,name,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,bis.getMethod())?ZipEncoding.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(ZeroArchiveEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(zip64_EOCDL_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(zipArchiveEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(zipArchiveEntry.stored);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero(zipArchiveEntry.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(zipArchiveEntry.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(ze.getZipArchiveEntry());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(zipArchiveEntry.STORED,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entriesWithoutUTF8Flag!=null){finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329intentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(zip64_EOCDL_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(zip64_EOCD_CFD_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(zip64_EOCDL_LOCATOR_OFFSET);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze.getData());if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.dataOffset,bis.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneTreePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-ze.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.dataOffset()-offsetEntry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entry.getMethod()==ZipArchiveEntry.STORED){finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329if(entries!=null){finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getValue());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.getValue(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),zipEncoding,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),ZIP64_EOCDL_LENGTH,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),ZIP64_EOCDL_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize(offsetEntry.dataOffset,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize(offsetEntry.dataOffset)+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentries.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offset,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),bis,zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),bis,0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeDummy(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ZipArchiveEntry.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod(),zipEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getIntermediateSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze,entries.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getZipSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(zip64_EOCDL_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,end,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,z,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?zip64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString()+"-"+ze.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,encoding.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,ze.getMethod(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,ze.getMethod(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),zipEncoding,null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getName(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCDL_LOCATOR_OFFSET,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip64_EOCD_CFD_LOCATOR_OFFSET,ze.getCompressedSize());
