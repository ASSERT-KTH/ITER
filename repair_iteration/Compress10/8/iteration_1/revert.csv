projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.clone();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(line,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getDummy(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipEncoding.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,archiveName,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,entry.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getInputStream(),ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getOutputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toString();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getValue()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.storeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.remaining();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.store();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry==null){returnnull;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329ze.setMethod(zipArchiveEntry.getMethod());break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryze=(ZipArchiveEntry)entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry();}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag;break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()+ze.getCompressedSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-offsetEntry.dataOffset;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()+ze.getMethod();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?null:bis.addDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummyByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy(),offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset,start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?zipEncoding:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCD_STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnze.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.clonePath();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneByte();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.cloneFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,offsetEntry.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getCompressedSize(),bis);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getReferenceName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod(),null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSTORED();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZip(zipArchiveEntry.STORED);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.array();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);returnnewZipArchiveEntry(offsetEntry.dataOffset,offsetEntry.dataOffset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){returnnewZipArchiveEntry(start,offsetEntry.dataOffset);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalZipArchiveEntryoffsetEntry=entries.get(ze);if(offsetEntry!=null){return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipArchiveEntry(offsetEntry.dataOffset(),start);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnoffsetEntry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.toInputStream();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,ze.getMethod())?null:start;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.removeDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnab.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnstr.getValue();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEnd,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCDL_LENGTH:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnentry.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnarchive.cloneTree();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,name,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,encoding.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addDummy()?offsetEntry.stored():null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();break;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.keySet();returnnewZipArchiveEntry(entryWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(entriesWithoutUTF8Flag,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329finalMapentriesWithoutUTF8Flag=entriesWithoutUTF8Flag.entrySet();returnnewZipArchiveEntry(start,entriesWithoutUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZIP64_EOCDL_LOCATOR_OFFSET:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(start,ze.getMethod())?ZipArchiveEntry.STORED:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ze,start.getMethod())?bis:null;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZipFile();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addZero();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.addSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(offsetEntry.dataOffset,ze.getCompressedSize());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zip,start,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(ZipArchiveEntry.STORED,ze.getMethod());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(zipEncoding,start,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnnewZipArchiveEntry(z,ze.getMethod())?null:bis;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.deleteDummy();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize()-ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis,ze.getSize();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java329returnbis.getSize(),ze.getMethod());
