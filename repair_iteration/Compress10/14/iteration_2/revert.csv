projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),OPEN_EOCD_SIZE);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(name,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(nc.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEntriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze,orig.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);localExtraData.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),cfh);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ZERO);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),t);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!orig.equals(ze.getName()));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(localExtraData));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentze=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentze=entriesWithoutUTF8Flag.get(orig);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentze=entriesWithoutUTF8Flag.get(offset);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentze=entriesWithoutUTF8Flag.get(offset);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentze=entriesWithoutUTF8Flag.get(ce);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),MIN_EOCD_SIZE);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),NEGATING_EOCD_SIZE);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,archiveName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentze=namesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.remove(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipEncoding.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.fileName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),orig);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.fileName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);setLocalFileHeaderData(entry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.fileName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entryEntriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=noUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entriesWithoutUTF8Flag.get(entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entriesWithoutUTF8Flag.get(Orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldL
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig==null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig==null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldL
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraField
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)/1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)+2;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)-1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig)+1;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)+1L;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze)+3;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),nc);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(orig);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838Fileze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}If(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!Orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}for(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.title);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.sourceName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.filename);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838identifiers.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleMissingName(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze).getName();
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);nameMap.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!orig.equals(ze.getName()),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,!orig.equals(ze.getName()));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!orig.equals(nc.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!orig.equals(ze.getName()+1));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!Orig.equals(orig,ze.getName()));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!orig.equals(ze.getName()),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{thrownewIllegalArgumentException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentenc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(name,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(name,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.filename,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.fileName,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.fileName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.orig,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.title,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,nc.fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,localExtraData);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,nameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ce);nameMap.put(ze.getName(),newZipArchiveEntry(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze=entriesWithoutUTF8Flag.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.remove(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);}else{
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);}else{thrownewIllegalArgumentException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,nc.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(nc.name,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(z.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));AssertionFailedErrort=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NodeAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));t=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);t=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.name,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.fileName,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.comment,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.title,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.sourceName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.orig,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,offset));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset,orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig),offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),MIN_EOCD_SIZE);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),MIN_EOCD_SIZE,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,MIN_EOCD_SIZE);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),nc);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838setLocalFileHeaderData(entry.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{entry=entriesWithoutUTF8Flag.get(entry);setLocalFileHeaderData(entry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{setLocalFileHeaderData(entry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),entry);}else{setLocalFileHeaderData(entry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,orig+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName()+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEntriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),ze,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,nc,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,nc,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);nameMap.put(orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(localExtraData);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(localExtraData,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig,offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(fileNameLen,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig,offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(localExtraData);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(orig);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+orig+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,fileNameLen,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,orig,entryEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,encoding,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.remove(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.remove(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.remove(ze);}else{thrownewIllegalArgumentException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.remove(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.remove(ze);}else{thrownewIllegalArgumentException("");}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838t=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);}else{
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entryEntriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=noUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=this.entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entriesWithoutUTF8Flag.get(ze+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(Orig.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(Orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(org));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleMissingName(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncompressedSize(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838announceLocalFileHeader(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.throwAsUnexpectedException("");
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.throwAsUncompressedSize(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig==null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldL
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}If(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);nameMap.put(orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);localExtraData.put(orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig.name,nc.orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig.name,nc.description);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(orig,entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(orig.getName(),entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(nc,ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc);NameAndCommentze=entriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));z=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));ze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));Filez=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,archiveName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,orig,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,orig,null);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,fileNameLen,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset));NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(ze));NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,orig.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.filename);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.sourceName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.title);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.url);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entryEntriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(offset+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);ZipUtil.setNameAndCommentFromExtraFields(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);nameMap.remove(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);nameMap.add(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);nameMap.get(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.add(nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEntriesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=noUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=namesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze=namesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(extraFieldLen,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(localExtraData,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileNameLen,orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileNameLen),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);localExtraData.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);localExtraData.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);localExtraData.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,nc.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc.name,orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc.name),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset,nc.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(nc.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),nc);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),orig);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(nc));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}If(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}AssertionFailedErrorif(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(Orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName()-1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}if(orig!=null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}if(orig==null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}If(orig!=null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}if(orig>=null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}if(orig>>null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}if(orig[Delete]null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,nc));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc,orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset,nc));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,newZipArchiveEntry(orig,encoding));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,newZipArchiveEntry(orig),encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}If(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!Orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ZE);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),nc);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),z);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,archiveName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,archiveName,orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,archiveName,encoding,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),OPEN_EOCD_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){this.zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+S
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName,orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,fileNameLen),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,fileNameLen,extraFieldLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(localExtraData,orig,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,fileNameLen),extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838namingMap.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838names.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),OPEN);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),OPERATOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,encoding,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,archiveName,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,fileNameLen,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,entryEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipEncoding.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig),nc,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig),nc,fileNameLength);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset,nc),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig),nc,entryEncoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,ze,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(nc,orig,ze.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,ze.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(nc,orig,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(nc,orig,ze.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,ze,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(name,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,ze.name,nc.id);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze.getName(),encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze.getName());
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(encoding.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig==null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}If(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{fileNameLen=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipEncoding.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);zipEncoding.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHO
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(zip64EocdOffset!=0){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(extraFieldLen>0){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(extraFieldLen!=0){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileNameLen+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.localExtraData);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}nameMap.put(ze.getName(),ze);if(!Orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.fileName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.fileName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.remove(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+additionalFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838||(orig!=null&&!orig.equals(ze.getName()))){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+superFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extractFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(Orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=noUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(Orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838namingMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),encoding,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,fileNameLen,extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),encoding,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),enc,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,localExtraData));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(localExtraData,orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,zipExtraData));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),newZipArchiveEntry(localExtraData));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset,localExtraData));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(localExtraData),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),entry);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(entry.getName())){nameMap.put(ze.getName(),entry);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(entry.getName())){nameMap.put(ze.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),entry);}else{entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.title,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));Filecd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));cd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));ze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset);nameMap.put(ze.getName(),newZipArchiveEntry(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,fileNameLen,extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc.fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,fileNameLen,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(localExtraData);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(localExtraData,offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),!orig.equals(entry.getName())){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentdummy=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommenttmp=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze.getName(),0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),OPEN_EOCD_SIZE,0);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(orig,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.source);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));t=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entryEntriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentz=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(ze));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(orig,nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);t=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);t=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset));NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(0);ZipUtil.setNameAndCommentFromExtraFields(ze,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(fileNameLen+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+orig+LFH_OFFSET_FOR_FILENAME_LENGTH+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(fileNameLen+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+orig+LFH_OFFSET_FOR_FILENAME_LENGTH+extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+addDummyByte;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+sourceFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,fileNameLen+extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameMap.put(orig.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc.fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc.archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc.sourceName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(1);nameMap.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),nc);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),nc);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),nc);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),nc.comment);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipEncoding.put(orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);nameMap.put(orig.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentoffset=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileNameLen,extraFieldLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(extraFieldLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,fileNameLen,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);nameMap.put(nc.name,entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),entry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset+LFH_OFFSET_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(offset,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(archiveName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(fileName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig,nc.encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,encoding,archiveName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName(),fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze.getName(),encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),orig);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),orig);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),entry);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),nc);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(ze);nameMap.put(entry.getName(),entry);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}AssertionFailedErrorif(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ZE);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,archiveName,orig,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,fileName,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,archiveName,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,orig.name,archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(offset,ze,orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipUtil.setNameAndCommentFromExtraFields(orig,ze.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.name,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.name,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getLocalFileName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);ZipUtil.setNameAndCommentFromExtraFields(name,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(name,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);ZipArchiveEntryt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));DateAndCommentt=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileNameLen+extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.fileName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.sourceName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838zip64EocdOffset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838zip64EocdOffset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838(zip64EocdOffset==null)?LFH_OFFSET_FOR_FILENAME_LENGTH:offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838(zip64EocdOffset==null)?LFH_OFFSET_FOR_FILENAME_LENGTH:offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838(zip64EocdOffset==null)?LFH_OFFSET_FOR_FILENAME_LENGTH:offset+LFH_OFFSET_FOR_FILENAME_LENGTH;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838zip64EocdOffset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),null);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),entry);}else{Entryentry=entriesWithoutUTF8Flag.get(entry);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(orig);NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig,encoding));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),fileNameLen,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.title);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.fileName,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.fileName,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(fileNameLen+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+LFH_OFFSET_FOR_FILENAME_LENGTH+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838fileNameLen=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze.setExtra(localExtraData);offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze,archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(orig+1);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(zip64EocdOffset!=null){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(zip64EocdOffset==null){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(zip64EocdOffset==0){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{zip64EocdOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+fileName
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName,nc));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentt=entriesWithoutUTF8Flag.get(ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(nc.name(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(orig.equals(ze.getName())){nameMap.put(ze.getName(),ZE);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncomment(ze,orig,fileNameLen,extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aught(extraFieldLen,orig,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncomment(ze,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aught(extraFieldLen,orig,ze.getName())){
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncomment(ze,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncomment(ze,orig,fileNameLen+extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(archiveName,nc.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName,nc.name));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(nc.name,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{fileNameLen+=LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentz=entryWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{fileNameLen=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}If(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldL
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{fileNameLen=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+fileNameLen+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{nameMap.put(ze.getName(),orig);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig==null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleMissingName(ze,orig,fileNameLen,extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleMissingName(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncomment(ze,orig,fileNameLen,hasUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838aughtExceptionHandler.handleUncompressedSize(ze,orig,fileNameLen,hasUTF8Flag);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(orig);NameAndCommentze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze,nc.name,orig,encoding);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);ZipUtil.setNameAndCommentFromExtraFields(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(offset);ZipUtil.setNameAndCommentFromExtraFields(ze,orig.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipEncoding.put(orig,nc.name);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.url,orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry(
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),newZipArchiveEntry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{NameAndCommentcd=entriesWithoutUTF8Flag.get(ze);nameMap.put
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName,nc),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(archiveName,nc),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(offset),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);setLocalFileHeaderData
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{ZipArchiveEntryentry=entriesWithoutUTF8Flag.get(entry);setLocalFileHeaderData(entry
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838setLocalFileHeaderData(entry!=nameMap.get(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),OPEN_FOR_FILENAME_LENGTH);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(orig);ZipUtil.setNameAndCommentFromExtraFields(org,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,nc.name,nc.fileName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ze=entriesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(org,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(signatureBytes);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=namesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(ze);nameMap.remove(ze);NameAndCommentze=entriesWithoutUTF8Flag.get(ze);nameMap.add(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=namesWithoutUTF8Flag.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName()
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ZE);}else{return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);}else{return;}nameMap.put(ze.getName(),ze);if(!orig.equals(ze.getName())){nameMap.put(ze.getName(),ze);return;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entryEncoding.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entriesWithoutUTF8Flag.get(offset);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntry<K,V>ze=entriesWithoutUTF8Flag.remove(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838OffsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+orig+extraFieldLen;
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(archiveName,fileNameLen));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.remove(orig);ze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(toog));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameMap.put(ze.getName(),orig);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameMap.put(ze.getName(),ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),ze);NameAndCommentt=entriesWithoutUTF8Flag.get(ze);nameMap.put(ze.getName(),ze);ze=entriesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=entryEncoding.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838ZipArchiveEntryze=namesWithoutUTF8Flag.get(ze);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipExtraData.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);localExtraData.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze+2);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),orig);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig==null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig==null){nameMap.put(ze.getName(),orig);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen;}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldL
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),orig);}else{offsetEntry.dataOffset=offset+LFH_OFFSET_FOR_FILENAME_LENGTH+SHORT+SHORT+extraFieldLen
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig.equals(ze.getName())){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}else{nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),newZipArchiveEntry(orig));}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc,orig,archiveName);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}AssertionFailedErrorif(orig!=null){nameMap.put(ze.getName(),ze);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838if(orig!=null){nameMap.put(ze.getName(),ze);}if(orig!=null){nameMap.put(ze.getName(),ZE);}
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entryEncoding.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);zipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.entry);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ze);names.put(ze.getName(),nc);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig,MIN_EOCD_SIZE);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(ce);nameMap.put(ze.getName(),newZipArchiveEntry(orig));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),orig,fileNameLen+extraFieldLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),nc.name,orig,fileNameLen);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(orig.getName(),nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838nameMap.put(ze.getName(),newZipArchiveEntry(fileName,localExtraData));
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(offset);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=entriesWithoutUTF8Flag.get(ce);ZipUtil.setNameAndCommentFromExtraFields(ze,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentnc=filesWithoutUTF8Flag.get(ze);ZipUtil.setNameAndCommentFromExtraFields(orig,nc.name,nc.comment);
projects/Compress10/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java838NameAndCommentze=entriesWithoutUTF8Flag.get(Orig.name);
