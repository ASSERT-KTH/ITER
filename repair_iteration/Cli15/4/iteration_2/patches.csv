bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  valueList.get(option);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  valueList.get(option);	  Option    option    =    valueList.values();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	153	None	replace
2	[BUG]  [BUGGY]  Option  option  =  valueList.get(0);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  valueList.get(0);	  Option    option    =    valueList.values();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	153	None	replace
3	[BUG]  [BUGGY]  Option  option  =  valueList.keySet();  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  valueList.keySet();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  valueList.keySet();	  Option    option    =    valueList.values();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	153	None	replace
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(new  Object());  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.add(new  Object());	          valueList.add(null);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	98	2	replace
5	[BUG]  [BUGGY]  valueList.add(new  Object());  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(new  Object());  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(new  Object());	          valueList.add(null);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	98	2	replace
6	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  addValue(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    addValue(option,  value);	  	compilable	  [FE]  StackOverflowError  	68	2	add
7	[BUG]  [BUGGY]  addValue(option,  value);  addValue(option,  value);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  addValue(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    addValue(option,  value);	  	compilable	  [FE]  StackOverflowError  	68	2	add
8	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
9	[BUG]  [BUGGY]  addValue(option,  value);  if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
10	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList!=  null)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(valueList!=  null)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
11	[BUG]  [BUGGY]  addValue(option,  value);  if(valueList!=  null)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList!=  null)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(valueList!=  null)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
12	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList.size()  >  1)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(valueList.size()  >  1)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
13	[BUG]  [BUGGY]  addValue(option,  value);  if(valueList.size()  >  1)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList.size()  >  1)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(valueList.size()  >  1)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
14	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
15	[BUG]  [BUGGY]  addValue(option,  value);  if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(valueList.size()  >  0)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
16	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>(2);	  valueList    =    new    ArrayList    <    String>(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	157	2	replace
17	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(2);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>(2);	  valueList    =    new    ArrayList    <    String>(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	157	2	replace
18	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(0);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>(0);	  valueList    =    new    ArrayList    <    String>(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	157	2	replace
19	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(0);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(0);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>(0);	  valueList    =    new    ArrayList    <    String>(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	157	2	replace
20	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(this.defaultValues);  [CE]  no  suitable  constructor  found  for  ArrayList(Map)  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(this.defaultValues);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>(this.defaultValues);	  valueList    =    new    ArrayList    <    String>(valueList);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Map)	117	None	replace
21	[BUG]  [BUGGY]  valueList  =  new  LinkedList  <  String>(valueList);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  LinkedList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  LinkedList  <  String>(valueList);	  valueList    =    new    ArrayList    <    String>(valueList);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
22	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(option);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  NullPointerException  	12	2	replace
23	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  NullPointerException  	12	2	replace
24	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  NullPointerException  	12	2	replace
25	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  NullPointerException  	12	2	replace
26	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }	          valueList.add(option);    valueList.add(option);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
27	[BUG]  [BUGGY]  Value  value  =  values.values();  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  values.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  values.values();	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
28	[BUG]  [BUGGY]  Value  value  =  valueList!=  null?  valueList.values()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  valueList!=  null?  valueList.values()  :  Collections.EMPTY_LIST;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  valueList!=  null?  valueList.values()  :  Collections.EMPTY_LIST;	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
29	[BUG]  [BUGGY]  Value  value  =  valueList!=  null?  valueList.values()  :  null;  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  valueList!=  null?  valueList.values()  :  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  valueList!=  null?  valueList.values()  :  null;	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
30	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)this.defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)this.defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)this.defaultValues.get(option);	          valueList.add(this);    ValueList    valueList    =(ValueList)this.defaultValues.get(option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
31	[BUG]  [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  ValueList  valueList  =(ValueList)defaultValues.get(option);	          valueList.add(this);    ValueList    valueList    =(ValueList)this.defaultValues.get(option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
32	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
33	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
34	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.get(option,  values);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.get(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.get(option,  values);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	39	None	add
35	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
36	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
38	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
39	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  defaultValues.get(option);  [CE]  incompatible  types  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList  =  defaultValues.get(option);	  	non-compiled	[CE]  incompatible  types	39	None	add
40	[BUG]  [BUGGY]  ValueList  <  String>  valueList  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  <  String>  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  <  String>  valueList  =  new  ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    ValueList    <    String>    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
41	[BUG]  [BUGGY]  List  <  String>  valueList  =  new  ArrayList  <  String>();  [CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  List  <  String>  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	List  <  String>  valueList  =  new  ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    ValueList    <    String>    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)	62	None	replace
42	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	59	2	add
43	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	59	2	add
44	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  ValueList  <  String>  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  ValueList  <  String>  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    ValueList  <  String>  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
45	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  Value  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  Value  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    Value  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
46	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	59	None	add
47	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	59	None	add
48	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)valueList.clone();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)valueList.clone();	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
49	[BUG]  [BUGGY]  valueList.remove(this);  ValueList  valueList  =(ValueList)valueList.clone();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.remove(this);  ValueList  valueList  =(ValueList)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.remove(this);  ValueList  valueList  =(ValueList)valueList.clone();	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
50	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    addValue(option,    valueList);    	compilable	  [FE]  NullPointerException  	2	2	replace
51	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [FE]  NullPointerException  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    addValue(option,    valueList);    	compilable	  [FE]  NullPointerException  	2	2	replace
52	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    addValue(option,    valueList);    	compilable	  [FE]  StackOverflowError  	2	2	replace
53	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    addValue(option,    valueList);    	compilable	  [FE]  StackOverflowError  	2	2	replace
54	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addOption(entry.getKey());  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addOption(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addOption(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addOption(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
55	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addOption(entry.getKey());  }  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addOption(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addOption(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addOption(entry.getKey());    }    	non-compiled	[CE]  incompatible  types	49	None	replace
56	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addOption(entry.getValue());  }  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addOption(entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addOption(entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addOption(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
57	[BUG]  [BUGGY]  addOption(entry.getKey());  [CE]  cannot  find  symbol  entry  [FE]                      NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addOption(entry.getKey());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addOption(entry.getKey());	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addOption(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol  entry	49	None	replace
58	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
59	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
60	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }	  	compilable	  [FE]  NullPointerException  	129	2	add
61	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }	  	compilable	  [FE]  NullPointerException  	129	2	add
62	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  values.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  values.put(option,  defaultValues);  }	  	compilable	  [FE]  NullPointerException  	129	2	add
63	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  values.put(option,  defaultValues);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  values.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  values.put(option,  defaultValues);  }	  	compilable	  [FE]  NullPointerException  	129	2	add
64	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  NullPointerException  	129	2	add
65	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  NullPointerException  	129	2	add
66	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	129	2	add
67	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(value);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	129	2	add
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
69	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
70	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(value);  }	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
71	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(value);  }	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
72	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.remove(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.remove(option);	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
73	[BUG]  [BUGGY]  valueList.remove(option);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.remove(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.remove(option);	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
74	[BUG]  [BUGGY]  Value  value  =(Value)this.valueList.get(option,  value);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)this.valueList.get(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)this.valueList.get(option,  value);	  Value    value    =(Value)valueList.get(option,    value);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
75	[BUG]  [BUGGY]  Value  value  =(Value)values.get(option,  value);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)values.get(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)values.get(option,  value);	  Value    value    =(Value)valueList.get(option,    value);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
76	[BUG]  [BUGGY]  Value  value  =(Value)valueList.get(option,  values);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)valueList.get(option,  values);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)valueList.get(option,  values);	  Value    value    =(Value)valueList.get(option,    value);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
77	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	1	2	add
78	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);  addValue(option,  valueList);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	1	2	add
79	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
80	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
81	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
82	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
83	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
84	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
85	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	1	2	add
86	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	1	2	add
87	[BUG]  [BUGGY]  Value  valueList  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =  new  ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    Value    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
88	[BUG]  [BUGGY]  Value  valueList  =  new  ObjectList  <  String>();  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =  new  ObjectList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =  new  ObjectList  <  String>();	  valueList    =    new    ArrayList    <    String>();    Value    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
89	[BUG]  [BUGGY]  Value  valueList  =  new  LinkedList  <  String>();  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =  new  LinkedList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =  new  LinkedList  <  String>();	  valueList    =    new    ArrayList    <    String>();    Value    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
90	[BUG]  [BUGGY]  valueList  =  new  ArrayList(ValueList.size());  [CE]  cannot  find  symbol  ValueList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(ValueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(ValueList.size());	  valueList    =    new    ArrayList(valueList.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol  ValueList	30	None	replace
91	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size();  [CE]  ')'  expected  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(valueList.size();	  valueList    =    new    ArrayList(valueList.size()    -    2);    	non-compiled	[CE]  ')'  expected	30	None	replace
92	[BUG]  [BUGGY]  Value  value  =(Value)keyList.get(value);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)keyList.get(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)keyList.get(value);	  Value    value    =(Value)keyList.get(option);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
93	[BUG]  [BUGGY]  ValueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  ValueList  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  =  new  ArrayList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    ValueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol  ValueList	88	None	replace
94	[BUG]  [BUGGY]  List  valueList  =  new  ArrayList(valueList.size());  [CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  List  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	List  valueList  =  new  ArrayList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    ValueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)	88	None	replace
95	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    valueList.add(this);  valueList.add(this);	  	compilable	  [FE]  NullPointerException  	70	2	add
96	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  valueList.add(this);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    valueList.add(this);  valueList.add(this);	  	compilable	  [FE]  NullPointerException  	70	2	add
97	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
98	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
99	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
100	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
101	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
102	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
103	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  this);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
104	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  this);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  defaultValues.put(option,  this);  }	  	compilable	  [FE]  NullPointerException  	70	2	add
105	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  NullPointerException  	71	2	replace
106	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  NullPointerException  	71	2	replace
107	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  NullPointerException  	71	2	replace
108	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  NullPointerException  	71	2	replace
109	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  NullPointerException  	71	2	replace
110	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  NullPointerException  	71	2	replace
111	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	121	2	add
112	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	121	2	add
113	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
114	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
115	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	121	2	add
116	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	121	2	add
117	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList  >=  null)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList  >=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList  >=  null)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
118	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
119	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
120	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
121	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  values.put(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();  values.put(option,  value);	  	compilable	  [FE]  NullPointerException  	13	2	add
123	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  values.put(option,  value);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  values.put(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();  values.put(option,  value);	  	compilable	  [FE]  NullPointerException  	13	2	add
124	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(option);  if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(option);  if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
125	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(option);  if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(option);  if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(option);  if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
126	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	13	2	add
127	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	13	2	add
128	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList();  values.put(option,  value);	          valueList.add(value);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	38	2	replace
129	[BUG]  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  value);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList();  values.put(option,  value);	          valueList.add(value);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	38	2	replace
130	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
131	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
132	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
133	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
134	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
135	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
136	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	3	None	add
137	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
138	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	3	2	add
139	[BUG]  [BUGGY]  Value  value  =(Value)this.valueList.get(value);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)this.valueList.get(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)this.valueList.get(value);	  Value    value    =(Value)this.valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
140	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  NullPointerException  	60	2	replace
141	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }  [FE]  NullPointerException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  NullPointerException  	60	2	replace
142	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	replace
143	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	replace
144	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	replace
145	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  valueList  =  new  ArrayList  <  String>();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	replace
146	[BUG]  [BUGGY]  for(Option  value  :  values.values())  {  addOption(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  values.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  values.values())  {  addOption(option,  value);  }	  for(Option    option    :    values.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	24	None	replace
147	[BUG]  [BUGGY]  for(Option  option  :  values.values())  {  addOption(option,  valueList);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  values.values())  {  addOption(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  values.values())  {  addOption(option,  valueList);  }	  for(Option    option    :    values.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	24	None	replace
148	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    null;    valueList.add(null);  valueList  =  null;	  	compilable	  [FE]  NullPointerException  	99	2	add
149	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  valueList  =  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    null;    valueList.add(null);  valueList  =  null;	  	compilable	  [FE]  NullPointerException  	99	2	add
150	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.remove(null);  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    null;    valueList.remove(null);  valueList  =  null;	  	compilable	  [FE]  NullPointerException  	99	2	add
151	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.remove(null);  valueList  =  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.remove(null);  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    null;    valueList.remove(null);  valueList  =  null;	  	compilable	  [FE]  NullPointerException  	99	2	add
152	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null;  valueList  =  null;  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null;  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    null;    valueList.add(null;  valueList  =  null;	  	non-compiled	[CE]  ')'  expected	99	None	add
153	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  valuesList  =  null;  [CE]  cannot  find  symbol  valuesList  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  valuesList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    null;    valueList.add(null);  valuesList  =  null;	  	non-compiled	[CE]  cannot  find  symbol  valuesList	99	None	add
154	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
155	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
156	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
157	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
158	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.get(option,  values);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.get(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.get(option,  values);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	19	None	add
159	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(valueList!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(valueList!=  null)  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
160	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(valueList!=  null)  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(valueList!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(valueList!=  null)  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
161	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	19	None	add
162	[BUG]  [BUGGY]  addValue(value,  valueList,  option);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(value,  valueList,  option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(value,  valueList,  option);	  addValue(value,    option);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	126	None	replace
163	[BUG]  [BUGGY]  Value  valueList  =(Value)valueList.clone();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =(Value)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =(Value)valueList.clone();	          valueList.add(value);    Value    valueList    =(Value)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
164	[BUG]  [BUGGY]  valueList.add(value);  Value  valueList  =(Value)this.valueList.clone();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(value);  Value  valueList  =(Value)this.valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(value);  Value  valueList  =(Value)this.valueList.clone();	          valueList.add(value);    Value    valueList    =(Value)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
165	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  valueList.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>();  valueList.add(value);	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1  	135	2	replace
166	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  valueList.add(value);  [FE]  junit.framework.ComparisonFailure:  expected:<[1  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  valueList.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  valueList.add(value);	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1  	135	2	replace
167	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  valueList;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  valueList;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  valueList;	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList;    	non-compiled	[CE]  not  a  statement	135	None	replace
168	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  valueList.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>();  valueList.addAll(valueList);	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	135	2	replace
169	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  valueList.addAll(valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  valueList.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  valueList.addAll(valueList);	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	135	2	replace
170	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  java.util.ArrayList(valueList.size());	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  NullPointerException  	80	2	replace
171	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList(valueList.size());  [FE]  NullPointerException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  java.util.ArrayList(valueList.size());	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  NullPointerException  	80	2	replace
172	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList(values.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  java.util.ArrayList(values.size());	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
173	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList(values.size());  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList(values.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  java.util.ArrayList(values.size());	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
174	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  java.util.ArrayList(valueList);	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  NullPointerException  	80	2	replace
175	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList(valueList);  [FE]  NullPointerException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  java.util.ArrayList(valueList);	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  NullPointerException  	80	2	replace
176	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(values.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList(values.size());	  valueList    =    new    ArrayList(valueList.size()    +    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	replace
177	[BUG]  [BUGGY]  valueList  =  new  ArrayList(values.size());  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(values.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(values.size());	  valueList    =    new    ArrayList(valueList.size()    +    1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	replace
178	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(null);    valueList.remove(null);    	compilable	  [FE]  NullPointerException  	147	2	replace
179	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  defaultValues.put(option,  null);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(null);    valueList.remove(null);    	compilable	  [FE]  NullPointerException  	147	2	replace
180	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(null);  }	          valueList.add(null);    valueList.remove(null);    	compilable	  [FE]  NullPointerException  	147	2	replace
181	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(null);  }	          valueList.add(null);    valueList.remove(null);    	compilable	  [FE]  NullPointerException  	147	2	replace
182	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  StackOverflowError  	4	2	replace
183	[BUG]  [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  StackOverflowError  	4	2	replace
184	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	4	2	replace
185	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	4	2	replace
186	[BUG]  [BUGGY]  valueList.add(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValue);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValue);	  valueList.add(defaultValues);    	non-compiled	[CE]  cannot  find  symbol  defaultValue	120	None	replace
187	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	defaultValues.put(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	94	2	replace
188	[BUG]  [BUGGY]  defaultValues.put(option,  valueList);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	defaultValues.put(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	94	2	replace
189	[BUG]  [BUGGY]  Settings  settings  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Settings  settings  =  Sets.newHashSet();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Settings  settings  =  Sets.newHashSet();	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
190	[BUG]  [BUGGY]  DefaultValues  <  String>defaultValues  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  DefaultValues  <  String>defaultValues  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	DefaultValues  <  String>defaultValues  =  defaultValues.get(option);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
191	[BUG]  [BUGGY]  DefaultValues.put(option,  valueList);  [CE]  cannot  find  symbol  DefaultValues  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  DefaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	DefaultValues.put(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  DefaultValues	94	None	replace
192	[BUG]  [BUGGY]  for(Option  value  :  values.values())  {  addValue(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  values.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  values.values())  {  addValue(option,  value);  }	  for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	33	None	replace
193	[BUG]  [BUGGY]  for(Option  option  :  values.values())  {  addValue(option,  valueList);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  values.values())  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  values.values())  {  addValue(option,  valueList);  }	  for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	33	None	replace
194	[BUG]  [BUGGY]  ValueList  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =  new  ArrayList(valueList.size());	  ValueList    valueList    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
195	[BUG]  [BUGGY]  ValueList  valueList  =  new  LinkedList();  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =  new  LinkedList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =  new  LinkedList();	  ValueList    valueList    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
196	[BUG]  [BUGGY]  ValueList  valueList  =  new  java.util.ArrayList();  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =  new  java.util.ArrayList();	  ValueList    valueList    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
197	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	14	2	replace
198	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	14	2	replace
199	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
200	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
201	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	43	None	add
202	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =  defaultValues.get(option);  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList  =  defaultValues.get(option);	  	non-compiled	[CE]  incompatible  types	43	None	add
203	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
204	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
205	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
206	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
207	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  ArrayList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList    <    String>(valueList);    valueList  =  new  ArrayList  <  String>(valueList);	  	compilable	  [FE]  NullPointerException  	116	2	add
208	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  ArrayList  <  String>(valueList);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  ArrayList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    valueList  =  new  ArrayList  <  String>(valueList);	  	compilable	  [FE]  NullPointerException  	116	2	add
209	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  ValueList  <  String>  valueList  =  new  ArrayList  <  String>(valueList);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  ValueList  <  String>  valueList  =  new  ArrayList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    ValueList  <  String>  valueList  =  new  ArrayList  <  String>(valueList);	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
210	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  ValueList  valueList  =  new  ArrayList  <  String>(valueList);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  ValueList  valueList  =  new  ArrayList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    ValueList  valueList  =  new  ArrayList  <  String>(valueList);	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
211	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  ValueList  =  new  ArrayList  <  String>(valueList);  [CE]  cannot  find  symbol  ValueList  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  ValueList  =  new  ArrayList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    ValueList  =  new  ArrayList  <  String>(valueList);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	116	None	add
212	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  valueList  =  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    java.util.ArrayList();    valueList  =  new  java.util.ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	79	2	add
213	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  valueList  =  new  java.util.ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  valueList  =  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    valueList  =  new  java.util.ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	79	2	add
214	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  ValueList  valueList  =  new  java.util.ArrayList();  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  ValueList  valueList  =  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    ValueList  valueList  =  new  java.util.ArrayList();	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
215	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	79	None	add
216	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	79	None	add
217	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  Value  valueList  =  new  java.util.ArrayList();  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  Value  valueList  =  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    Value  valueList  =  new  java.util.ArrayList();	  	non-compiled	[CE]  cannot  find  symbol	79	None	add
218	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()));  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()));  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(valueList.size()));	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size()));    	non-compiled	[CE]  ';'  expected	151	None	replace
219	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size()));    	non-compiled	[CE]  ';'  expected	151	None	replace
220	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size()));    	compilable	  [FE]  NullPointerException  	151	2	replace
221	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size()));    	compilable	  [FE]  NullPointerException  	151	2	replace
222	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList  =  new  ArrayList(valueList.size());  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  NullPointerException  	85	2	replace
223	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList  =  new  ArrayList(valueList.size());  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList  =  new  ArrayList(valueList.size());  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  NullPointerException  	85	2	replace
224	[BUG]  [BUGGY]  ValueList  valueList  =  new  ValueList(valueList.size());  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =  new  ValueList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =  new  ValueList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
225	[BUG]  [BUGGY]  for(Option  value  :  valueList.values())  {  addOption(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  valueList.values())  {  addOption(option,  value);  }	  for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	21	None	replace
226	[BUG]  [BUGGY]  for(Option  value  :  optionList.values())  {  addOption(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  optionList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  optionList.values())  {  addOption(option,  value);  }	  for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	21	None	replace
227	[BUG]  [BUGGY]  for(Option  value  :  valueList.values())  {  addValue(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  valueList.values())  {  addValue(option,  value);  }	  for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	31	None	replace
228	[BUG]  [BUGGY]  for(Option  value  :  optionList.values())  {  addValue(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  optionList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  optionList.values())  {  addValue(option,  value);  }	  for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	31	None	replace
229	[BUG]  [BUGGY]  valueList.add(this);  this.valueList  =(List)valueList.clone();  [CE]  cannot  find  symbol  valueList  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  this.valueList  =(List)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  this.valueList  =(List)valueList.clone();	          valueList.add(this);    valueList    =(List)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol  valueList	107	None	replace
230	[BUG]  [BUGGY]  valueList.remove(this);  valueList  =(List)valueList.clone();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.remove(this);  valueList  =(List)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.remove(this);  valueList  =(List)valueList.clone();	          valueList.add(this);    valueList    =(List)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
231	[BUG]  [BUGGY]  Option  option  =(Option)valueList.get(1);  if(option.hasArg())  {  addValue(option,  value);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =(Option)valueList.get(1);  if(option.hasArg())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =(Option)valueList.get(1);  if(option.hasArg())  {  addValue(option,  value);  }	  if(valueList.size()    >    1)    {    Option    option    =(Option)valueList.get(0);    if(option.hasArg())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	57	None	replace
232	[BUG]  [BUGGY]  ||  valueList.size()  ==  0)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  ==  0)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  ==  0)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
233	[BUG]  [BUGGY]  ||  valueList.size()  <  1)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  <  1)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  <  1)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
234	[BUG]  [BUGGY]  ||  valueList.size()!=  0)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()!=  0)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()!=  0)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
235	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    -    1);    valueList  =  new  ArrayList(valueList.size()  -  1);	  	compilable	  [FE]  NullPointerException  	25	2	add
236	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(valueList.size()  -  1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    1);    valueList  =  new  ArrayList(valueList.size()  -  1);	  	compilable	  [FE]  NullPointerException  	25	2	add
237	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  ValueList  valueList  =  new  ArrayList(valueList.size()  -  1);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  ValueList  valueList  =  new  ArrayList(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    1);    ValueList  valueList  =  new  ArrayList(valueList.size()  -  1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
238	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  ValueList  =  new  ArrayList(valueList.size()  -  1);  [CE]  cannot  find  symbol  ValueList  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  ValueList  =  new  ArrayList(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    1);    ValueList  =  new  ArrayList(valueList.size()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	25	None	add
239	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(valueList.size()  -  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    -    1);    valueList  =  new  ArrayList(valueList.size()  -  2);	  	compilable	  [FE]  NullPointerException  	25	2	add
240	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(valueList.size()  -  2);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(valueList.size()  -  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    1);    valueList  =  new  ArrayList(valueList.size()  -  2);	  	compilable	  [FE]  NullPointerException  	25	2	add
241	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.addAll(valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.addAll(valueList);	  valueList.addAll(this);    	compilable	  [FE]  NullPointerException  	89	2	replace
242	[BUG]  [BUGGY]  valueList.addAll(valueList);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.addAll(valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.addAll(valueList);	  valueList.addAll(this);    	compilable	  [FE]  NullPointerException  	89	2	replace
243	[BUG]  [BUGGY]  valueList.addAll(this,  value);  [CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,Object)  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.addAll(this,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.addAll(this,  value);	  valueList.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,Object)	89	None	replace
244	[BUG]  [BUGGY]  valueList.addAll(this,  values);  [CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,Map)  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.addAll(this,  values);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.addAll(this,  values);	  valueList.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,Map)	89	None	replace
245	[BUG]  [BUGGY]  For(Option  option  :  values.values())  {  addValue(option,  value);  }  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  values.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  values.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ')'  expected	143	None	replace
246	[BUG]  [BUGGY]  AllValues(valueList,  values.values())  {  for(Option  option  :  values.values())  {  addValue(option,  value);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  AllValues(valueList,  values.values())  {  for(Option  option  :  values.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	AllValues(valueList,  values.values())  {  for(Option  option  :  values.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
247	[BUG]  [BUGGY]  AllValues(valueList,  values.values())  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  AllValues(valueList,  values.values())  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	AllValues(valueList,  values.values())  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
248	[BUG]  [BUGGY]  Aleger  <?>  valueList  =  values.values();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <?>  valueList  =  values.values();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <?>  valueList  =  values.values();	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
249	[BUG]  [BUGGY]  valueList  =(List)valueList.get(this);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)valueList.get(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)valueList.get(this);	          valueList.add(this);    valueList    =(List)valueList.get(this);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	106	None	replace
250	[BUG]  [BUGGY]  ValueList  valueList  =(List)valueList.get(this);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(List)valueList.get(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(List)valueList.get(this);	          valueList.add(this);    valueList    =(List)valueList.get(this);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
251	[BUG]  [BUGGY]  valueList.add(this,  value);  [CE]  no  suitable  method  found  for  add(WriteableCommandLineImpl,Object)  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this,  value);	          valueList.add(this);    valueList    =(List)valueList.get(this);    	non-compiled	[CE]  no  suitable  method  found  for  add(WriteableCommandLineImpl,Object)	106	None	replace
252	[BUG]  [BUGGY]  ValueUtils.addValue(valueList,  valueList.values())  {  addOption(option,  value);  }  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(valueList,  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(valueList,  valueList.values())  {  addOption(option,  value);  }	  ValueUtils.addValue(value,    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
253	[BUG]  [BUGGY]  ValueUtils.addValue(value,  values.values())  {  addOption(option,  value);  }  [CE]  ';'  expected  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(value,  values.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(value,  values.values())  {  addOption(option,  value);  }	  ValueUtils.addValue(value,    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
254	[BUG]  [BUGGY]  ValueUtils.addValue(valueList,  values.values())  {  addOption(option,  value);  }  [CE]  ';'  expected  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(valueList,  values.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(valueList,  values.values())  {  addOption(option,  value);  }	  ValueUtils.addValue(value,    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
255	[BUG]  [BUGGY]  for(Option  value  :  options.values())  {  addOption(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  options.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  options.values())  {  addOption(option,  value);  }	  for(Option    option    :    options.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	118	None	replace
256	[BUG]  [BUGGY]  for(Option  option  :  values())  {  addOption(option,  value);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  values())  {  addOption(option,  value);  }	  for(Option    option    :    options.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	118	None	replace
257	[BUG]  [BUGGY]  Value  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =  new  ArrayList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    Value    valueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
258	[BUG]  [BUGGY]  Value  valueList  =  new  ObjectList(valueList.size());  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =  new  ObjectList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =  new  ObjectList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    Value    valueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
259	[BUG]  [BUGGY]  Value  valueList  =  new  LinkedList(valueList.size());  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =  new  LinkedList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =  new  LinkedList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    Value    valueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
260	[BUG]  [BUGGY]  ValueUtils.addValue(value,  valueList,  defaultSwitches);  [CE]  cannot  find  symbol  ValueUtils  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(value,  valueList,  defaultSwitches);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(value,  valueList,  defaultSwitches);	  ValueUtils.addValue(value,    valueList);    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	155	None	replace
261	[BUG]  [BUGGY]  ValueUtils.addValue(value,  values);  [CE]  cannot  find  symbol  ValueUtils  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(value,  values);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(value,  values);	  ValueUtils.addValue(value,    valueList);    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	155	None	replace
262	[BUG]  [BUGGY]  ValueUtils.addValue(valueList,  value);  [CE]  cannot  find  symbol  ValueUtils  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(valueList,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(valueList,  value);	  ValueUtils.addValue(value,    valueList);    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	155	None	replace
263	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList.add(option);  valueList.remove(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    valueList.add(option);  valueList.remove(option);	  	compilable	  [FE]  NullPointerException  	158	2	add
264	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList.add(option);  valueList.remove(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList.add(option);  valueList.remove(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    valueList.add(option);  valueList.remove(option);	  	compilable	  [FE]  NullPointerException  	158	2	add
265	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
266	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
267	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
268	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
269	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
270	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
271	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
272	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.remove(option);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	158	2	add
273	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues!=  null)  {  valueList.add(value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	44	2	replace
274	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  valueList.add(value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	44	2	replace
275	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues!=  null)  {  valueList  =  new  ArrayList();  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	44	2	replace
276	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  valueList  =  new  ArrayList();  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	44	2	replace
277	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues  ==  null)  {  valueList.add(value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	44	2	replace
278	[BUG]  [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues  ==  null)  {  valueList.add(value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	44	2	replace
279	[BUG]  [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
280	[BUG]  [BUGGY]  validateValues(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValues(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValues(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
281	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  new  ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	139	None	replace
282	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  java.util.ArrayList  <  String>();  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  java.util.ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  new  java.util.ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	139	None	replace
283	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ObjectList  <  String>();  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  new  ObjectList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  new  ObjectList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	139	None	replace
284	[BUG]  [BUGGY]  Option  option  =(Option)valueList.get(1);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =(Option)valueList.get(1);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =(Option)valueList.get(1);	  Option    option    =(Option)valueList.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	58	None	replace
285	[BUG]  [BUGGY]  option  =(Option)valueList.get(0);  [CE]  final  parameter  option  may  not  be  assigned  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  option  =(Option)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	option  =(Option)valueList.get(0);	  Option    option    =(Option)valueList.get(0);    	non-compiled	[CE]  final  parameter  option  may  not  be  assigned	58	None	replace
286	[BUG]  [BUGGY]  Option  option  =(Option)valueList.get(option);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =(Option)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =(Option)valueList.get(option);	  Option    option    =(Option)valueList.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	58	None	replace
287	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.add(option);  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    valueList.add(option);  valueList.add(option);	  	compilable	  [FE]  NullPointerException  	11	2	add
288	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.add(option);  valueList.add(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.add(option);  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    valueList.add(option);  valueList.add(option);	  	compilable	  [FE]  NullPointerException  	11	2	add
289	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
290	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
291	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    if(valueList  ==  null)  {  valueList.add(option);  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
292	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  valueList.add(option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList  ==  null)  {  valueList.add(option);  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
293	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
294	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
295	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
296	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	11	2	add
297	[BUG]  [BUGGY]  Value  value  =(Value)this.valueList.get(option,  valueList);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)this.valueList.get(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)this.valueList.get(option,  valueList);	  Value    value    =(Value)valueList.get(option,    valueList);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
298	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	104	2	add
299	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	104	2	add
300	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.remove(this);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.remove(this);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	104	2	add
301	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.remove(this);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.remove(this);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.remove(this);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	104	2	add
302	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  ValueList  valueList  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  ValueList  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    ValueList  valueList  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
303	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);	  	compilable	  [FE]  NullPointerException  	104	2	add
304	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);	  	compilable	  [FE]  NullPointerException  	104	2	add
305	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  option);  }  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ')'  expected	142	None	replace
306	[BUG]  [BUGGY]  For(Option  option  :  values())  {  addValue(option,  option);  }  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ')'  expected	142	None	replace
307	[BUG]  [BUGGY]  Aleger  <?>  valueList  =  valueList.values();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <?>  valueList  =  valueList.values();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <?>  valueList  =  valueList.values();	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
308	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  option);  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addValue(option,  option);	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ')'  expected	142	None	replace
309	[BUG]  [BUGGY]  ||  valueList.size()  ==  0)  {  for(Option  option  :  values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  ==  0)  {  for(Option  option  :  values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  ==  0)  {  for(Option  option  :  values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
310	[BUG]  [BUGGY]  ||  valueList.size()  <  1)  {  for(Option  option  :  values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  <  1)  {  for(Option  option  :  values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  <  1)  {  for(Option  option  :  values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
311	[BUG]  [BUGGY]  ||  values.size()  >  0)  {  for(Option  option  :  options())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  values.size()  >  0)  {  for(Option  option  :  options())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  values.size()  >  0)  {  for(Option  option  :  options())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
312	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  valueList.add(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.add(defaultValues);    valueList.add(defaultValues);	  	compilable	  [FE]  NullPointerException  	119	2	add
313	[BUG]  [BUGGY]  valueList.add(defaultValues);  valueList.add(defaultValues);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  valueList.add(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    valueList.add(defaultValues);	  	compilable	  [FE]  NullPointerException  	119	2	add
314	[BUG]  [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	119	None	add
315	[BUG]  [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues  =  Lists.newArrayList();  values.put(option,  value);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues  =  Lists.newArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues  =  Lists.newArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	119	None	add
316	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.add(defaultValues);    if(defaultValues!=  null)  {  valueList.add(defaultValues);  }	  	compilable	  [FE]  NullPointerException  	119	2	add
317	[BUG]  [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    if(defaultValues!=  null)  {  valueList.add(defaultValues);  }	  	compilable	  [FE]  NullPointerException  	119	2	add
318	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.add(defaultValues);    if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	119	2	add
319	[BUG]  [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    if(defaultValues!=  null)  {  valueList.add(defaultValues);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	119	2	add
320	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
321	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
322	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
323	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
324	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  0)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
325	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
326	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
327	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
328	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
329	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
330	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
331	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
332	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
333	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  value);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
334	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  value);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
335	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	93	2	add
336	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	93	2	add
337	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	93	2	add
338	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	93	2	add
339	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	93	None	add
340	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  If(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  If(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    If(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  ';'  expected	93	None	add
341	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option.getAssignments());  }  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option.getAssignments());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addValue(option.getAssignments());  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  ')'  expected	145	None	replace
342	[BUG]  [BUGGY]  For(Option  option  :  values())  {  addValue(option.getAssignments());  }  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  values())  {  addValue(option.getAssignments());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  values())  {  addValue(option.getAssignments());  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  ')'  expected	145	None	replace
343	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addAssignment(option.getAssignments());  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addAssignment(option.getAssignments());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addAssignment(option.getAssignments());  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  ')'  expected	145	None	replace
344	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.add(entry.getKey());  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.add(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.add(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    values.entrySet())    {    valueList.add(entry.getKey());    }    	non-compiled	[CE]  incompatible  types	48	None	replace
345	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.add(entry.getValue());  }  [CE]  incompatible  types  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.add(entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.add(entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    values.entrySet())    {    valueList.add(entry.getKey());    }    	non-compiled	[CE]  incompatible  types	48	None	replace
346	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.keySet())  {  valueList.add(entry.getKey());  }  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.keySet())  {  valueList.add(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.keySet())  {  valueList.add(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    values.entrySet())    {    valueList.add(entry.getKey());    }    	non-compiled	[CE]  incompatible  types	48	None	replace
347	[BUG]  [BUGGY]  valueList.add(entry.getKey());  [CE]  cannot  find  symbol  entry  [FE]                    NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(entry.getKey());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(entry.getKey());	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    values.entrySet())    {    valueList.add(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol  entry	48	None	replace
348	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList.add(option);  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =(List)values.get(option);    valueList.add(option);  valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	113	2	add
349	[BUG]  [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList.add(option);  valueList  =(List)values.get(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList.add(option);  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =(List)values.get(option);    valueList.add(option);  valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	113	2	add
350	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =(List)values.get(option);    valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	113	2	add
351	[BUG]  [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList  =(List)values.get(option);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =(List)values.get(option);    valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	113	2	add
352	[BUG]  [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  ValueList  valueList  =(List)values.get(option);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  ValueList  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =(List)values.get(option);    ValueList  valueList  =(List)values.get(option);	  	non-compiled	[CE]  cannot  find  symbol	113	None	add
353	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	6	2	replace
354	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	6	2	replace
355	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	6	2	replace
356	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	6	2	replace
357	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	6	2	replace
358	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	6	2	replace
359	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.add(option);  }	          valueList.add(value);    valueList.add(value);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
360	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
361	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
362	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    if(valueList!=  null)  {  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
363	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList  ==  null)  {  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList  ==  null)  {  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    if(valueList  ==  null)  {  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
364	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
365	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList.add(option);  if(valueList  ==  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
366	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
367	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
368	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList.add(null);  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
369	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  valueList.add(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.add(null);  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
370	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(option);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList.add(option);  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
371	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(option);  valueList.add(null);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(option);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.add(option);  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
372	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.remove(null);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList.remove(null);  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
373	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.remove(null);  valueList.add(null);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.remove(null);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.remove(null);  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
374	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(new  ArrayList());  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList.add(new  ArrayList());  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
375	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(new  ArrayList());  valueList.add(null);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(new  ArrayList());  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.add(new  ArrayList());  valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
376	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  java.util.ArrayList  <  String>();	  valueList    =    new    LinkedList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	76	2	replace
377	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList  <  String>();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  java.util.ArrayList  <  String>();	  valueList    =    new    LinkedList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	76	2	replace
378	[BUG]  [BUGGY]  ValueList  valueList  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =  new  ArrayList  <  String>();	  valueList    =    new    LinkedList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
379	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	7	2	add
380	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	7	2	add
381	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  1)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
382	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	7	2	add
383	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	7	2	add
384	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  1)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
385	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	7	2	add
386	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	7	2	add
387	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(option);    valueList.remove(option);    	compilable	  [FE]  NullPointerException  	159	2	replace
388	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(option);    valueList.remove(option);    	compilable	  [FE]  NullPointerException  	159	2	replace
389	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(option);    valueList.remove(option);    	compilable	  [FE]  NullPointerException  	159	2	replace
390	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(option);    valueList.remove(option);    	compilable	  [FE]  NullPointerException  	159	2	replace
391	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(value);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    valueList.add(value);  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
392	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(value);  valueList.remove(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(value);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    valueList.add(value);  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
393	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
394	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
395	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
396	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
397	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  options);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  options);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
398	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  options);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  options);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  options);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
399	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  option);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
400	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  option);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.remove(value);  }  else  {  defaultValues.put(option,  option);  }	  	compilable	  [FE]  NullPointerException  	136	2	add
401	[BUG]  [BUGGY]  ||  valueList.size()  ==  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  ==  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  ==  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
402	[BUG]  [BUGGY]  ||  valueList.size()  <  1)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  <  1)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  <  1)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
403	[BUG]  [BUGGY]  ||  valueList.size()!=  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()!=  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()!=  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
404	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  values.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  values.put(option,  null);  }	          valueList.add(null);    valueList.add(null);    	compilable	  [FE]  NullPointerException  	51	2	replace
405	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  values.put(option,  null);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  values.put(option,  null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(null);  }  else  {  values.put(option,  null);  }	          valueList.add(null);    valueList.add(null);    	compilable	  [FE]  NullPointerException  	51	2	replace
406	[BUG]  [BUGGY]  valueList.size()  >  0)  {  for(Option  option  :  values.values())  {  addOption(option,  value);  }  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.size()  >  0)  {  for(Option  option  :  values.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.size()  >  0)  {  for(Option  option  :  values.values())  {  addOption(option,  value);  }	  valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
407	[BUG]  [BUGGY]  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addOption(option,  value);  }  [CE]  not  a  statement  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addOption(option,  value);  }	  valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
408	[BUG]  [BUGGY]  addValue(valueList,  option,  value);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(valueList,  option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(valueList,  option,  value);	  addValue(valueList,    option);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	90	None	replace
409	[BUG]  [BUGGY]  addValue(valueList,  valueList,  option);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]          StackOverflowError      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(valueList,  valueList,  option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(valueList,  valueList,  option);	  addValue(valueList,    option);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	90	None	replace
410	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList.add(this);  valueList  =(List)valueList.get(0);	  	compilable	  [FE]  NullPointerException  	108	2	add
411	[BUG]  [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  valueList  =(List)valueList.get(0);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList.add(this);  valueList  =(List)valueList.get(0);	  	compilable	  [FE]  NullPointerException  	108	2	add
412	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  valueList  =(List)valueList.get(1);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList.add(this);  valueList  =(List)valueList.get(1);	  	compilable	  [FE]  NullPointerException  	108	2	add
413	[BUG]  [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  valueList  =(List)valueList.get(1);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  valueList  =(List)valueList.get(1);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList.add(this);  valueList  =(List)valueList.get(1);	  	compilable	  [FE]  NullPointerException  	108	2	add
414	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList  =(List)valueList.get(0);	  	compilable	  [FE]  NullPointerException  	108	2	add
415	[BUG]  [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList  =(List)valueList.get(0);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList  =(List)valueList.get(0);	  	compilable	  [FE]  NullPointerException  	108	2	add
416	[BUG]  [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  ValueList  valueList  =(List)valueList.get(0);  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  ValueList  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =(List)valueList.get(0);    ValueList  valueList  =(List)valueList.get(0);	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
417	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(values!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(values!=  null)  {  valueList.add(option);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    	compilable	  [FE]  NullPointerException  	16	2	replace
418	[BUG]  [BUGGY]  if(values!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(values!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(values!=  null)  {  valueList.add(option);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    	compilable	  [FE]  NullPointerException  	16	2	replace
419	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(null);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)valueList.get(null);	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.get(null);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
420	[BUG]  [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)valueList.get(0);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(null);  ValueList  valueList  =(ValueList)valueList.get(0);	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.get(null);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
421	[BUG]  [BUGGY]  addValue(option,  valueList,  valueList);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,  valueList,  valueList);	  addValue(option,    valueList,    value);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	101	None	replace
422	[BUG]  [BUGGY]  for(Option  value  :  options.values())  {  addValue(option,  value);  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  value  :  options.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  value  :  options.values())  {  addValue(option,  value);  }	  for(Option    option    :    options.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	102	None	replace
423	[BUG]  [BUGGY]  for(Option  option  :  values())  {  addValue(option,  value);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  values())  {  addValue(option,  value);  }	  for(Option    option    :    options.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	102	None	replace
424	[BUG]  [BUGGY]  addValue(valueList,  options);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(valueList,  options);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(valueList,  options);	          addValue(valueList);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	115	None	replace
425	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	91	2	add
426	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	91	2	add
427	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList  ==  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	91	2	add
428	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList  ==  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	91	2	add
429	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  >=  null)  {  addValue(option,  valueList);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  >=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList  >=  null)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	91	None	add
430	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  >>  null)  {  addValue(option,  valueList);  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  if(valueList  >>  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    if(valueList  >>  null)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	91	None	add
431	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	9	2	add
432	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	9	2	add
433	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	9	2	add
434	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	9	2	add
435	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
436	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	9	None	add
437	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  }	  	compilable	  [FE]  StackOverflowError  	9	2	add
438	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  }	  	compilable	  [FE]  StackOverflowError  	9	2	add
439	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  expected;	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	61	None	replace
440	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  expected;	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	61	None	replace
441	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  expected;	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	61	None	replace
442	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected:  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected:  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  expected:  junit.framework.ComparisonFailure:  expected;	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	61	None	replace
443	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
444	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
445	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
446	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
447	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
448	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
449	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  return;  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  return;  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	123	None	add
450	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
451	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(valueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    +    1);    valueList  =  new  ArrayList(valueList.size()  +  1);	  	compilable	  [FE]  NullPointerException  	27	2	add
452	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(valueList.size()  +  1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(valueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    +    1);    valueList  =  new  ArrayList(valueList.size()  +  1);	  	compilable	  [FE]  NullPointerException  	27	2	add
453	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  ValueList  valueList  =  new  ArrayList(valueList.size()  +  1);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  ValueList  valueList  =  new  ArrayList(valueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    +    1);    ValueList  valueList  =  new  ArrayList(valueList.size()  +  1);	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
454	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(valueList.size()  +  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    +    1);    valueList  =  new  ArrayList(valueList.size()  +  2);	  	compilable	  [FE]  NullPointerException  	27	2	add
455	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(valueList.size()  +  2);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(valueList.size()  +  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    +    1);    valueList  =  new  ArrayList(valueList.size()  +  2);	  	compilable	  [FE]  NullPointerException  	27	2	add
456	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  ValueList  =  new  ArrayList(valueList.size()  +  1);  [CE]  cannot  find  symbol  ValueList  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  ValueList  =  new  ArrayList(valueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    +    1);    ValueList  =  new  ArrayList(valueList.size()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	27	None	add
457	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	8	2	replace
458	[BUG]  [BUGGY]  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	8	2	replace
459	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  1)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  1)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	8	2	replace
460	[BUG]  [BUGGY]  if(valueList.size()  >  1)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  1)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  1)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	8	2	replace
461	[BUG]  [BUGGY]  Value  valueList  =(Value)valueList.get(option);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =(Value)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =(Value)valueList.get(option);	          valueList.add(value);    Value    valueList    =(Value)valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
462	[BUG]  [BUGGY]  valueList.add(value);  Value  valueList  =(Value)this.valueList.get(option);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(value);  Value  valueList  =(Value)this.valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(value);  Value  valueList  =(Value)this.valueList.get(option);	          valueList.add(value);    Value    valueList    =(Value)valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
463	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addOption(option);  }  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  ')'  expected	154	None	replace
464	[BUG]  [BUGGY]  ||  valueList!=  null)  {  for(Option  option  :  valueList.values())  {  addOption(option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList!=  null)  {  for(Option  option  :  valueList.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList!=  null)  {  for(Option  option  :  valueList.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
465	[BUG]  [BUGGY]  for(Option  option  :  valueList.values())  {  addOption(option);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  valueList.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  valueList.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	154	None	replace
466	[BUG]  [BUGGY]  ||  valueList!=  null)  {  for(Option  option  :  values.values())  {  addOption(option);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList!=  null)  {  for(Option  option  :  values.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList!=  null)  {  for(Option  option  :  values.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
467	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());	  	compilable	  [FE]  NullPointerException  	84	2	add
468	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());	  	compilable	  [FE]  NullPointerException  	84	2	add
469	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  ValueList  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  ValueList  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    ValueList  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
470	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  }	  	compilable	  [FE]  NullPointerException  	84	2	add
471	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  }	  	compilable	  [FE]  NullPointerException  	84	2	add
472	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size());	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
473	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  ValueList  valueList  =  new  ObjectList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  ValueList  valueList  =  new  ObjectList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    ValueList  valueList  =  new  ObjectList(valueList.size());  valueList  =  new  ArrayList(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
474	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(0);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)valueList.get(0);	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.get(0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
475	[BUG]  [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)valueList.get(1);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)valueList.get(1);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  ValueList  valueList  =(ValueList)valueList.get(1);	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.get(0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
476	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
477	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
478	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    if(valueList!=  null)  {  valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
479	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
480	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
481	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    if(valueList!=  null)  {  valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  }	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
482	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    if(valueList!=  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
483	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    if(valueList!=  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
484	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =(List)values.get(option);	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
485	[BUG]  [BUGGY]  valueList  =(List)values.get(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)values.get(option);	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
486	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(values.size()  >  0)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(values.size()  >  0)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
487	[BUG]  [BUGGY]  if(values.size()  >  0)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(values.size()  >  0)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(values.size()  >  0)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
488	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(values.size()  ==  1)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(values.size()  ==  1)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
489	[BUG]  [BUGGY]  if(values.size()  ==  1)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(values.size()  ==  1)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(values.size()  ==  1)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
490	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>(valueList.size()  -  1);	  valueList    =    new    ArrayList    <    String>(valueList.size());    	compilable	  [FE]  NullPointerException  	78	2	replace
491	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size()  -  1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>(valueList.size()  -  1);	  valueList    =    new    ArrayList    <    String>(valueList.size());    	compilable	  [FE]  NullPointerException  	78	2	replace
492	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>(valueList.size()  +  1);	  valueList    =    new    ArrayList    <    String>(valueList.size());    	compilable	  [FE]  NullPointerException  	78	2	replace
493	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size()  +  1);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>(valueList.size()  +  1);	  valueList    =    new    ArrayList    <    String>(valueList.size());    	compilable	  [FE]  NullPointerException  	78	2	replace
494	[BUG]  [BUGGY]  valueList  =  new  LinkedList  <  String>(valueList.size());  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  LinkedList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  LinkedList  <  String>(valueList.size());	  valueList    =    new    ArrayList    <    String>(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
495	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(value);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  defaultValues.add(value);	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    defaultValues.add(value);    	non-compiled	[CE]  not  a  statement	140	None	replace
496	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  defaultValues.add(value);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  defaultValues.add(value);	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    defaultValues.add(value);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
497	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  ArrayList  <  String>();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  valueList  =  new  ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	134	None	replace
498	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  java.util.ArrayList  <  String>();  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  java.util.ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  valueList  =  new  java.util.ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	134	None	replace
499	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  NullPointerException  	134	2	replace
500	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList  =  new  ArrayList  <  String>();  }  [FE]  NullPointerException  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  NullPointerException  	134	2	replace
501	[BUG]  [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)this.valueList.clone();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)this.valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(null);  ValueList  valueList  =(ValueList)this.valueList.clone();	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
502	[BUG]  [BUGGY]  Value  value  =(Value)this.valueList.get(1);  [CE]  cannot  find  symbol  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)this.valueList.get(1);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)this.valueList.get(1);	  Value    value    =(Value)valueList.get(1);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
503	[BUG]  [BUGGY]  Value  value  =(Value)valueList.get(2);  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)valueList.get(2);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)valueList.get(2);	  Value    value    =(Value)valueList.get(1);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
504	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(option);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)valueList.get(option);	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
505	[BUG]  [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)this.valueList.get(option);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)this.valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(null);  ValueList  valueList  =(ValueList)this.valueList.get(option);	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
506	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	40	2	replace
507	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	40	2	replace
508	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	40	2	replace
509	[BUG]  [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues  ==  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	40	2	replace
510	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valuesList  =  new  ArrayList(valueList.size());  }  [CE]  cannot  find  symbol  valuesList  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valuesList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valuesList  =  new  ArrayList(valueList.size());  }	  valueList    =    new    ArrayList(valueList.size());    valuesList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol  valuesList	87	None	replace
511	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  valuesList  =  new  ArrayList(valueList.size());  }  [CE]  cannot  find  symbol  valuesList  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  valuesList  =  new  ArrayList(valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  valuesList  =  new  ArrayList(valueList.size());  }	  valueList    =    new    ArrayList(valueList.size());    valuesList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol  valuesList	87	None	replace
512	[BUG]  [BUGGY]  valuesList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  valuesList  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valuesList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valuesList  =  new  ArrayList(valueList.size());	  valueList    =    new    ArrayList(valueList.size());    valuesList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol  valuesList	87	None	replace
513	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
514	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
515	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
516	[BUG]  [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
517	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues!=  null)  {  valueList.add(option);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
518	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  valueList.add(option);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
519	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey());  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
520	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addValue(entry.getKey());  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addValue(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addValue(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  incompatible  types	47	None	replace
521	[BUG]  [BUGGY]  add(Map.Entry  <  String,Object>  entry,  valueList.entrySet())  {  addValue(entry.getKey());  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  add(Map.Entry  <  String,Object>  entry,  valueList.entrySet())  {  addValue(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	add(Map.Entry  <  String,Object>  entry,  valueList.entrySet())  {  addValue(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  ';'  expected	47	None	replace
522	[BUG]  [BUGGY]  addValue(entry.getKey());  [CE]  cannot  find  symbol  entry  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(entry.getKey());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(entry.getKey());	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol  entry	47	None	replace
523	[BUG]  [BUGGY]  valueList.add(key);  [CE]  cannot  find  symbol  key  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(key);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(key);	          valueList.add(value);    valueList.add(key);    	non-compiled	[CE]  cannot  find  symbol  key	138	None	replace
524	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  StackOverflowError  	124	2	replace
525	[BUG]  [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  StackOverflowError  	124	2	replace
526	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  defaultValues.put(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	defaultValues.put(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	124	2	replace
527	[BUG]  [BUGGY]  defaultValues.put(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  defaultValues.put(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	defaultValues.put(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	124	2	replace
528	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  StackOverflowError  	124	2	replace
529	[BUG]  [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  StackOverflowError  	124	2	replace
530	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	17	2	add
531	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	17	2	add
532	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	17	2	add
533	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	17	2	add
534	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.get(option,  value);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.get(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.get(option,  value);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	17	None	add
535	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	17	2	add
536	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList.add(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	17	2	add
537	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.add(option);  }  else  {  defaultValues.put(option,  value);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    if(defaultValues!=  null)  {  defaultValues.add(option);  }  else  {  defaultValues.put(option,  value);  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
538	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)this.defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)this.defaultSwitches.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)this.defaultSwitches.get(option);	          valueList.add(null);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
539	[BUG]  [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(null);  ValueList  valueList  =(ValueList)defaultSwitches.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(null);  ValueList  valueList  =(ValueList)defaultSwitches.get(option);	          valueList.add(null);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
540	[BUG]  [BUGGY]  aleger.addValue(option,  valueList);  [CE]  cannot  find  symbol  aleger  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  aleger.addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	aleger.addValue(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  aleger	96	None	replace
541	[BUG]  [BUGGY]  validateValue(option,  valueList);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValue(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
542	[BUG]  [BUGGY]  validateValues(option,  valueList);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValues(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValues(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
543	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.add(option);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	110	2	add
544	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.add(option);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	110	2	add
545	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	  	compilable	  [FE]  NullPointerException  	110	2	add
546	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	  	compilable	  [FE]  NullPointerException  	110	2	add
547	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
548	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
549	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	110	2	add
550	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	110	2	add
551	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.remove(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.remove(option);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	110	2	add
552	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.remove(option);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.remove(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.remove(option);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	110	2	add
553	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  values.put(entry.getKey(),  entry.getValue());  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  values.put(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  values.put(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    values.put(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
554	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  values.put(entry.getKey(),  entry.getValue());  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  values.put(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  values.put(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    values.put(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  incompatible  types	46	None	replace
555	[BUG]  [BUGGY]  values.put(entry.getKey(),  entry.getValue());  [CE]  cannot  find  symbol  entry  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  values.put(entry.getKey(),  entry.getValue());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	values.put(entry.getKey(),  entry.getValue());	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    values.put(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  cannot  find  symbol  entry	46	None	replace
556	[BUG]  [BUGGY]  Values.put(entry.getKey(),  entry.getValue());  [CE]  cannot  find  symbol  entry  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Values.put(entry.getKey(),  entry.getValue());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Values.put(entry.getKey(),  entry.getValue());	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    values.put(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  cannot  find  symbol  entry	46	None	replace
557	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  valueList  =  new  ArrayList  <  String>(1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList    <    String>(1);    valueList  =  new  ArrayList  <  String>(1);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	156	2	add
558	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  valueList  =  new  ArrayList  <  String>(1);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  valueList  =  new  ArrayList  <  String>(1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    valueList  =  new  ArrayList  <  String>(1);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	156	2	add
559	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	156	None	add
560	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	156	None	add
561	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  ValueList  <  String>  valueList  =  new  ArrayList  <  String>(1);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  ValueList  <  String>  valueList  =  new  ArrayList  <  String>(1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    ValueList  <  String>  valueList  =  new  ArrayList  <  String>(1);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
562	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  Value  valueList  =  new  ArrayList  <  String>(1);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  Value  valueList  =  new  ArrayList  <  String>(1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    Value  valueList  =  new  ArrayList  <  String>(1);	  	non-compiled	[CE]  cannot  find  symbol	156	None	add
563	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  null;	          valueList.add(null);    valueList    =    null;    	compilable	  [FE]  NullPointerException  	100	2	replace
564	[BUG]  [BUGGY]  valueList  =  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  null;	          valueList.add(null);    valueList    =    null;    	compilable	  [FE]  NullPointerException  	100	2	replace
565	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
566	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  incompatible  types	45	None	replace
567	[BUG]  [BUGGY]  addValue(entry.getKey(),  entry.getValue());  [CE]  cannot  find  symbol  entry  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(entry.getKey(),  entry.getValue());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(entry.getKey(),  entry.getValue());	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  cannot  find  symbol  entry	45	None	replace
568	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values)  {  addValue(entry.getKey(),  entry.getValue());  }  [CE]  for-each  not  applicable  to  expression  type  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values)  {  addValue(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values)  {  addValue(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	45	None	replace
569	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
570	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
571	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
572	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
573	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
574	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
575	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =(List)valueList.get(0);	          valueList.add(this);    valueList    =(List)valueList.get(0);    	compilable	  [FE]  NullPointerException  	109	2	replace
576	[BUG]  [BUGGY]  valueList  =(List)valueList.get(0);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)valueList.get(0);	          valueList.add(this);    valueList    =(List)valueList.get(0);    	compilable	  [FE]  NullPointerException  	109	2	replace
577	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.clear();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.clear();	          valueList.add(this);    valueList    =(List)valueList.get(0);    	compilable	  [FE]  NullPointerException  	109	2	replace
578	[BUG]  [BUGGY]  valueList.clear();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.clear();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.clear();	          valueList.add(this);    valueList    =(List)valueList.get(0);    	compilable	  [FE]  NullPointerException  	109	2	replace
579	[BUG]  [BUGGY]  Value  valueList  =(Value)valueList.get(0);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  valueList  =(Value)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  valueList  =(Value)valueList.get(0);	          valueList.add(value);    Value    valueList    =(Value)valueList.get(0);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
580	[BUG]  [BUGGY]  valueList.add(value);  Value  valueList  =(Value)valueList.get(1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(value);  Value  valueList  =(Value)valueList.get(1);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(value);  Value  valueList  =(Value)valueList.get(1);	          valueList.add(value);    Value    valueList    =(Value)valueList.get(0);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
581	[BUG]  [BUGGY]  Value  value  =(Value)this.values.get(option);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)this.values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)this.values.get(option);	  Value    value    =(Value)values.get(option);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
582	[BUG]  [BUGGY]  Value  value  =(Value)this.defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)this.defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)this.defaultValues.get(option);	  Value    value    =(Value)values.get(option);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
583	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.add(null);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	97	2	add
584	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.add(null);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	97	2	add
585	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.remove(null);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.remove(null);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	97	2	add
586	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.remove(null);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.remove(null);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.remove(null);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	97	2	add
587	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	97	2	add
588	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	97	2	add
589	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  valuesList  =  new  ArrayList();  [CE]  cannot  find  symbol  valuesList  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  valuesList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.add(null);  valuesList  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol  valuesList	97	None	add
590	[BUG]  [BUGGY]  valueList  =(List)valueList.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)valueList.get(option);	          valueList.add(option);    valueList    =(List)valueList.get(option);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	112	None	replace
591	[BUG]  [BUGGY]  valueList.add(option,  value);  [CE]  no  suitable  method  found  for  add(Option,Object)  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(option,  value);	          valueList.add(option);    valueList    =(List)valueList.get(option);    	non-compiled	[CE]  no  suitable  method  found  for  add(Option,Object)	112	None	replace
592	[BUG]  [BUGGY]  ValueList  valueList  =(List)valueList.get(option);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(List)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(List)valueList.get(option);	          valueList.add(option);    valueList    =(List)valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
593	[BUG]  [BUGGY]  Value  value  =(Value)values.get(0);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)values.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)values.get(0);	  Value    value    =(Value)this.valueList.get(0);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
594	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(value);  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    valueList.add(value);  valueList.add(value);	  	compilable	  [FE]  NullPointerException  	35	2	add
595	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(value);  valueList.add(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(value);  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    valueList.add(value);  valueList.add(value);	  	compilable	  [FE]  NullPointerException  	35	2	add
596	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
597	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
598	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    if(valueList  ==  null)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
599	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  valueList.add(value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList  ==  null)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList  ==  null)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
600	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  options);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  options);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
601	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  options);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  options);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  options);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
602	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
603	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }	  	compilable	  [FE]  NullPointerException  	35	2	add
604	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ')'  expected	144	None	replace
605	[BUG]  [BUGGY]  For(Option  option  :  values())  {  addValue(option,  value);  }  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ')'  expected	144	None	replace
606	[BUG]  [BUGGY]  For(Option  option  :  values)  {  addValue(option,  value);  }  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  values)  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  values)  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ')'  expected	144	None	replace
607	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(this);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)valueList.get(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)valueList.get(this);	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.get(this);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
608	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  expected	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	64	None	replace
609	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>();  expected:	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	64	2	replace
610	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected:  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  expected:	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	64	2	replace
611	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	64	None	replace
612	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	95	2	add
613	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	95	2	add
614	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	95	2	add
615	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	95	2	add
616	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	95	None	add
617	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  If(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  If(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    If(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  ';'  expected	95	None	add
618	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    -    2);    valueList  =  new  ArrayList(valueList.size()  -  2);	  	compilable	  [FE]  NullPointerException  	29	2	add
619	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    2);    valueList  =  new  ArrayList(valueList.size()  -  2);	  	compilable	  [FE]  NullPointerException  	29	2	add
620	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  ValueList  valueList  =  new  ArrayList(valueList.size()  -  2);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  ValueList  valueList  =  new  ArrayList(valueList.size()  -  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    2);    ValueList  valueList  =  new  ArrayList(valueList.size()  -  2);	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
621	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  ValueList  =  new  ArrayList(valueList.size()  -  2);  [CE]  cannot  find  symbol  ValueList  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  ValueList  =  new  ArrayList(valueList.size()  -  2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    2);    ValueList  =  new  ArrayList(valueList.size()  -  2);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	29	None	add
622	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  3);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    -    2);    valueList  =  new  ArrayList(valueList.size()  -  3);	  	compilable	  [FE]  NullPointerException  	29	2	add
623	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  3);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  3);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    2);    valueList  =  new  ArrayList(valueList.size()  -  3);	  	compilable	  [FE]  NullPointerException  	29	2	add
624	[BUG]  [BUGGY]  addValue(value,  valueList,  defaultSwitches);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(value,  valueList,  defaultSwitches);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(value,  valueList,  defaultSwitches);	  addValue(value,    valueList);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	67	None	replace
625	[BUG]  [BUGGY]  addValue(value,  valueList,  values);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(value,  valueList,  values);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(value,  valueList,  values);	  addValue(value,    valueList);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	67	None	replace
626	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.add(null);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.remove(null);    valueList.add(null);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
627	[BUG]  [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.add(null);  valueList.remove(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.add(null);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.remove(null);    valueList.add(null);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
628	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.remove(null);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.remove(null);    valueList.remove(null);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
629	[BUG]  [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.remove(null);  valueList.remove(null);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.remove(null);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.remove(null);    valueList.remove(null);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
630	[BUG]  [BUGGY]          valueList.add(null);    valueList.remove(null);  ValueList  valueList  =(ValueList)valueList.get(option);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  ValueList  valueList  =(ValueList)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.remove(null);    ValueList  valueList  =(ValueList)valueList.get(option);	  	non-compiled	[CE]  cannot  find  symbol	146	None	add
631	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valueList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList    <    String>(valueList.size());    valueList  =  new  ArrayList  <  String>(valueList.size());	  	compilable	  [FE]  NullPointerException  	77	2	add
632	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valueList  =  new  ArrayList  <  String>(valueList.size());  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valueList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    valueList  =  new  ArrayList  <  String>(valueList.size());	  	compilable	  [FE]  NullPointerException  	77	2	add
633	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueList  <  String>  valueList  =  new  ArrayList  <  String>(valueList.size());  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueList  <  String>  valueList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    ValueList  <  String>  valueList  =  new  ArrayList  <  String>(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
634	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueList  valueList  =  new  ArrayList  <  String>(valueList.size());  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueList  valueList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    ValueList  valueList  =  new  ArrayList  <  String>(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
635	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valueList  =  new  ArrayList  <  String>(valueList.size());  this.defaultValues.put(option,  defaultValues);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList    <    String>(valueList.size());    valueList  =  new  ArrayList  <  String>(valueList.size());  this.defaultValues.put(option,  defaultValues);	  	compilable	  [FE]  NullPointerException  	77	2	add
636	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valueList  =  new  ArrayList  <  String>(valueList.size());  this.defaultValues.put(option,  defaultValues);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valueList  =  new  ArrayList  <  String>(valueList.size());  this.defaultValues.put(option,  defaultValues);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    valueList  =  new  ArrayList  <  String>(valueList.size());  this.defaultValues.put(option,  defaultValues);	  	compilable	  [FE]  NullPointerException  	77	2	add
637	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	37	2	add
638	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	37	2	add
639	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  values.put(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();  values.put(option,  value);	  	compilable	  [FE]  NullPointerException  	37	2	add
640	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  values.put(option,  value);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  values.put(option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();  values.put(option,  value);	  	compilable	  [FE]  NullPointerException  	37	2	add
641	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	37	2	add
642	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	37	2	add
643	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	37	2	add
644	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	37	2	add
645	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(value);  if(valueList!=  null)  {  valuesList  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  find  symbol  valuesList  [FE]            NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList.add(value);  if(valueList!=  null)  {  valuesList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList.add(value);  if(valueList!=  null)  {  valuesList  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  find  symbol  valuesList	37	None	add
646	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	18	2	replace
647	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	18	2	replace
648	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	18	2	replace
649	[BUG]  [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	18	2	replace
650	[BUG]  [BUGGY]  valueList  =  new  LinkedHashSet();  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  LinkedHashSet();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  LinkedHashSet();	  valueList    =    new    TreeSet();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
651	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  value;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  value;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  value;	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    value;    	non-compiled	[CE]  not  a  statement	141	None	replace
652	[BUG]  [BUGGY]  Option  option  =  options.values();  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  options.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  options.values();	  Option    option    =    valueList.values();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	153	None	replace
653	[BUG]  [BUGGY]  Option  option  =  values.values();  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  values.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  values.values();	  Option    option    =    valueList.values();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	153	None	replace
654	[BUG]  [BUGGY]  Value  value  =  list.values();  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  list.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  list.values();	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
655	[BUG]  [BUGGY]  Value  value  =  valuesList.values();  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  valuesList.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  valuesList.values();	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
656	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  Value  valueList  =(Value)valueList.get(option);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  Value  valueList  =(Value)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    Value  valueList  =(Value)valueList.get(option);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
657	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  Value  valueList  =(Value)valueList.get(0);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  Value  valueList  =(Value)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    Value  valueList  =(Value)valueList.get(0);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
658	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList  =  new  ArrayList();  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);	  	compilable	  [FE]  NullPointerException  	35	2	add
659	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  valueList  =  new  ArrayList();  valueList.add(value);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList  =  new  ArrayList();  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);	  	compilable	  [FE]  NullPointerException  	35	2	add
660	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  addValue(option,  valueList);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  options.values())  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  options.values())  {  addValue(option,  valueList);  }	  for(Option    option    :    options.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	102	None	replace
661	[BUG]  [BUGGY]  Option  option  =  option.getOption(value);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  option.getOption(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  option.getOption(value);	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	144	None	replace
662	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  value);  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option,  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addValue(option,  value);	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ')'  expected	144	None	replace
663	[BUG]  [BUGGY]  valueList  =  new  TreeSet  <  String>();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  TreeSet  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  TreeSet  <  String>();	  valueList    =    new    LinkedList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
664	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }	          valueList.add(option);    valueList.add(option);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
665	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.add(option);	  	compilable	  [FE]  NullPointerException  	110	2	add
666	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.add(option);	  	compilable	  [FE]  NullPointerException  	110	2	add
667	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
668	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
669	[BUG]  [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
670	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	8	2	replace
671	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  }  [FE]  NullPointerException  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  }	          addValue(option,    valueList);    if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  NullPointerException  	8	2	replace
672	[BUG]  [BUGGY]  Value  value  =(Value)valueList.get(option,  option);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)valueList.get(option,  option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)valueList.get(option,  option);	  Value    value    =(Value)valueList.get(option,    value);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
673	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  values);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  values);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	95	2	add
674	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  values);  }  else  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  values);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  values);  }  else  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	95	2	add
675	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  for(Option  option  :  defaultValues.values())  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  for(Option  option  :  defaultValues.values())  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  for(Option  option  :  defaultValues.values())  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
676	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  valueList);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  valueList);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	3	None	add
677	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  addValue(option,  valueList);  }	  if(valueList!=    null)    {    addValue(option,    valueList);    }    	compilable	  [FE]  StackOverflowError  	92	2	replace
678	[BUG]  [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  addValue(option,  valueList);  }	  if(valueList!=    null)    {    addValue(option,    valueList);    }    	compilable	  [FE]  StackOverflowError  	92	2	replace
679	[BUG]  [BUGGY]  wires.add(option,  valueList);  [CE]  cannot  find  symbol  wires  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  wires.add(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	wires.add(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  wires	92	None	replace
680	[BUG]  [BUGGY]  Option  option  =  option.getOption(valueList);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  option.getOption(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  option.getOption(valueList);	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	154	None	replace
681	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
682	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
683	[BUG]  [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
684	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
685	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList.size()  >  0)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
686	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueList  =  new  ArrayList  <  String>(valueList.size());  [CE]  cannot  find  symbol  ValueList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    ValueList  =  new  ArrayList  <  String>(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol  ValueList	77	None	add
687	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  Value  valueList  =  new  ArrayList  <  String>(valueList.size());  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  Value  valueList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    Value  valueList  =  new  ArrayList  <  String>(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
688	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valuesList  =  new  ArrayList  <  String>(valueList.size());  [CE]  cannot  find  symbol  valuesList  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  valuesList  =  new  ArrayList  <  String>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    valuesList  =  new  ArrayList  <  String>(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol  valuesList	77	None	add
689	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(ValueList.size()  -  1);  [CE]  cannot  find  symbol  ValueList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  1);  valueList  =  new  ArrayList(ValueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    1);    valueList  =  new  ArrayList(ValueList.size()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	25	None	add
690	[BUG]  [BUGGY]  ||  valueList.size()  >  1)  {  for(Option  option  :  values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  >  1)  {  for(Option  option  :  values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  >  1)  {  for(Option  option  :  values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
691	[BUG]  [BUGGY]  ||  valueList.size()  >  0)  {  for(Option  option  :  options())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  >  0)  {  for(Option  option  :  options())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  >  0)  {  for(Option  option  :  options())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
692	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
693	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	105	2	replace
694	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkNotNull(valueList);  }  [CE]  cannot  find  symbol  Preconditions  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkNotNull(valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkNotNull(valueList);  }	          valueList.add(this);    valueList    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol  Preconditions	105	None	replace
695	[BUG]  [BUGGY]  valueList.add(this);  if(valueList!=  null)  {  valueList  =(List)valueList.clone();  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  if(valueList!=  null)  {  valueList  =(List)valueList.clone();  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  if(valueList!=  null)  {  valueList  =(List)valueList.clone();  }	          valueList.add(this);    valueList    =(List)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
696	[BUG]  [BUGGY]  valueList  =(List)valueList.clone();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)valueList.clone();	          valueList.add(this);    valueList    =(List)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
697	[BUG]  [BUGGY]  Aleger  <  Option>  value  =  values.values();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <  Option>  value  =  values.values();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <  Option>  value  =  values.values();	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
698	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(keyList.size());  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  keyList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(keyList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(keyList.size());  valueList  =  new  ArrayList(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol  keyList	84	None	add
699	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(ValueList.size());  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  ValueList  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(ValueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(ValueList.size());  valueList  =  new  ArrayList(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol  ValueList	84	None	add
700	[BUG]  [BUGGY]  valueList  =  new  TreeList();  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  TreeList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  TreeList();	  valueList    =    new    TreeSet();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
701	[BUG]  [BUGGY]  valueList  =  new  ArrayList(keyList.size());  [CE]  cannot  find  symbol  keyList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(keyList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(keyList.size());	  valueList    =    new    ArrayList(valueList.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol  keyList	26	None	replace
702	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	37	None	add
703	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  Value  value  =(Value)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  Value  value  =(Value)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    Value  value  =(Value)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
704	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
705	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	13	2	add
706	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	add
707	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList  <  Option>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  java.util.ArrayList  <  Option>();	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
708	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList  <  Option>();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList  <  Option>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  java.util.ArrayList  <  Option>();	  valueList    =    new    java.util.ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
709	[BUG]  [BUGGY]  For(Option  option  :  values.values())  {  addValue(option,  option);  }  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  values.values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  values.values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ')'  expected	142	None	replace
710	[BUG]  [BUGGY]  ||  valueList.size()  >  1)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  >  1)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  >  1)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
711	[BUG]  [BUGGY]  ||  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addOption(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
712	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.remove(value);	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
713	[BUG]  [BUGGY]  valueList.remove(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.remove(value);	          valueList.add(value);    valueList.remove(value);    	compilable	  [FE]  NullPointerException  	137	2	replace
714	[BUG]  [BUGGY]  valueList.addAll(value);  [CE]  no  suitable  method  found  for  addAll(Object)  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.addAll(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.addAll(value);	  valueList.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Object)	89	None	replace
715	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(4);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList  <  String>(4);	  valueList    =    new    ArrayList    <    String>(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	157	2	replace
716	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(4);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(4);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>(4);	  valueList    =    new    ArrayList    <    String>(1);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	157	2	replace
717	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  valueList  =  new  ArrayList  <  String>(2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList    <    String>(1);    valueList  =  new  ArrayList  <  String>(2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	156	2	add
718	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  valueList  =  new  ArrayList  <  String>(2);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  valueList  =  new  ArrayList  <  String>(2);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    valueList  =  new  ArrayList  <  String>(2);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	156	2	add
719	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  valueList;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  valueList;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    junit.framework.ComparisonFailure:  valueList;	  	non-compiled	[CE]  not  a  statement	156	None	add
720	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =(List)defaultValues.get(option);	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  UnsupportedOperationException  	40	2	replace
721	[BUG]  [BUGGY]  valueList  =(List)defaultValues.get(option);  [FE]  UnsupportedOperationException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)defaultValues.get(option);	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  UnsupportedOperationException  	40	2	replace
722	[BUG]  [BUGGY]  valueList  =  defaultValues.get(option);  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  defaultValues.get(option);	          valueList.add(value);    if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    	non-compiled	[CE]  incompatible  types	40	None	replace
723	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addKey(entry.getKey(),  entry.getValue());  }  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addKey(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addKey(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
724	[BUG]  [BUGGY]  Value  value  =(Value)values.get(option,  valueList);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)values.get(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)values.get(option,  valueList);	  Value    value    =(Value)values.get(option);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
725	[BUG]  [BUGGY]  if(value  instanceof  Argument)  {  Value  value  =(Value)value;  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(value  instanceof  Argument)  {  Value  value  =(Value)value;  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(value  instanceof  Argument)  {  Value  value  =(Value)value;  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
726	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valuelist.size());  [CE]  cannot  find  symbol  valuelist  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valuelist.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(valuelist.size());	  valueList    =    new    ArrayList(valueList.size()    +    1);    	non-compiled	[CE]  cannot  find  symbol  valuelist	28	None	replace
727	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
728	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
729	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.add(option);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.remove(null);    valueList.add(option);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
730	[BUG]  [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.add(option);  valueList.remove(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.add(option);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.remove(null);    valueList.add(option);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
731	[BUG]  [BUGGY]  valueList  =(ValueList)this.defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(ValueList)this.defaultSwitches.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(ValueList)this.defaultSwitches.get(option);	          valueList.add(null);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
732	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(defaultValues!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
733	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
734	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  ObjectList  <  String>();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  ObjectList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  valueList  =  new  ObjectList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	134	None	replace
735	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
736	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
737	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  else  {  Preconditions.checkNotNull(valueList);  }  [CE]  cannot  find  symbol  Preconditions  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  else  {  Preconditions.checkNotNull(valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  else  {  Preconditions.checkNotNull(valueList);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	114	None	replace
738	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(option!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  if(option!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    if(option!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
739	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.add(null);	  	compilable	  [FE]  NullPointerException  	97	2	add
740	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  new  ArrayList();  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    new    ArrayList();    valueList.add(null);	  	compilable	  [FE]  NullPointerException  	97	2	add
741	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList    =    null;    valueList  =  null;	  	compilable	  [FE]  NullPointerException  	99	2	add
742	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  null;  valueList  =  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    null;    valueList  =  null;	  	compilable	  [FE]  NullPointerException  	99	2	add
743	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  [Delete]  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	[Delete]	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
744	[BUG]  [BUGGY]  Aleger  <  N,  V>  valueList  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <  N,  V>  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <  N,  V>  valueList  =  defaultValues.get(option);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
745	[BUG]  [BUGGY]  parent.addValue(option,  valueList);  [CE]  cannot  find  symbol  parent  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  parent.addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	parent.addValue(option,  valueList);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  parent	94	None	replace
746	[BUG]  [BUGGY]  Aleger  <  Value>  value  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <  Value>  value  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <  Value>  value  =  defaultValues.get(option);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
747	[BUG]  [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)values.get(option);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  ValueList  valueList  =(ValueList)values.get(option);	          valueList.add(this);    ValueList    valueList    =(ValueList)this.defaultValues.get(option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
748	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  Value  value  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  Value  value  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    Value  value  =  defaultValues.get(option);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
749	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	39	2	add
750	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	39	2	add
751	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	39	2	add
752	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =(List)defaultValues.get(option);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	39	2	add
753	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  Object  value  =  defaultValues.get(option);  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  Object  value  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    Object  value  =  defaultValues.get(option);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	39	None	add
754	[BUG]  [BUGGY]  ||  valueList.size()  >  1)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  >  1)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  >  1)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
755	[BUG]  [BUGGY]  ||  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  >  0)  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
756	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	41	2	add
757	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	41	2	add
758	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
759	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(value);  }	  	compilable	  [FE]  NullPointerException  	41	2	add
760	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList.add(value);  }	  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	41	None	add
761	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	41	2	add
762	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)values.get(option);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	41	2	add
763	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList    =    new    ArrayList(valueList.size()    -    2);    valueList  =  new  ArrayList(valueList.size()  -  1);	  	compilable	  [FE]  NullPointerException  	29	2	add
764	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  -  2);  valueList  =  new  ArrayList(valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    -    2);    valueList  =  new  ArrayList(valueList.size()  -  1);	  	compilable	  [FE]  NullPointerException  	29	2	add
765	[BUG]  [BUGGY]  valueList.add(defaultValues);  valuesList.add(defaultValues);  [CE]  cannot  find  symbol  valuesList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  valuesList.add(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    valuesList.add(defaultValues);	  	non-compiled	[CE]  cannot  find  symbol  valuesList	119	None	add
766	[BUG]  [BUGGY]  valueList.add(defaultValues);  ValueList  valueList  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  ValueList  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    ValueList  valueList  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol	119	None	add
767	[BUG]  [BUGGY]  valueList.add(defaultValues);  ValueList.add(defaultValues);  [CE]  cannot  find  symbol  ValueList  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  ValueList.add(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    ValueList.add(defaultValues);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	119	None	add
768	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
769	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	5	2	add
770	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	5	2	add
771	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  Object  value  =  defaultValues.get(option);  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  Object  value  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    Object  value  =  defaultValues.get(option);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	5	None	add
772	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  Object  option  =  defaultValues.get(option);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  Object  option  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    Object  option  =  defaultValues.get(option);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	5	None	add
773	[BUG]  [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(ValueList.size()  +  1);  [CE]  cannot  find  symbol  ValueList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList(valueList.size()  +  1);  valueList  =  new  ArrayList(ValueList.size()  +  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList(valueList.size()    +    1);    valueList  =  new  ArrayList(ValueList.size()  +  1);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	27	None	add
774	[BUG]  [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)valueList.get(option);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  ValueList  valueList  =(ValueList)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  ValueList  valueList  =(ValueList)valueList.get(option);	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.get(0);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
775	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
776	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
777	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);	  	compilable	  [FE]  NullPointerException  	129	2	add
778	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);	  	compilable	  [FE]  NullPointerException  	129	2	add
779	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  java.util.ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);  valueList  =  new  java.util.ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
780	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  java.util.ArrayList();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  java.util.ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);  valueList  =  new  java.util.ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
781	[BUG]  [BUGGY]  addValue(valueList,  option,  valueList);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(valueList,  option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(valueList,  option,  valueList);	  addValue(valueList,    option);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	90	None	replace
782	[BUG]  [BUGGY]  Option  option  =  option.getAssignments();  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =  option.getAssignments();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =  option.getAssignments();	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	145	None	replace
783	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option.getAssignment());  }  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  addValue(option.getAssignment());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  addValue(option.getAssignment());  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  ')'  expected	145	None	replace
784	[BUG]  [BUGGY]  For(Option  option  :  valueList.values())  {  setValue(option.getAssignments());  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  For(Option  option  :  valueList.values())  {  setValue(option.getAssignments());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	For(Option  option  :  valueList.values())  {  setValue(option.getAssignments());  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  ')'  expected	145	None	replace
785	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
786	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
787	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  return;  }  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  return;  }	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
788	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Value)  {  addValue(option,  value);  }  else  {  defaultValues.add(option);  }	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
789	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }	          valueList.add(this);    valueList.add(this);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
790	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }	          valueList.add(this);    valueList.add(this);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
791	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	7	2	add
792	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	7	2	add
793	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  Object  valueList  =  defaultValues.get(option);  [CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  Object  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    Object  valueList  =  defaultValues.get(option);	  	non-compiled	[CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)	7	None	add
794	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	7	None	add
795	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
796	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  values.put(option,  valueList);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
797	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
798	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  NullPointerException  	111	2	replace
799	[BUG]  [BUGGY]  addValue(value,  option,  valueList);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(value,  option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(value,  option,  valueList);	  addValue(value,    option);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	126	None	replace
800	[BUG]  [BUGGY]  valueList.add(option,  valueList);  [CE]  no  suitable  method  found  for  add(Option,List)  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(option,  valueList);	          valueList.add(option);    valueList    =(List)valueList.get(option);    	non-compiled	[CE]  no  suitable  method  found  for  add(Option,List)	112	None	replace
801	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  else  {  defaultValues.add(option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  else  {  defaultValues.add(option);  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size()));    	non-compiled	[CE]  ';'  expected	151	None	replace
802	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.get(option,  valueList);  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
803	[BUG]  [BUGGY]  valueList  =(ValueList)valueList.get(null);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(ValueList)valueList.get(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(ValueList)valueList.get(null);	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.get(null);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
804	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =  defaultValues.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =  defaultValues.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList  =  defaultValues.get(option);  if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  incompatible  types	43	None	add
805	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  Value  value  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  Value  value  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    Value  value  =  defaultValues.get(option);	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
806	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	43	None	add
807	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
808	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  defaultValues);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
809	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Option)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    if(option  instanceof  Option)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
810	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Option)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Option)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    if(option  instanceof  Option)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
811	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        addValue(option,    valueList);    if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
812	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	1	2	add
813	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.clear();  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.clear();  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
814	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.clear();  return;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.clear();  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.clear();  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
815	[BUG]  [BUGGY]  addValue(value,  valueList,  defaultValues);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(value,  valueList,  defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(value,  valueList,  defaultValues);	  addValue(value,    valueList);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	67	None	replace
816	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  defaultValues.add(option);  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
817	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  addValue(option,  valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  addValue(option,  valueList);  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  StackOverflowError  	85	2	replace
818	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  addValue(option,  valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  addValue(option,  valueList);  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  StackOverflowError  	85	2	replace
819	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  ValueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  ValueList  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  ValueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    ValueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol  ValueList	59	None	add
820	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	59	2	add
821	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	59	2	add
822	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList.remove(option);  valueList.remove(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    valueList.remove(option);  valueList.remove(option);	  	compilable	  [FE]  NullPointerException  	158	2	add
823	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList.remove(option);  valueList.remove(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList.remove(option);  valueList.remove(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    valueList.remove(option);  valueList.remove(option);	  	compilable	  [FE]  NullPointerException  	158	2	add
824	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.remove(option);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	158	2	add
825	[BUG]  [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.remove(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.remove(option);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	158	2	add
826	[BUG]  [BUGGY]  valueList  =(ValueList)valueList.get(option);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(ValueList)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(ValueList)valueList.get(option);	          valueList.add(null);    ValueList    valueList    =(ValueList)valueList.get(option);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
827	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  valueList  =  new  java.util.ArrayList();  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  valueList  =  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    junit.framework.ComparisonFailure:  valueList  =  new  java.util.ArrayList();	  	non-compiled	[CE]  not  a  statement	79	None	add
828	[BUG]  [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  new  java.util.ArrayList();  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  java.util.ArrayList();  junit.framework.ComparisonFailure:  new  java.util.ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    java.util.ArrayList();    junit.framework.ComparisonFailure:  new  java.util.ArrayList();	  	non-compiled	[CE]  not  a  statement	79	None	add
829	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList.add(this);	  	compilable	  [FE]  NullPointerException  	108	2	add
830	[BUG]  [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =(List)valueList.get(0);    valueList.add(this);	  	compilable	  [FE]  NullPointerException  	108	2	add
831	[BUG]  [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  ValueList.add(this);  valueList  =(List)valueList.get(0);  [CE]  cannot  find  symbol  ValueList  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =(List)valueList.get(0);  ValueList.add(this);  valueList  =(List)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =(List)valueList.get(0);    ValueList.add(this);  valueList  =(List)valueList.get(0);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	108	None	add
832	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	104	2	add
833	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	104	2	add
834	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valuesList  =  new  ArrayList();  [CE]  cannot  find  symbol  valuesList  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valuesList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);  valuesList  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol  valuesList	104	None	add
835	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList  <  String>();  expected.framework.ComparisonFailure:  expected	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	64	None	replace
836	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList.add(null);  }	          valueList.add(null);    valueList.add(null);    	compilable	  [FE]  NullPointerException  	51	2	replace
837	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(null);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(null);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(null);  }	          valueList.add(null);    valueList.add(null);    	compilable	  [FE]  NullPointerException  	51	2	replace
838	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(null);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(null);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(null);  }  else  {  defaultValues.add(option);  }	          valueList.add(null);    valueList.add(null);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
839	[BUG]  [BUGGY]  values.add(this);  ValueList  valueList  =(ValueList)valueList.get(this);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  values.add(this);  ValueList  valueList  =(ValueList)valueList.get(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	values.add(this);  ValueList  valueList  =(ValueList)valueList.get(this);	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.get(this);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
840	[BUG]  [BUGGY]  for(Option  option  :  options.values())  {  addOption(option,  valueList);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Option  option  :  options.values())  {  addOption(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Option  option  :  options.values())  {  addOption(option,  valueList);  }	  for(Option    option    :    options.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	118	None	replace
841	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  valueList.add(option);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    	compilable	  [FE]  NullPointerException  	16	2	replace
842	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList.add(option);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    	compilable	  [FE]  NullPointerException  	16	2	replace
843	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList  =  new  ArrayList();  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    valueList  =  new  ArrayList();  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
844	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList  =  new  ArrayList();  valueList.remove(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList  =  new  ArrayList();  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    valueList  =  new  ArrayList();  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
845	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  Value  valueList  =(Value)valueList.get(option);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  Value  valueList  =(Value)valueList.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    Value  valueList  =(Value)valueList.get(option);	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
846	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  Value  valueList  =(Value)valueList.get(0);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  Value  valueList  =(Value)valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    Value  valueList  =(Value)valueList.get(0);	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
847	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	15	2	add
848	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	15	2	add
849	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
850	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =(List)values.get(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
851	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
852	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	15	2	add
853	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList.add(option);  }  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =(List)valueList.get(option);  if(valueList!=  null)  {  valueList.add(option);  }	  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	15	None	add
854	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =  defaultValues.get(option);  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList  =  defaultValues.get(option);	  	non-compiled	[CE]  incompatible  types	17	None	add
855	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	17	None	add
856	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	17	2	add
857	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	17	2	add
858	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	17	2	add
859	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =(List)defaultValues.get(option);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	17	2	add
860	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    addValue(option,    valueList);    	compilable	  [FE]  StackOverflowError  	2	2	replace
861	[BUG]  [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  addValue(option,  valueList);  }  else  {  addValue(option,  valueList);  }	          addValue(option,    valueList);    addValue(option,    valueList);    	compilable	  [FE]  StackOverflowError  	2	2	replace
862	[BUG]  [BUGGY]  ValueUtils.addValue(valueList,  option);  [CE]  cannot  find  symbol  ValueUtils  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueUtils.addValue(valueList,  option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueUtils.addValue(valueList,  option);	  ValueUtils.addValue(value,    valueList);    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	155	None	replace
863	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    valueList.add(this);	  	compilable	  [FE]  NullPointerException  	70	2	add
864	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    valueList.add(this);	  	compilable	  [FE]  NullPointerException  	70	2	add
865	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(option  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(option  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	14	2	replace
866	[BUG]  [BUGGY]  if(option  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(option  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(option  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	14	2	replace
867	[BUG]  [BUGGY]  Option  option  =(Option)valueList.get(0);  if(option.hasArg()  ||  option.hasArg())  {  addValue(option,  value);  }  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =(Option)valueList.get(0);  if(option.hasArg()  ||  option.hasArg())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =(Option)valueList.get(0);  if(option.hasArg()  ||  option.hasArg())  {  addValue(option,  value);  }	  Option    option    =(Option)valueList.get(0);    if(option.hasArg())    {    addValue(option,    value);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	56	None	replace
868	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addOption(entry.getKey());  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addOption(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addOption(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addOption(entry.getKey());    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	49	None	replace
869	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addOption(value.getKey());  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]                  NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addOption(value.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addOption(value.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addOption(entry.getKey());    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	49	None	replace
870	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	50	2	add
871	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	50	2	add
872	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valuesList  =  new  ArrayList  <  String>(valueList);  [CE]  cannot  find  symbol  valuesList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valuesList  =  new  ArrayList  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    valuesList  =  new  ArrayList  <  String>(valueList);	  	non-compiled	[CE]  cannot  find  symbol  valuesList	116	None	add
873	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  ArrayList  <  String>(keyList);  [CE]  cannot  find  symbol  keyList  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  ArrayList  <  String>(keyList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    valueList  =  new  ArrayList  <  String>(keyList);	  	non-compiled	[CE]  cannot  find  symbol  keyList	116	None	add
874	[BUG]  [BUGGY]  Value  value  =(Value)valuelist.get(option);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =(Value)valuelist.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =(Value)valuelist.get(option);	  Value    value    =(Value)keyList.get(option);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
875	[BUG]  [BUGGY]  Aleger  <  Value>  valueList  =  normalised.getValueList();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <  Value>  valueList  =  normalised.getValueList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <  Value>  valueList  =  normalised.getValueList();	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
876	[BUG]  [BUGGY]  Aleger  <?>  valueList  =  normalised.getValueList();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <?>  valueList  =  normalised.getValueList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <?>  valueList  =  normalised.getValueList();	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
877	[BUG]  [BUGGY]  Aleger  <  Value>  valueList  =  normalised.getValue(option);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Aleger  <  Value>  valueList  =  normalised.getValue(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Aleger  <  Value>  valueList  =  normalised.getValue(option);	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
878	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addValue(entry.getKey());  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addValue(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addValue(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	47	None	replace
879	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addValue(value.getKey());  }  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addValue(value.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  value  :  valueList.entrySet())  {  addValue(value.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	47	None	replace
880	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	11	2	add
881	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	11	2	add
882	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  defaultValues.get(option);  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList  =  defaultValues.get(option);	  	non-compiled	[CE]  incompatible  types	19	None	add
883	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	19	2	add
884	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	19	2	add
885	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	19	2	add
886	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =(List)defaultValues.get(option);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	19	2	add
887	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(value  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(value  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	14	2	replace
888	[BUG]  [BUGGY]  if(value  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(value  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(value  instanceof  Argument)  {  valueList  =  new  ArrayList();  values.put(option,  value);  }	          valueList.add(option);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	14	2	replace
889	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.remove(option);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.remove(null);    valueList.remove(option);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
890	[BUG]  [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.remove(option);  valueList.remove(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.remove(null);  valueList.remove(option);  valueList.remove(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.remove(null);    valueList.remove(option);  valueList.remove(null);	  	compilable	  [FE]  NullPointerException  	146	2	add
891	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  TreeSet  <  String>(valueList);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList);  valueList  =  new  TreeSet  <  String>(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList);    valueList  =  new  TreeSet  <  String>(valueList);	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
892	[BUG]  [BUGGY]  read()  {  addValue(option,  valueList);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  read()  {  addValue(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	read()  {  addValue(option,  valueList);  }	  if(valueList!=    null)    {    addValue(option,    valueList);    }    	non-compiled	[CE]  ';'  expected	92	None	replace
893	[BUG]  [BUGGY]  forceValueWrite(option.getAssignments(),  value);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValueWrite(option.getAssignments(),  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValueWrite(option.getAssignments(),  value);	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
894	[BUG]  [BUGGY]  forceValues(option.getAssignments());  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues(option.getAssignments());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues(option.getAssignments());	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option.getAssignments());    }    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
895	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
896	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    defaultValues.put(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	3	2	add
897	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  defaultValues.put(option,  valueList);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    defaultValues.put(option,  valueList);	  	compilable	  [FE]  StackOverflowError  	3	2	add
898	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	39	None	add
899	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
900	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	39	2	add
901	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  NullPointerException  	60	2	replace
902	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  [FE]  NullPointerException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  NullPointerException  	60	2	replace
903	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	replace
904	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    valueList    =    new    ArrayList    <    String>();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	replace
905	[BUG]  [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  ValueList  valueList  =  new  ValueList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList(valueList.size());    valueList  =  new  ArrayList(valueList.size());  ValueList  valueList  =  new  ValueList(valueList.size());  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList(valueList.size());        valueList    =    new    ArrayList(valueList.size());    ValueList  valueList  =  new  ValueList(valueList.size());  valueList  =  new  ArrayList(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
906	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  valueList.values())  {  addValue(option,  option);  }  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  valueList.values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  valueList.values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ';'  expected	142	None	replace
907	[BUG]  [BUGGY]  forceValueWrite(valueList,  valueList.values())  {  addValue(option,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValueWrite(valueList,  valueList.values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValueWrite(valueList,  valueList.values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ';'  expected	142	None	replace
908	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  values.values())  {  addValue(option,  option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  values.values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  values.values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ';'  expected	142	None	replace
909	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  options.values())  {  addValue(option,  option);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  options.values())  {  addValue(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  options.values())  {  addValue(option,  option);  }	  if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addValue(option,    option);    }    	non-compiled	[CE]  ';'  expected	142	None	replace
910	[BUG]  [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  values.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
911	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	15	2	add
912	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)values.get(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	15	2	add
913	[BUG]  [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  keyList  =  null;  [CE]  cannot  find  symbol  keyList  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList  =  null;  valueList.add(null);  keyList  =  null;  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList    =    null;    valueList.add(null);  keyList  =  null;	  	non-compiled	[CE]  cannot  find  symbol  keyList	99	None	add
914	[BUG]  [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
915	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	124	2	replace
916	[BUG]  [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	124	2	replace
917	[BUG]  [BUGGY]  addValue(value,  option,  value);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        StackOverflowError      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(value,  option,  value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(value,  option,  value);	  addValue(value,    option);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	126	None	replace
918	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  final  List  <  Option>  valueList  =  new  ArrayList  <  Option>();  values.put(option,  valueList);  }  [CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  final  List  <  Option>  valueList  =  new  ArrayList  <  Option>();  values.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList.add(option);  }  else  {  final  List  <  Option>  valueList  =  new  ArrayList  <  Option>();  values.put(option,  valueList);  }	          valueList.add(option);    valueList.add(option);    	non-compiled	[CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)	12	None	replace
919	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(0,  null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.add(0,  null);	          valueList.add(null);    valueList.add(null);    	compilable	  [FE]  NullPointerException  	51	2	replace
920	[BUG]  [BUGGY]  valueList.add(0,  null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(0,  null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(0,  null);	          valueList.add(null);    valueList.add(null);    	compilable	  [FE]  NullPointerException  	51	2	replace
921	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  value);  }  if(defaultValues!=  null)  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    value);    }    if(defaultValues!=  null)  {  defaultValues.add(option);  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
922	[BUG]  [BUGGY]  valueList.add(this);  =(ValueList)valueList.clone();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  =(ValueList)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  =(ValueList)valueList.clone();	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.clone();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
923	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  [CE]  package  junit  does  not  exist  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(junit.framework.ComparisonFailure!=  null)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    new    ArrayList    <    String>();    	non-compiled	[CE]  package  junit  does  not  exist	139	None	replace
924	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }  [CE]  package  junit  does  not  exist  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(junit.framework.ComparisonFailure  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(junit.framework.ComparisonFailure  ==  null)  {  valueList  =  new  ArrayList  <  String>();  }	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    new    ArrayList    <    String>();    	non-compiled	[CE]  package  junit  does  not  exist	139	None	replace
925	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  return;  }  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(junit.framework.ComparisonFailure!=  null)  {  valueList  =  new  ArrayList  <  String>();  }  else  {  return;  }	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    new    ArrayList    <    String>();    	non-compiled	[CE]  package  junit  does  not  exist	139	None	replace
926	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.put(entry.getKey(),  entry.getValue());  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.put(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  values.entrySet())  {  valueList.put(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    values.put(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  incompatible  types	46	None	replace
927	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ==  [Delete]  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	==  [Delete]	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
928	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  >>  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	>>	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
929	[BUG]  [BUGGY]  >=  [Delete]  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  >=  [Delete]  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	>=  [Delete]	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
930	[BUG]  [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    addValue(option,  valueList);  if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        addValue(option,    valueList);    if(option  instanceof  Argument)  {  addValue(option,  valueList);  addValue(option,  valueList);  }  else  {  defaultValues.add(option);  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
931	[BUG]  [BUGGY]  ArrayList  <  String>  valueList  =  new  ArrayList  <  String>();  [CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ArrayList  <  String>  valueList  =  new  ArrayList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ArrayList  <  String>  valueList  =  new  ArrayList  <  String>();	  valueList    =    new    ArrayList    <    String>();    ValueList    <    String>    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  valueList  is  already  defined  in  method  addValue(Option,Object)	62	None	replace
932	[BUG]  [BUGGY]  addValue(valueList,  value,  option);  [CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(valueList,  value,  option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(valueList,  value,  option);	  addValue(option,    valueList,    value);    	non-compiled	[CE]  method  addValue  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	101	None	replace
933	[BUG]  [BUGGY]  Value  value  =  options.values();  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  options.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  options.values();	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
934	[BUG]  [BUGGY]  Value  value  =  option.values();  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Value  value  =  option.values();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Value  value  =  option.values();	  Value    value    =    valueList.values();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
935	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  else  {  options.put(option,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  else  {  options.put(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  valueList  =  new  ArrayList(valueList.size()));  }  else  {  options.put(option,  option);  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size()));    	non-compiled	[CE]  ';'  expected	151	None	replace
936	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.remove(option);  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList.add(option);    valueList.remove(option);  valueList.add(option);	  	compilable	  [FE]  NullPointerException  	11	2	add
937	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.remove(option);  valueList.add(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.remove(option);  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList.add(option);    valueList.remove(option);  valueList.add(option);	  	compilable	  [FE]  NullPointerException  	11	2	add
938	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
939	[BUG]  [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  values);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	19	2	add
940	[BUG]  [BUGGY]  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  {  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	{	  if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    values.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
941	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  values);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  values);  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
942	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  values);  return;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  values);  return;  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    addValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  values);  return;  }	  	compilable	  [FE]  StackOverflowError  	123	2	add
943	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  Object  value  =  defaultValues.get(option);  [CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  return;  }  Object  value  =  defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    return;    }    Object  value  =  defaultValues.get(option);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  addValue(Option,Object)	123	None	add
944	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valuesList.entrySet())  {  addValue(entry.getKey());  }  [CE]  cannot  find  symbol  valuesList  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valuesList.entrySet())  {  addValue(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valuesList.entrySet())  {  addValue(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol  valuesList	47	None	replace
945	[BUG]  [BUGGY]  valueList  =  new  TreeSet(valueList.size());  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  TreeSet(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  TreeSet(valueList.size());	  valueList    =    new    TreeSet();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
946	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)this.valueList.get(this);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ValueList  valueList  =(ValueList)this.valueList.get(this);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	ValueList  valueList  =(ValueList)this.valueList.get(this);	          valueList.add(this);    ValueList    valueList    =(ValueList)valueList.get(this);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
947	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
948	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
949	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
950	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
951	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  defaultValues.add(option);  }	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
952	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
953	[BUG]  [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  addValue(option,  value);  if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	addValue(option,    value);    if(value  instanceof  Argument)  {  addValue(option,  value);  }  else  {  values.put(option,  value);  }	  	compilable	  [FE]  StackOverflowError  	68	2	add
954	[BUG]  [BUGGY]  read()  {  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  read()  {  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	read()  {  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  addValue(entry.getKey(),  entry.getValue());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    valueList.entrySet())    {    addValue(entry.getKey(),    entry.getValue());    }    	non-compiled	[CE]  ';'  expected	45	None	replace
955	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  value;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  value;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    junit.framework.ComparisonFailure:  value;	  	non-compiled	[CE]  not  a  statement	156	None	add
956	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  values;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(1);  junit.framework.ComparisonFailure:  values;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(1);    junit.framework.ComparisonFailure:  values;	  	non-compiled	[CE]  not  a  statement	156	None	add
957	[BUG]  [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	validateValue(option,  valueList);  if(valueList!=  null)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	          addValue(option,    valueList);    if(valueList!=    null)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
958	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(this);        valueList.add(this);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	70	2	add
959	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(this);        valueList.add(this);    valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	70	2	add
960	[BUG]  [BUGGY]  ||  valueList.size()  <  2)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  <  2)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  <  2)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
961	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(Value);  valueList.add(Value);  [CE]  cannot  find  symbol  Value  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(Value);  valueList.add(Value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    valueList.add(Value);  valueList.add(Value);	  	non-compiled	[CE]  cannot  find  symbol  Value	35	None	add
962	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(key);  valueList.add(value);  [CE]  cannot  find  symbol  key  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(key);  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    valueList.add(key);  valueList.add(value);	  	non-compiled	[CE]  cannot  find  symbol  key	35	None	add
963	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(option);  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.add(value);    valueList.add(option);  valueList.add(value);	  	compilable	  [FE]  NullPointerException  	35	2	add
964	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(option);  valueList.add(value);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(option);  valueList.add(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.add(value);    valueList.add(option);  valueList.add(value);	  	compilable	  [FE]  NullPointerException  	35	2	add
965	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
966	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.add(null);	  	compilable	  [FE]  NullPointerException  	50	2	add
967	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(null);        valueList.add(null);    valueList.add(option);	  	compilable	  [FE]  NullPointerException  	50	2	add
968	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(option);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.add(option);	  	compilable	  [FE]  NullPointerException  	50	2	add
969	[BUG]  [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  keyList.add(null);  [CE]  cannot  find  symbol  keyList  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(null);    valueList.add(null);  valueList.add(null);  keyList.add(null);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(null);        valueList.add(null);    valueList.add(null);  keyList.add(null);	  	non-compiled	[CE]  cannot  find  symbol  keyList	50	None	add
970	[BUG]  [BUGGY]  valueList.add(this);  Value  valueList  =(Value)valueList.clone();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(this);  Value  valueList  =(Value)valueList.clone();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(this);  Value  valueList  =(Value)valueList.clone();	          valueList.add(value);    Value    valueList    =(Value)valueList.clone();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
971	[BUG]  [BUGGY]  valueList.size()  <  =  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.size()  <  =  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.size()  <  =  0)  {  for(Option  option  :  valueList.values())  {  addOption(option,  value);  }	  valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addOption(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
972	[BUG]  [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  junit.framework.ComparisonFailure:  value;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList    =    new    ArrayList    <    String>();    valueList  =  new  ArrayList  <  String>();  junit.framework.ComparisonFailure:  value;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList        =        new        ArrayList        <        String>();        valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:  value;	  	non-compiled	[CE]  not  a  statement	59	None	add
973	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	5	None	add
974	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
975	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  StackOverflowError  	5	2	add
976	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    0)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  0)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
977	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  LinkedList  <  String>();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  junit.framework.ComparisonFailure:  valueList  =  new  LinkedList  <  String>();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	junit.framework.ComparisonFailure:  valueList  =  new  LinkedList  <  String>();	  valueList    =    new    ArrayList    <    String>();    junit.framework.ComparisonFailure:    valueList    =    new    ArrayList    <    String>();    	non-compiled	[CE]  not  a  statement	134	None	replace
978	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues  =  new  ArrayList();  values.put(option,  value);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	43	None	add
979	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	43	2	add
980	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =(List)defaultValues.get(option);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  valueList  =(List)defaultValues.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    valueList  =(List)defaultValues.get(option);	  	compilable	  [FE]  NullPointerException  	43	2	add
981	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
982	[BUG]  [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  valueList);  }  if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        if(valueList!=    null)    {    valueList.add(value);    }    else    {    defaultValues.put(option,    valueList);    }    if(defaultValues!=  null)  {  defaultValues.put(option,  value);  }	  	compilable	  [FE]  NullPointerException  	43	2	add
983	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  IllegalArgumentException  	85	2	replace
984	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  IllegalArgumentException  	85	2	replace
985	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  return;  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	85	2	replace
986	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  return;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList(valueList.size());  }  else  {  return;  }	  valueList    =    new    ArrayList(valueList.size());    valueList    =    new    ArrayList(valueList.size());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	85	2	replace
987	[BUG]  [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueUtils.setValue(valueList,  valueList.size()  -  1);  [CE]  cannot  find  symbol  ValueUtils  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  ArrayList  <  String>(valueList.size());  ValueUtils.setValue(valueList,  valueList.size()  -  1);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList    =    new    ArrayList    <    String>(valueList.size());    ValueUtils.setValue(valueList,  valueList.size()  -  1);	  	non-compiled	[CE]  cannot  find  symbol  ValueUtils	77	None	add
988	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.remove(value);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.remove(value);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
989	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.remove(value);  valueList  =  new  ArrayList();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.remove(value);  valueList  =  new  ArrayList();  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.remove(value);  valueList  =  new  ArrayList();	  	compilable	  [FE]  NullPointerException  	129	2	add
990	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  valueList.remove(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList.add(defaultValues);    valueList.remove(defaultValues);	  	compilable	  [FE]  NullPointerException  	119	2	add
991	[BUG]  [BUGGY]  valueList.add(defaultValues);  valueList.remove(defaultValues);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  valueList.remove(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    valueList.remove(defaultValues);	  	compilable	  [FE]  NullPointerException  	119	2	add
992	[BUG]  [BUGGY]  valueList.add(defaultValues);  ValueUtils.checkNotNull(valueList);  [CE]  cannot  find  symbol  ValueUtils  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  ValueUtils.checkNotNull(valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    ValueUtils.checkNotNull(valueList);	  	non-compiled	[CE]  cannot  find  symbol  ValueUtils	119	None	add
993	[BUG]  [BUGGY]  valueList.add(defaultValues);  values.add(defaultValues);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.add(defaultValues);  values.add(defaultValues);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.add(defaultValues);    values.add(defaultValues);	  	non-compiled	[CE]  cannot  find  symbol	119	None	add
994	[BUG]  [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          addValue(option,    valueList);    if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                addValue(option,        valueList);        if(valueList.size()    >    1)    {    addValue(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    addValue(option,  valueList);  if(valueList.size()  >  1)  {  addValue(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
995	[BUG]  [BUGGY]  valueList  =  new  TreeMap(valueList.size());  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =  new  TreeMap(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  TreeMap(valueList.size());	  valueList    =    new    LinkedList(valueList.size());    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
996	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }	          valueList.add(option);    valueList.remove(option);    	compilable	  [FE]  NullPointerException  	159	2	replace
997	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }	          valueList.add(option);    valueList.remove(option);    	compilable	  [FE]  NullPointerException  	159	2	replace
998	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  values.values())  {  addValue(option,  value);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  values.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  values.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
999	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  options.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
1000	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  if(valueList!=    null)    {    for(Option    option    :    values.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
1001	[BUG]  [BUGGY]  Option  option  =(Option)this.valueList.get(0);  [CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  Option  option  =(Option)this.valueList.get(0);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	Option  option  =(Option)this.valueList.get(0);	  Option    option    =(Option)valueList.get(0);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addValue(Option,Object)	58	None	replace
1002	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(valueList  ==  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
1003	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(valueList  ==  null)  {  valueList.add(option);  valueList  =(List)values.get(option);  }	          valueList.add(option);    valueList    =(List)values.get(option);    	compilable	  [FE]  NullPointerException  	114	2	replace
1004	[BUG]  [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  valueList.add(entry.getKey());  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  valueList.add(entry.getKey());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	for(Map.Entry  <  String,Object>  entry  :  valueList.entrySet())  {  valueList.add(entry.getKey());  }	          if(valueList.size()    >    0)    {    for(Map.Entry    <    String,Object>    entry    :    values.entrySet())    {    valueList.add(entry.getKey());    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1005	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  valueList.values())  {  addOption(option);  }  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  valueList.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  valueList.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  ';'  expected	154	None	replace
1006	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  options.values())  {  addOption(option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  options.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  options.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  ';'  expected	154	None	replace
1007	[BUG]  [BUGGY]  forceValues()  {  for(Option  option  :  values.values())  {  addOption(option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  forceValues()  {  for(Option  option  :  values.values())  {  addOption(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	forceValues()  {  for(Option  option  :  values.values())  {  addOption(option);  }	          if(valueList!=    null)    {    for(Option    option    :    valueList.values())    {    addOption(option);    }    	non-compiled	[CE]  ';'  expected	154	None	replace
1008	[BUG]  [BUGGY]  ||  valueList.size()  <  2)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  ||  valueList.size()  <  2)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	||  valueList.size()  <  2)  {  for(Option  option  :  valueList.values())  {  addValue(option,  value);  }	  ||    valueList.size()    >    0)    {    for(Option    option    :    valueList.values())    {    addValue(option,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1009	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList.remove(option);  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(option);        valueList    =(List)values.get(option);    valueList.remove(option);  valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	113	2	add
1010	[BUG]  [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList.remove(option);  valueList  =(List)values.get(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(option);    valueList  =(List)values.get(option);  valueList.remove(option);  valueList  =(List)values.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(option);        valueList    =(List)values.get(option);    valueList.remove(option);  valueList  =(List)values.get(option);	  	compilable	  [FE]  NullPointerException  	113	2	add
1011	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)defaultSwitches.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =(List)defaultSwitches.get(option);	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
1012	[BUG]  [BUGGY]  valueList  =(List)defaultSwitches.get(option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList  =(List)defaultSwitches.get(option);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =(List)defaultSwitches.get(option);	          valueList.add(option);    if(valueList!=    null)    {    valueList.add(option);    }    else    {    defaultValues.put(option,    values);    }    	compilable	  [FE]  NullPointerException  	20	2	replace
1013	[BUG]  [BUGGY]  valueList.addAll(values);  [CE]  no  suitable  method  found  for  addAll(Map)  [FE]        NullPointerException      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  valueList.addAll(values);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList.addAll(values);	  valueList.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map)	89	None	replace
1014	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.remove(value);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    valueList.remove(value);  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
1015	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.remove(value);  valueList.remove(value);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.remove(value);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    valueList.remove(value);  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
1016	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(key);  valueList.remove(value);  [CE]  cannot  find  symbol  key  [FE]      NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(key);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    valueList.add(key);  valueList.remove(value);	  	non-compiled	[CE]  cannot  find  symbol  key	136	None	add
1017	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(option);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	                valueList.add(value);        valueList.remove(value);    valueList.add(option);  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
1018	[BUG]  [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(option);  valueList.remove(value);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]          valueList.add(value);    valueList.remove(value);  valueList.add(option);  valueList.remove(value);  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	                valueList.add(value);        valueList.remove(value);    valueList.add(option);  valueList.remove(value);	  	compilable	  [FE]  NullPointerException  	136	2	add
1019	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	38	2	replace
1020	[BUG]  [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {      [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  [BUGGY]      valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }	          valueList.add(value);    if(valueList!=    null)    {    valueList    =    new    ArrayList();    values.put(option,    value);    }    	compilable	  [FE]  NullPointerException  	38	2	replace
